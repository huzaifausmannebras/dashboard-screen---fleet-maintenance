{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/loading-indicator.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[parseInt(i.toString(), 10)].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[parseInt(i.toString(), 10)]);\n        if (hasChild) {\n            datas.push(records[parseInt(i.toString(), 10)]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords.filter(function (item) { return !item.isSummaryRow; });\n        var keys = Object.keys(childRecords);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            datas.push(childRecords[parseInt(i.toString(), 10)]);\n            if (childRecords[parseInt(i.toString(), 10)].hasChildRecords ||\n                (!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) &&\n                    childRecords[parseInt(i.toString(), 10)].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[parseInt(i.toString(), 10)]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[parseInt(i.toString(), 10)]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[parseInt(j.toString(), 10)]] = array[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[\"\" + idFilter][\"\" + value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[\"\" + id][\"\" + value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[\"\" + addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[parseInt(k.toString(), 10)][\"\" + key]) === 'object') {\n                modifiedData[parseInt(k.toString(), 10)] = modifiedData[parseInt(k.toString(), 10)][\"\" + key];\n            }\n            var keys = modifiedData[parseInt(k.toString(), 10)].taskData ?\n                Object.keys(modifiedData[parseInt(k.toString(), 10)].taskData) :\n                Object.keys(modifiedData[parseInt(k.toString(), 10)]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[parseInt(i.toString(), 10)][\"\" + key] === modifiedData[parseInt(k.toString(), 10)][\"\" + key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[parseInt(i.toString(), 10)];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[\"\" + control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[\"\" + control.idMapping] === currentData_1[\"\" + control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[\"\" + control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[parseInt(p.toString(), 10)][\"\" + control.idMapping] === currentData_1[\"\" + control.idMapping]) {\n                                        if (!control.enableImmutableMode && parentData.childRecords.length === parentData['Children'].length) {\n                                            parentData['childRecords'].splice(p, 1);\n                                        }\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], keys[parseInt(j.toString(), 10)]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[\"\" + changedRecords].length === 0))\n                                    || keys[parseInt(j.toString(), 10)] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[parseInt(k.toString(), 10)].uniqueID);\n                                    treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]] =\n                                        modifiedData[parseInt(k.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[parseInt(j.toString(), 10)]] = editedData[keys[parseInt(j.toString(), 10)]]\n                                            = treeData[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[\"\" + control.parentIdMapping] = treeData[parseInt(i.toString(), 10)][\"\" + control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[parseInt(i.toString(), 10)], control.childMapping)) {\n                                        treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping] = [];\n                                    }\n                                    treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping])) {\n                    if (removeChildRecords(treeData[parseInt(i.toString(), 10)][\"\" + control.childMapping], modifiedData[parseInt(k.toString(), 10)], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[parseInt(i.toString(), 10)], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[parseInt(addRowIndex.toString(), 10)];\n                if (!isNullOrUndefined(currentdata) && currentdata[\"\" + primaryKeys] === details.value[\"\" + primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[\"\" + internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[parseInt(j.toString(), 10)][\"\" + key] === modifiedData[\"\" + key] ||\n            (isSelfReference && childRecords[parseInt(j.toString(), 10)][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], keys[parseInt(i.toString(), 10)]) &&\n                        (control.editSettings.mode !== 'Cell' || keys[parseInt(i.toString(), 10)] === columnName)) {\n                        editedData[keys[parseInt(i.toString(), 10)]] =\n                            editedData.taskData[keys[parseInt(i.toString(), 10)]] =\n                                childRecords[parseInt(j.toString(), 10)][keys[parseInt(i.toString(), 10)]] =\n                                    modifiedData[keys[parseInt(i.toString(), 10)]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[\"\" + editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[\"\" + editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[\"\" + control.parentIdMapping] = childRecords[parseInt(j.toString(), 10)][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[parseInt(j.toString(), 10)], control.childMapping)) {\n                            childRecords[parseInt(j.toString(), 10)][control.childMapping] = [];\n                        }\n                        childRecords[parseInt(j.toString(), 10)][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[parseInt(j.toString(), 10)][control.childMapping])) {\n            if (removeChildRecords(childRecords[parseInt(j.toString(), 10)][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[parseInt(j.toString(), 10)], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[\"\" + key] === record[\"\" + key]) {\n            index_1 = i;\n            return;\n        } });\n        if (control.enableVirtualization && isNullOrUndefined(index_1)) {\n            var updatedParent = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n            record = updatedParent;\n        }\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[parseInt(index_1.toString(), 10)];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        if (!isSelfReference && !isNullOrUndefined(record.childRecords) && record.childRecords.length) {\n            record.hasChildRecords = true;\n        }\n        else {\n            record.hasChildRecords = false;\n        }\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[\"\" + key] !== child[\"\" + key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[\"\" + control.childMapping].indexOf(childRecords) === -1 && record[\"\" + key] !== child[\"\" + key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[parseInt(i.toString(), 10)][\"\" + primaryKeys] === record[\"\" + primaryKeys]) {\n                data[parseInt(i.toString(), 10)] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            if (action === 'add') {\n                row = control.getRows()[control.grid.getCurrentViewRecords().indexOf(record)];\n            }\n            else {\n                row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[\"\" + key])];\n            }\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[parseInt(index_2.toString(), 10)] ? row.cells[parseInt(index_2.toString(), 10)]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n            if (control.enableImmutableMode && control['action'] === 'indenting' || control['action'] === 'outdenting') {\n                control.renderModule.RowModifier({\n                    data: record, row: row\n                });\n            }\n        }\n    }\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { merge, Property } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    /**\n     * Update the State changes reflected for TreeGrid columndirective in react platform.\n     *\n     * @param {Column} column - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Column.prototype.setProperties = function (column) {\n        //Angular two way binding\n        var keys = Object.keys(column);\n        for (var i = 0; i < keys.length; i++) {\n            this[keys[parseInt(i.toString(), 10)]] = column[keys[parseInt(i.toString(), 10)]];\n            //Refresh the react columnTemplates on state change\n            if (this.parent && this.parent['isReact'] && keys[parseInt(i.toString(), 10)] === 'template') {\n                var refreshReactColumnTemplateByUid = 'refreshReactColumnTemplateByUid';\n                this.parent.clipboardModule['treeGridParent'].renderModule[\"\" + refreshReactColumnTemplateByUid](this.uid);\n            }\n        }\n    };\n    return Column;\n}());\nexport { Column };\n/**\n * Defines TreeGrid column\n */\nvar TreeGridColumn = /** @class */ (function (_super) {\n    __extends(TreeGridColumn, _super);\n    function TreeGridColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], TreeGridColumn.prototype, \"columns\", void 0);\n    return TreeGridColumn;\n}(Column));\nexport { TreeGridColumn };\n/**\n * Defines stacked tree grid column\n */\nvar StackedColumn = /** @class */ (function (_super) {\n    __extends(StackedColumn, _super);\n    function StackedColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StackedColumn;\n}(TreeGridColumn));\nexport { StackedColumn };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the Loading Indicator of the Tree Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar IsRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (IsRowDDEnabled && type[parseInt(i.toString(), 10)] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    IsRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[parseInt(i.toString(), 10)] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'primary_column_missing' || type[parseInt(i.toString(), 10)] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[parseInt(i.toString(), 10)] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[parseInt(i.toString(), 10)] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            IsRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[parseInt(i.toString(), 10)]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent, serviceLocator) {\n        var _this = _super.call(this, parent.grid, serviceLocator) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        _this.serviceLocator = serviceLocator;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[\"\" + copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[parseInt(i.toString(), 10)]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[parseInt(i.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader, i);\n                            }\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[\"\" + copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[parseInt(i.toString(), 10)], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] =\n                            this.treeGridParent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this[\"\" + getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[\"\" + copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[\"\" + isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem])) {\n            var treeLevel = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem]) &&\n                        currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[parseInt(selectedIndex.toString(), 10)].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[\"\" + copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[\"\" + copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[\"\" + copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + hasChildRecords]) {\n            var childData = currentRecords[parseInt(selectedIndex.toString(), 10)][\"\" + childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) && currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID] === childData[parseInt(i.toString(), 10)][\"\" + uniqueID]) {\n                        if ((!isNullOrUndefined(rows[parseInt(j.toString(), 10)])) && !rows[parseInt(j.toString(), 10)].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[parseInt(j.toString(), 10)].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[parseInt(j.toString(), 10)][\"\" + uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[\"\" + getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[\"\" + copyContent]);\n                                this[\"\" + copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var destroy = 'destroy';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n/** @hidden */\nexport var autoCol = 'auto-col';\n/** @hidden */\nexport var rowDeselecting = 'rowDeselecting';\n/** @hidden */\nexport var headerContent = 'e-headercontent';\n/** @hidden */\nexport var movableContent = 'e-movablecontent';\n/** @hidden */\nexport var movableHeader = 'e-movableheader';\n/** @hidden */\nexport var frozenContent = 'e-frozencontent';\n/** @hidden */\nexport var frozenHeader = 'e-frozenheader';\n/** @hidden */\nexport var content = 'e-content';\n/** @hidden */\nexport var table = 'e-table';\n/** @hidden */\nexport var leftRight = 'Left-Right';\n/** @hidden */\nexport var frozenRight = 'frozen-right';\n/** @hidden */\nexport var frozenLeft = 'frozen-left';\n/** @hidden */\nexport var dataColIndex = 'data-colindex';\n/** @hidden */\nexport var ariaColIndex = 'aria-colindex';\n/** @hidden */\nexport var dataRowIndex = 'data-rowindex';\n/** @hidden */\nexport var ariaRowIndex = 'aria-rowindex';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && this.parent.enableVirtualization && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                var chkstate = checkState === 'check' ? 'checked' : checkState === 'uncheck' ? 'unchecked' : 'mixed';\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend, CellRenderer } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed && !isNullOrUndefined(args.row)) {\n                args.row.style.display = 'none';\n                var rowsObj = this.parent.grid.getRowsObject();\n                if (!this.parent.grid.isFrozenGrid() && !isNullOrUndefined(args.row.getAttribute('data-uid'))) {\n                    rowsObj.filter(function (e) { return e.uid === args.row.getAttribute('data-uid'); })[0].visible = false;\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0 && !parentrec[0].isSummaryRow && !isNullOrUndefined(args.row)) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (!isNullOrUndefined(args.row)) {\n            if (args.row.querySelector('.e-treegridexpand')) {\n                args.row.setAttribute('aria-expanded', 'true');\n            }\n            else if (args.row.querySelector('.e-treegridcollapse')) {\n                args.row.setAttribute('aria-expanded', 'false');\n            }\n            if (this.parent.enableCollapseAll && this.parent.initialRender) {\n                if (!isNullOrUndefined(data.parentItem)) {\n                    args.row.style.display = 'none';\n                }\n            }\n        }\n        var dragStartData = 'dragStartData';\n        var draggedRecord = 'draggedRecord';\n        if (this.parent.rowDragAndDropModule && this.parent.grid.rowDragAndDropModule && (this.parent.grid.rowDragAndDropModule[\"\" + dragStartData] ||\n            this.parent.rowDragAndDropModule[\"\" + draggedRecord]) && this.parent.getContentTable().scrollHeight <= this.parent.getContent().clientHeight) {\n            var lastRowBorder = 'lastRowBorder';\n            var lastVisualData = this.parent.getVisibleRecords()[this.parent.getVisibleRecords().length - 1];\n            if (lastVisualData.uniqueID === args.data.uniqueID && !isNullOrUndefined(args.row) && !args.row.cells[0].classList.contains('e-lastrowcell')) {\n                this.parent[\"\" + lastRowBorder](args.row, true);\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        var columnIndex;\n        var getVirtualColIndexByUid = 'getVirtualColIndexByUid';\n        if (this.parent.enableColumnVirtualization && !this.parent.initialRender) {\n            columnIndex = this.parent[\"\" + getVirtualColIndexByUid](args.column.uid);\n        }\n        else {\n            columnIndex = grid.getColumnIndexByUid(args.column.uid);\n        }\n        if (columnIndex === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                if (this.parent['isFromGantt'] && !this.parent.loadChildOnDemand) {\n                    iconRequired = data.hasChildRecords;\n                }\n                else {\n                    iconRequired = !(data.childRecords.length === 0);\n                }\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                args.cell.setAttribute('aria-expanded', data.expanded ? 'true' : 'false');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '4px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        var freeze = (grid.getFrozenLeftColumnsCount() > 0 || grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (!freeze) {\n            if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n                (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                    || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n                grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        else {\n            var freezerightColumns = grid.getFrozenRightColumns();\n            var freezeLeftColumns = grid.getFrozenLeftColumns();\n            var movableColumns = grid.getMovableColumns();\n            if ((freezerightColumns.length > 0) && freezerightColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((freezeLeftColumns.length > 0) && freezeLeftColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n            else if ((movableColumns.length > 0) && movableColumns[0].field === args.column.field) {\n                addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            }\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            summaryData = isNullOrUndefined(summaryData) ? null : summaryData;\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                if (args.column.template) {\n                    args.cell.innerHTML = null;\n                }\n                else {\n                    args.cell.innerHTML = summaryData;\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('data-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            args.column.template = treeColumn.template;\n            args.column[\"\" + templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[\"\" + templateFn](args.data, this.parent, 'columnTemplate', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[\"\" + portals])) {\n                        this.parent.grid[\"\" + portals] = this.parent[\"\" + portals];\n                    }\n                    this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n                    this.parent[\"\" + renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[\"\" + templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[\"\" + str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[\"\" + templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Render.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.parent.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.parent.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rowsObj = _this.parent.grid.getRowsObject();\n                var indent = _this.parent.grid.getIndentCount();\n                var cellIndex = _this.parent.grid.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rowsObj.length; j++) {\n                    if (rowsObj[parseInt(j.toString(), 10)].isDataRow && !isNullOrUndefined(rowsObj[parseInt(j.toString(), 10)].index)) {\n                        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                        var cellRenderer = new CellRenderer(_this.parent.grid, _this.parent.grid.serviceLocator);\n                        var td = _this.parent.getCellFromIndex(rowsObj[parseInt(j.toString(), 10)].index, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj[parseInt(j.toString(), 10)].data, { index: rowsObj[parseInt(j.toString(), 10)][\"\" + rowIdx] });\n                        var treecell = _this.parent.getRows()[parseInt(j.toString(), 10)]\n                            .cells[parseInt(cellIndex.toString(), 10)];\n                        _this.cellRender({ data: rowsObj[parseInt(j.toString(), 10)].data, cell: treecell, column: cell.column });\n                    }\n                }\n            });\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[\"\" + portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[\"\" + portals]);\n        this.parent[\"\" + renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req;\n                        if (e.result) {\n                            req = 0;\n                        }\n                        else {\n                            req = 1;\n                        }\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            var keys = Object.keys(data);\n            for (var i = 0; i < keys.length; i++) {\n                var tempData = data[parseInt(i.toString(), 10)];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[parseInt(i.toString(), 10)];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[parseInt(index.toString(), 10)][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[\"\" + isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var actionArgs = 'actionArgs';\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && args[\"\" + actionArgs].requestType === 'virtualscroll') {\n            this.parent.hideSpinner();\n        }\n        var records = args.result;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && (args[\"\" + actionArgs].requestType === 'virtualscroll' || args[\"\" + actionArgs].action === 'clearFilter' || args[\"\" + actionArgs].searchString === '')) {\n            this.parent.query.expands = [];\n        }\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                var _loop_1 = function (rec) {\n                    if (isCountRequired(this_1.parent) && records[parseInt(rec.toString(), 10)].hasChildRecords &&\n                        this_1.parent.initialRender) {\n                        records[parseInt(rec.toString(), 10)].expanded = false;\n                    }\n                    if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization) {\n                        var childRecords_1 = [];\n                        var parent_1 = this_1.parent;\n                        records.filter(function (e) {\n                            if (e[\"\" + parent_1.parentIdMapping] === records[parseInt(rec.toString(), 10)][\"\" + parent_1.idMapping]) {\n                                childRecords_1.push(e);\n                            }\n                        });\n                        if (childRecords_1.length) {\n                            records[parseInt(rec.toString(), 10)].expanded = true;\n                        }\n                        else if (records[parseInt(rec.toString(), 10)].hasChildRecords) {\n                            records[parseInt(rec.toString(), 10)].expanded = false;\n                        }\n                    }\n                    if (isNullOrUndefined(records[parseInt(rec.toString(), 10)].index)) {\n                        records[parseInt(rec.toString(), 10)].taskData = extend({}, records[parseInt(rec.toString(), 10)]);\n                        records[parseInt(rec.toString(), 10)].uniqueID = getUid(this_1.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[parseInt(rec.toString(), 10)].uniqueID, records[parseInt(rec.toString(), 10)], this_1.parent);\n                        records[parseInt(rec.toString(), 10)].level = 0;\n                        if (isRemoteData(this_1.parent) && this_1.parent.enableVirtualization && records[parseInt(rec.toString(), 10)][\"\" + this_1.parent.parentIdMapping] && records[parseInt(rec.toString(), 10)].level === 0) {\n                            records[parseInt(rec.toString(), 10)].level = records[parseInt(rec.toString(), 10)].level + 1;\n                        }\n                        records[parseInt(rec.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        if ((records[parseInt(rec.toString(), 10)][this_1.parent.hasChildMapping] ||\n                            this_1.parentItems.indexOf(records[parseInt(rec.toString(), 10)][this_1.parent.idMapping]) !== -1)) {\n                            records[parseInt(rec.toString(), 10)].hasChildRecords = true;\n                        }\n                        records[parseInt(rec.toString(), 10)].checkboxState = 'uncheck';\n                    }\n                };\n                var this_1 = this;\n                for (var rec = 0; rec < records.length; rec++) {\n                    _loop_1(rec);\n                }\n            }\n            else {\n                var dataResults = 'dataResults';\n                var expandRecord = 'expandRecord';\n                if (!isNullOrUndefined(records) && !((this.parent.loadChildOnDemand) && isCountRequired(this.parent) && !isNullOrUndefined(this.parent[\"\" + dataResults][\"\" + expandRecord])) &&\n                    !(isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        if (isRemoteData(this.parent) && this.parent.loadChildOnDemand && args[\"\" + actionArgs].isExpandCollapse && this.parent.enableVirtualization) {\n            args.result = records;\n        }\n        else if (isRemoteData(this.parent) && this.parent.enableVirtualization && !this.parent.loadChildOnDemand) {\n            args.result = records;\n        }\n        else {\n            args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        }\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization && this.parent.loadChildOnDemand\n            && this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var query = 'query';\n            var summaryQuery = args[\"\" + query].queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            args.result = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        var name = 'name';\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[parseInt(i.toString(), 10)].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[parseInt(i.toString(), 10)].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ?\n                        this.parent.grid.getCurrentViewRecords()[rowDetails.rows[parseInt(i.toString(), 10)].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ action: rowDetails[\"\" + name], record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        if (this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n            qry.take(this.parent.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('ExpandingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        else if (this.parent.enableVirtualization && rowDetails.action === 'collapse') {\n            qry.take(this.parent.grid.pageSettings.pageSize);\n            var expandDetail = [];\n            expandDetail.push('CollapsingAction', parseInt(rowDetails.record[this.parent.idMapping], 10).toString());\n            qry.expand(expandDetail);\n        }\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        if (rowDetails.action === 'remoteExpand' && this.parent.grid.filterModule && this.parent.grid.filterModule['value']) {\n            var filterqry = this.parent.grid.getDataModule().generateQuery().queries.filter(function (e) { return e.fn !== 'onPage' && typeof e.e.predicates !== 'undefined'; });\n            qry.queries.push(filterqry[0]);\n        }\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var remoteExpandedData = 'remoteExpandedData';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            var level = 'level';\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx;\n            var idMapping = _this.parent.idMapping;\n            if (_this.parent['isGantt'] && !_this.parent.loadChildOnDemand && _this.parent.hasChildMapping) {\n                for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                    if (rowDetails.record[idMapping] === _this.parent.grid.currentViewData[i][idMapping]) {\n                        inx = i;\n                        break;\n                    }\n                }\n            }\n            else {\n                inx = datas.indexOf(rowDetails.record);\n            }\n            if (_this.parent.enableVirtualization && (rowDetails.action === 'collapse' || rowDetails.action === 'remoteExpand')) {\n                datas = [];\n                for (var i = 0; i < inx; i++) {\n                    datas.push(_this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                }\n            }\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            var resultChildData = [];\n            if (rowDetails.action === 'remoteExpand' && _this.parent.grid.filterModule && _this.parent.grid.filterModule['value']) {\n                for (var i = 0; i < datas.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(datas[parseInt(i.toString(), 10)], _this.parent.parentIdMapping) && datas[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] !== null && datas[parseInt(i.toString(), 10)].level === 0) {\n                        datas.splice(i, 1);\n                        i--;\n                    }\n                }\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping]) {\n                        if (Object.prototype.hasOwnProperty.call(result, i)) {\n                            resultChildData.push(result[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n                result = resultChildData;\n            }\n            if (_this.parent.enableVirtualization && rowDetails.action === 'remoteExpand') {\n                rowDetails.record.childRecords = [];\n                for (var i = 0; i < result.length; i++) {\n                    if (rowDetails.record['' + _this.parent.idMapping] !== result[parseInt(i.toString(), 10)]['' + _this.parent.idMapping] &&\n                        rowDetails.record['' + _this.parent.idMapping] === result[parseInt(i.toString(), 10)]['' + _this.parent.parentIdMapping] && Object.prototype.hasOwnProperty.call(result, i)) {\n                        rowDetails.record.childRecords.push(result[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n            else {\n                rowDetails.record.childRecords = result;\n            }\n            for (var r = 0; r < result.length; r++) {\n                if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'remoteExpand') {\n                    _this.parent[\"\" + remoteExpandedData].push(rowDetails.record);\n                }\n                else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action === 'collapse') {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            _this.parent[\"\" + remoteExpandedData].splice(i, 1);\n                        }\n                    }\n                }\n                result[parseInt(r.toString(), 10)].taskData = extend({}, result[parseInt(r.toString(), 10)]);\n                if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] && _this.parent.enableVirtualization && _this.parent[\"\" + remoteExpandedData].length) {\n                    for (var i = 0; i < _this.parent[\"\" + remoteExpandedData].length; i++) {\n                        if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping] === _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)][\"\" + level] + 1;\n                            var parentData = _this.parent[\"\" + remoteExpandedData][parseInt(i.toString(), 10)];\n                            delete parentData.childRecords;\n                            result[parseInt(r.toString(), 10)].parentItem = parentData;\n                            result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                        }\n                    }\n                }\n                else if (_this.parent.enableVirtualization) {\n                    if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                        _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                        if (isNullOrUndefined(result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping])) {\n                            result[parseInt(r.toString(), 10)].level = 0;\n                            if (rowDetails.action === 'remoteExpand') {\n                                result[parseInt(r.toString(), 10)].childRecords = [];\n                                result[parseInt(r.toString(), 10)].childRecords = rowDetails.record.childRecords;\n                            }\n                        }\n                        else {\n                            result[parseInt(r.toString(), 10)].level = rowDetails.record.level;\n                        }\n                    }\n                    else {\n                        var parentData = extend({}, rowDetails.record);\n                        delete parentData.childRecords;\n                        result[parseInt(r.toString(), 10)].parentItem = parentData;\n                        result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                    }\n                }\n                else {\n                    result[parseInt(r.toString(), 10)].level = rowDetails.record.level + 1;\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[parseInt(r.toString(), 10)].parentItem = parentData;\n                    result[parseInt(r.toString(), 10)].parentUniqueID = rowDetails.record.uniqueID;\n                }\n                result[parseInt(r.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                result[parseInt(r.toString(), 10)].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[parseInt(r.toString(), 10)].checkboxState = 'uncheck';\n                if (_this.parent.enableVirtualization && isNullOrUndefined(result[parseInt(r.toString(), 10)].level)) {\n                    for (var p = 0; p < _this.parent.grid.currentViewData.length; p++) {\n                        if (_this.parent.grid.currentViewData[parseInt(p.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.parentIdMapping]) {\n                            result[parseInt(r.toString(), 10)].level = _this.parent.grid.currentViewData[parseInt(p.toString(), 10)]['level'] + 1;\n                        }\n                    }\n                }\n                setValue('uniqueIDCollection.' + result[parseInt(r.toString(), 10)].uniqueID, result[parseInt(r.toString(), 10)], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[parseInt(r.toString(), 10)][\"\" + _this.parent.hasChildMapping] ||\n                    _this.parentItems.indexOf(result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[parseInt(r.toString(), 10)])) {\n                    result[parseInt(r.toString(), 10)].hasChildRecords = true;\n                    if (_this.parent.enableVirtualization && _this.parent.loadChildOnDemand) {\n                        for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                            if (result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                result[parseInt(r.toString(), 10)].expanded = _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)]['expanded'];\n                            }\n                        }\n                        if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] !== rowDetails.record[\"\" + _this.parent.idMapping] && result[parseInt(r.toString(), 10)].expanded !== false) {\n                            result[parseInt(r.toString(), 10)].expanded = true;\n                        }\n                        else if (rowDetails.action === 'collapse' && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                            result[parseInt(r.toString(), 10)].expanded = false;\n                            _this.parent[\"\" + remoteCollapsedData].push(rowDetails.record);\n                        }\n                        else if (rowDetails.action === 'remoteExpand') {\n                            for (var i = 0; i < _this.parent.grid.currentViewData.length; i++) {\n                                if (_this.parent.grid.currentViewData[parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping] === result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                    result.splice(r, 1, _this.parent.grid.currentViewData[parseInt(i.toString(), 10)]);\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)][_this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping]) {\n                                for (var i = 0; i < _this.parent[\"\" + remoteCollapsedData].length; i++) {\n                                    if (rowDetails.record[\"\" + _this.parent.idMapping] === _this.parent[\"\" + remoteCollapsedData][parseInt(i.toString(), 10)][\"\" + _this.parent.idMapping]) {\n                                        _this.parent[\"\" + remoteCollapsedData].splice(i, 1);\n                                    }\n                                }\n                            }\n                            if (result[parseInt(r.toString(), 10)].expanded !== false) {\n                                result[parseInt(r.toString(), 10)].expanded = true;\n                            }\n                        }\n                    }\n                    else if (_this.parent.enableVirtualization && result[parseInt(r.toString(), 10)][\"\" + _this.parent.idMapping] === rowDetails.record[\"\" + _this.parent.idMapping] && rowDetails.action !== 'collapse') {\n                        result[parseInt(r.toString(), 10)].expanded = true;\n                    }\n                    else if (!(_this.parent.enableVirtualization && _this.parent.loadChildOnDemand)) {\n                        result[parseInt(r.toString(), 10)].expanded = false;\n                    }\n                }\n                datas.splice(inx + r + 1, 0, result[parseInt(r.toString(), 10)]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[\"\" + result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[\"\" + result_1], true);\n                }\n            }\n            if (_this.parent.enableVirtualization) {\n                _this.parent.grid.pageSettings.totalRecordsCount = e.count;\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n        if (isRemoteData(this.parent) && this.parent.enableVirtualization) {\n            var index = this.parent.query.queries.indexOf(this.parent.query.queries.filter(function (q) { return q.fn === 'onSortBy'; })[0]);\n            if (index !== -1) {\n                this.parent.query.queries.splice(index, 1);\n            }\n            if (this.parent.grid.sortSettings.columns.length === 0) {\n                this.parent.query.sortBy(null, null);\n            }\n        }\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        var keys = Object.keys(data);\n        for (var i = 0, len = keys.length; i < len; i++) {\n            var currentData = extend({}, data[parseInt(i.toString(), 10)]);\n            currentData.taskData = data[parseInt(i.toString(), 10)];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if ((!isNullOrUndefined(currentData[this.parent.childMapping]) && !isCountRequired(this.parent)) ||\n                ((currentData[this.parent.hasChildMapping]) && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            var remoteCollapsedData = 'remoteCollapsedData';\n            if (this.parent.enableVirtualization && this.parent.loadChildOnDemand && isRemoteData(this.parent)\n                && !this.parent.initialRender) {\n                if (!currentData.hasChildRecords && isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping])) {\n                    currentData.hasChildRecords = true;\n                    for (var c = 0; c < this.parent[\"\" + remoteCollapsedData].length; c++) {\n                        if (this.parent[\"\" + remoteCollapsedData][parseInt(c.toString(), 10)][\"\" + this.parent.idMapping] === currentData[\"\" + this.parent.idMapping]) {\n                            currentData.expanded = false;\n                        }\n                    }\n                }\n                else if (currentData.level === 0 && isNullOrUndefined(parentRecords) && !currentData.hasChildRecords) {\n                    currentData.level = currentData.level + 1;\n                }\n                if (currentData[\"\" + this.parent.hasChildMapping] && !isNullOrUndefined(currentData[\"\" + this.parent.expandStateMapping])) {\n                    currentData.expanded = currentData[\"\" + this.parent.expandStateMapping];\n                    currentData.hasChildRecords = true;\n                }\n                this.parent.flatData.push(currentData);\n            }\n            else if (isNullOrUndefined(currentData[\"\" + this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n                this.parent['infiniteScrollData'].push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[\"\" + primaryKeyColumnName])) {\n            actionAddArgs.data[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n            dataValue.taskData[\"\" + primaryKeyColumnName] = args.result[actionAddArgs.index][\"\" + primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length) && this.parent.isLocalData)) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var getColumnByField = 'getColumnByField';\n                var col = this.parent.grid.renderModule.data[\"\" + getColumnByField](this.parent.grid.\n                    sortSettings.columns[parseInt(srt.toString(), 10)].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[parseInt(srt.toString(), 10)].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            if (this.parent.allowRowDragAndDrop && !isNullOrUndefined(this.parent.rowDragAndDropModule['draggedRecord']) &&\n                this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                var dragdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                modifiedData.splice(dragdIndex, 1);\n                var dropdIndex = modifiedData.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                if (this.parent.rowDragAndDropModule['droppedRecord'].hasChildRecords && this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                    modifiedData.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n                else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                    modifiedData.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                }\n            }\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[\"\" + isPdfExport] && (isNullOrUndefined(args[\"\" + isCollapsedStatePersist])\n            || args[\"\" + isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[parseInt(i.toString(), 10)], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[parseInt(i.toString(), 10)]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n    ContextMenuItems[ContextMenuItems[\"RowIndent\"] = 16] = \"RowIndent\";\n    ContextMenuItems[ContextMenuItems[\"RowOutdent\"] = 17] = \"RowOutdent\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend, merge, SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { getNumberFormat } from '@syncfusion/ej2-grids';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { LoadingIndicator } from '../models/loading-indicator';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, Query, JsonAdaptor, Deferred, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden, getExpandStatus } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\nimport * as literals from '../base/constant';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.indentOutdentAction = 'indentOutdentAction';\n        _this.modifiedRecords = [];\n        _this.stackedHeader = false;\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'index'];\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[parseInt(i.toString(), 10)]] !== current[keys[parseInt(i.toString(), 10)]] &&\n                        excludeKeys.indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                        var isDate = old[keys[parseInt(i.toString(), 10)]] instanceof Date &&\n                            current[keys[parseInt(i.toString(), 10)]] instanceof Date;\n                        if (!isDate || (old[keys[parseInt(i.toString(), 10)]].getTime() !==\n                            current[keys[parseInt(i.toString(), 10)]].getTime())) {\n                            isEqual = false;\n                            break;\n                        }\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[\"\" + logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * Sends a post request to export tree grid to excel file in server side.\n     *\n     * @param  {string} url - Pass URL for server side excel export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverExcelExport = function (url) {\n        this.isExcel = true;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Sends a post request to export tree grid to pdf file in server side.\n     *\n     * @param  {string} url - Pass URL for server-side pdf export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverPdfExport = function (url) {\n        this.isExcel = false;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Sends a Post request to export Tree Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass URL for server-side csv export action.\n     * @returns {void}\n     */\n    TreeGrid.prototype.serverCsvExport = function (url) {\n        this.isExcel = true;\n        this.exportTreeGrid(url);\n    };\n    /**\n     * Exports the TreeGrid data to the specified URL using a POST request.\n     * @param {string} url - Defines exporting url\n     * @returns {void}\n     */\n    TreeGrid.prototype.exportTreeGrid = function (url) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treegrid = this;\n        var query = treegrid.grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var treeGridModel = JSON.parse(this.addOnPersist(['allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'columns', 'locale', 'searchSettings', 'idMapping', 'parentIdMapping', 'childMapping', 'treeColumnIndex']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        treeGridModel.filterSettings.columns = queries.where;\n        treeGridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        treeGridModel.sortSettings.columns = queries.sorted;\n        treeGridModel.columns = this.setHeaderText(treeGridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var treeGridInput = this.createElement('input', { id: 'treeGridInput', attrs: { name: 'treeGridModel' } });\n        treeGridInput.value = JSON.stringify(treeGridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(treeGridInput);\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * Sets the header text and other properties for an array of columns based on specified criteria.\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     */\n    TreeGrid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n            if (this.stackedHeader && isNullOrUndefined(column)) {\n                column = !isNullOrUndefined(columns[parseInt(i.toString(), 10)].field) ?\n                    this.getColumnByField(columns[parseInt(i.toString(), 10)].field) : columns[parseInt(i.toString(), 10)];\n            }\n            columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[parseInt(i.toString(), 10)].template = 'true';\n            }\n            if (columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(column.format), column.type, false, this.currencyCode);\n                if (!this.isExcel && (column.type === 'datetime' || column.type === 'date')) {\n                    columns[parseInt(i.toString(), 10)].format = columns[parseInt(i.toString(), 10)].format.toString().replace('AM/PM', 'tt');\n                }\n                columns[parseInt(i.toString(), 10)].type = column.type;\n            }\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n            }\n            var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n                    delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                }\n            }\n        }\n        return columns;\n    };\n    /**\n     * Retrieves the appropriate format string from the given format options.\n     *\n     * @param {string | NumberFormatOptions | DateFormatOptions} format - The format options to retrieve the format string from.\n     * @returns {string} The format string extracted from the provided format options.\n     */\n    TreeGrid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            Child: 'Child',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridexpand')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                        }\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    if (!isNullOrUndefined(column)) {\n                        row = column.closest('tr');\n                        if (!isNullOrUndefined(row) && !(isNullOrUndefined(row.getElementsByClassName('e-treegridcollapse')[0]))) {\n                            this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                        }\n                    }\n                    break;\n                case 'downArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findnextRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rowIndex = summaryElement.rowIndex;\n                            this.selectRow(rowIndex);\n                            var cellIndex_1 = e.target.cellIndex;\n                            var row_1 = summaryElement.children[parseInt(cellIndex_1.toString(), 10)];\n                            addClass([row_1], 'e-focused');\n                            addClass([row_1], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n                    break;\n                case 'upArrow':\n                    if (!this.enableVirtualization) {\n                        target = e.target;\n                        parentTarget = target.parentElement;\n                        var cellIndex = parentTarget.cellIndex;\n                        if (this.grid.getColumnByIndex(cellIndex).editType === 'dropdownedit' && isNullOrUndefined(this.grid.getColumnByIndex(cellIndex).edit['obj'])) {\n                            parentTarget = target;\n                        }\n                        summaryElement = this.findPreviousRowElement(parentTarget);\n                        if (summaryElement !== null) {\n                            var rIndex = summaryElement.rowIndex;\n                            this.selectRow(rIndex);\n                            var cIndex = e.target.cellIndex;\n                            var rows = summaryElement.children[parseInt(cIndex.toString(), 10)];\n                            addClass([rows], 'e-focused');\n                            addClass([rows], 'e-focus');\n                        }\n                        else {\n                            this.clearSelection();\n                        }\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.infiniteScrollData = [];\n        this.remoteCollapsedData = [];\n        this.remoteExpandedData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        var splitFrozenCount = 'splitFrozenCount';\n        this.grid[\"\" + splitFrozenCount](this.getColumns());\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        var freezePresent = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'freeze';\n        });\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns() ||\n            this.grid.getFrozenLeftColumnsCount() || this.grid.getFrozenRightColumnsCount() || freezePresent.length) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        var IsRowDDInjected = this.injectedModules.filter(function (e) {\n            return e.prototype.getModuleName() === 'rowDragAndDrop';\n        });\n        if (this.allowRowDragAndDrop || IsRowDDInjected.length) {\n            if ((!isNullOrUndefined(this.toolbar) && (this.toolbar['includes']('Indent') ||\n                this.toolbar['includes']('Outdent')))) {\n                this.isIndentEnabled = true;\n            }\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n            this.grid.portals = [];\n        }\n        if (this.isVue) {\n            this.grid.isVue = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.grid.vueInstance = this.vueInstance;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[parseInt(i.toString(), 10)].member === 'virtualscroll') {\n                    modules[parseInt(i.toString(), 10)].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        var root = 'root';\n        this.grid[\"\" + root] = this[\"\" + root] ? this[\"\" + root] : this;\n        this.grid.appendTo(gridContainer);\n        if (this.isIndentEnabled) {\n            this.refreshToolbarItems();\n        }\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[\"\" + destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[\"\" + destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[\"\" + portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.refreshToolbarItems = function () {\n        var toolbarElement = this.toolbarModule.getToolbar();\n        var indentID = this.element.id + '_gridcontrol_indent';\n        var outdentID = this.element.id + '_gridcontrol_outdent';\n        var indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n        var outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n        indentElement.classList.add('e-hidden');\n        outdentElement.classList.add('e-hidden');\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this, this.grid.serviceLocator);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.enableVirtualMaskRow = this.enableVirtualMaskRow;\n        this.grid.loadingIndicator = this.loadingIndicator;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        this.grid.clipMode = getActualProperties(this.clipMode);\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[\"\" + templateInstance] = this[\"\" + templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[\"\" + isJsComponent] = true;\n        var enableHtmlSanitizer = 'enableHtmlSanitizer';\n        this.grid[\"\" + enableHtmlSanitizer] = this.enableHtmlSanitizer;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.IsExpandCollapseClicked = function (args) {\n        if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n            || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))\n            && !this.selectionSettings.checkboxOnly) {\n            if ((!isNullOrUndefined(args.data) && args.data['hasChildRecords']) || (args.rowIndex !== -1 && isNullOrUndefined(args.data))) {\n                args.cancel = true;\n                return;\n            }\n        }\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowDeselecting = function (args) {\n            _this.IsExpandCollapseClicked(args);\n            _this.trigger(events.rowDeselecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (_this.enableVirtualization && args.isHeaderCheckboxClicked &&\n                _this.grid.currentViewData.length !== _this.grid.selectionModule.selectedRowIndexes.length) {\n                var updateRowSelection = 'updateRowSelection';\n                for (var i = 0; i < _this.getRows().length; i++) {\n                    if (_this.getRows()[parseInt(i.toString(), 10)].getElementsByClassName('e-frame e-icons e-uncheck').length) {\n                        _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(i.toString(), 10)], _this.getCurrentViewRecords()[parseInt(i.toString(), 10)].index);\n                    }\n                }\n            }\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (!isNullOrUndefined(args.data)) {\n                _this.notify(events.rowDeselected, args);\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[\"\" + rowIndex]].classList.contains('e-summaryrow')) {\n                args[\"\" + rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[\"\" + loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[parseInt(j.toString(), 10)]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = void 0;\n                if (_this.dataResults.result) {\n                    req = 0;\n                }\n                else {\n                    req = 1;\n                }\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        if (totalRows[parseInt(i.toString(), 10)].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            var action = 'action';\n            if (_this.enableVirtualization && _this.selectionSettings.persistSelection && (_this.dataResults[\"\" + action] === 'expand' || _this.dataResults[\"\" + action] === 'collapse')) {\n                var refreshPersistSelection = 'refreshPersistSelection';\n                _this.grid.selectionModule[\"\" + refreshPersistSelection]();\n                if (_this.grid.selectionSettings.type === 'Single') {\n                    var updateRowSelection = 'updateRowSelection';\n                    var index = _this.getCurrentViewRecords().indexOf(_this.grid.selectionModule['data']);\n                    _this.grid.selectionModule[\"\" + updateRowSelection](_this.getRows()[parseInt(index.toString(), 10)], index);\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[\"\" + dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            if ((args.item.id === _this.grid.element.id + '_excelexport' && _this.allowExcelExport === false) ||\n                (args.item.id === _this.grid.element.id + '_pdfexport' && _this.allowPdfExport === false) ||\n                (args.item.id === _this.grid.element.id + '_csvexport' && _this.allowExcelExport === false)) {\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var actualTarget = 'actualTarget';\n            var target = _this.grid.selectionModule[\"\" + actualTarget];\n            if (!isNullOrUndefined(target) && (target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                if (args.action.requestType !== 'infiniteScroll') {\n                    _this.infiniteScrollData = [];\n                }\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[\"\" + prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        var _this = this;\n        if (this.rowTemplate) {\n            if (this.isReact && this.getContentTable().rows.length === 0) {\n                setTimeout(function () {\n                    _this.treeColumnRowTemplate();\n                    if (_this.enableCollapseAll) {\n                        var currentData = _this.getCurrentViewRecords();\n                        var rows = _this.getContentTable().rows;\n                        for (var i = 0; i < rows.length; i++) {\n                            var args = { data: currentData[parseInt(i.toString(), 10)],\n                                row: rows[parseInt(i.toString(), 10)] };\n                            _this.renderModule.RowModifier(args);\n                        }\n                    }\n                }, 0);\n            }\n            else {\n                this.treeColumnRowTemplate();\n            }\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[\"\" + dataSource].json = extendArray(this.dataSource[\"\" + dataSource].json);\n            this.grid.dataSource[\"\" + ready] = this.dataSource.ready;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            if (!isNullOrUndefined(this.grid.dataSource[\"\" + ready])) {\n                this.grid.dataSource[\"\" + ready].then(function (e) {\n                    var dm = proxy_1.grid.dataSource;\n                    dm[\"\" + dataSource].offline = true;\n                    dm[\"\" + isDataAvailable] = true;\n                    dm[\"\" + dataSource].json = e.result;\n                    dm[\"\" + adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            if (isRemoteData(_this) && _this.enableVirtualization) {\n                if (args.requestType === 'virtualscroll') {\n                    _this.query.expand('VirtualScrollingAction');\n                    _this.showSpinner();\n                }\n                else if (args.requestType === 'searching' && args.searchString === '') {\n                    _this.query.expand('ClearSearchingAction');\n                }\n                else if (args.action === 'clearFilter') {\n                    _this.query.expand('ClearFilteringAction');\n                }\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 && _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.setProperties({ dataSource: _this.dataResults.result }, true);\n                if (isNullOrUndefined(_this.grid['changedProperties'].dataSource)) {\n                    _this.grid.renderModule.data.dataManager = _this.grid.dataSource instanceof DataManager ?\n                        _this.grid.dataSource :\n                        (isNullOrUndefined(_this.grid.dataSource) ? new DataManager() : new DataManager(_this.grid.dataSource));\n                    _this.grid.renderModule.data.isQueryInvokedFromData = true;\n                    _this.grid.query = _this.grid.query instanceof Query ? _this.grid.query : new Query();\n                }\n            }\n            if (_this.action !== 'indenting' && _this.action !== 'outdenting') {\n                var callBackPromise_2 = new Deferred();\n                _this.trigger(events.actionBegin, args, function (actionArgs) {\n                    if (!actionArgs.cancel) {\n                        _this.notify(events.beginEdit, actionArgs);\n                    }\n                    callBackPromise_2.resolve(actionArgs);\n                });\n                return callBackPromise_2;\n            }\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (args.requestType === 'save' && _this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                _this.grid.refresh();\n            }\n            if (args.action === 'filter') {\n                if (_this.filterModule['currentFilterObject'] !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.requestType === 'searching') {\n                if (_this.searchSettings.key !== '' && _this.enableVirtualization && !_this.initialRender && !(isRemoteData(_this) && _this.enableVirtualization)) {\n                    _this.expandAll();\n                }\n            }\n            if (args.action === 'clearFilter' && _this.enableCollapseAll) {\n                _this.collapseAll();\n            }\n            if (_this.action === 'indenting' || _this.action === 'outdenting') {\n                _this.action = _this.action === 'indenting' ? 'indented' : 'outdented';\n                var selectedItem_1 = [_this.selectedRecords];\n                var actionArgs = {\n                    data: selectedItem_1,\n                    dropIndex: _this.dropIndex,\n                    dropPosition: _this.dropPosition,\n                    modifiedRecords: _this.modifiedRecords,\n                    requestType: _this.action,\n                    row: _this.selectedRows\n                };\n                _this.trigger(events.actionComplete, actionArgs);\n                var currentPageItem = _this.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === selectedItem_1[0].uniqueID;\n                });\n                if (!currentPageItem.length) {\n                    _this.refreshToolbarItems();\n                }\n                _this.action = '';\n                _this.selectedRecords = _this.selectedRows = _this.modifiedRecords = [];\n            }\n            else {\n                if (_this.grid.isFrozenGrid() && _this.enableVirtualization && args['tableName'] === 'movable') {\n                    var movableContent = _this.grid.element.querySelector('.' + literals.movableContent);\n                    var frozenContent = _this.grid.element.querySelector('.' + literals.frozenContent);\n                    movableContent.style.height = frozenContent.style.height = 'auto';\n                }\n                _this.trigger(events.actionComplete, args);\n            }\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[\"\" + ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[parseInt(i.toString(), 10)]) === -1) {\n                    this.columns.push(keys[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[\"\" + guid] = this.editSettings[\"\" + guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[parseInt(i.toString(), 10)]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }, { text: this.l10n.getConstant('Child'), id: 'Child' }] });\n                        break;\n                    case 'Indent':\n                    case ContextMenuItems.RowIndent:\n                        items.push({ text: this.l10n.getConstant('RowIndent'),\n                            target: '.e-content', iconCss: 'e-indent e-icons', id: this.element.id + '_gridcontrol_cmenu_Indent' });\n                        break;\n                    case 'Outdent':\n                    case ContextMenuItems.RowOutdent:\n                        items.push({ text: this.l10n.getConstant('RowOutdent'),\n                            target: '.e-content', iconCss: 'e-outdent e-icons', id: this.element.id + '_gridcontrol_cmenu_Outdent' });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[parseInt(i.toString(), 10)]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[parseInt(i.toString(), 10)]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        if (this.columnModel.length === 0) {\n            index = index === 0 ? -1 : index;\n        }\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[parseInt(i.toString(), 10)].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[parseInt(i.toString(), 10)] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[parseInt(i.toString(), 10)];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (prop === 'columns' && !isNullOrUndefined(column[parseInt(i.toString(), 10)][\"\" + prop])) {\n                        gridColumn[\"\" + prop] = this.getGridColumns(column[parseInt(i.toString(), 10)][\"\" + prop], false, this.columnModel.length - 1);\n                        treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                    else if (this.initialRender && !isNullOrUndefined(treeColumn) && this.enablePersistence && prop === 'edit') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = treeColumn[\"\" + prop];\n                    }\n                    else if (!(treeColumn) || prop !== 'sortComparer') {\n                        gridColumn[\"\" + prop] = treeGridColumn[\"\" + prop] = column[parseInt(i.toString(), 10)][\"\" + prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[\"\" + stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n            if (!isNullOrUndefined(this.columnModel[this.treeColumnIndex]) && this.enableRtl) {\n                if (gridColumn.field === this.columnModel[this.treeColumnIndex].field) {\n                    if (isNullOrUndefined(this.treeColumnTextAlign)) {\n                        this.treeColumnTextAlign = this.columnModel[this.treeColumnIndex].textAlign;\n                        this.treeColumnField = this.columnModel[this.treeColumnIndex].field;\n                    }\n                    gridColumn.textAlign = 'Right';\n                }\n            }\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'enableColumnVirtualization':\n                    this.grid.enableColumnVirtualization = this.enableColumnVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[\"\" + prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    this.TreeGridLocale();\n                    this.grid.toolbar = this.getGridToolbar();\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableAdaptiveUI':\n                    this.grid.enableAdaptiveUI = this.enableAdaptiveUI;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    if (!isNullOrUndefined(this.treeColumnField)) {\n                        this.updateTreeColumnTextAlign();\n                    }\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[\"\" + prop].mode &&\n                        (newProp[\"\" + prop].mode === 'Cell' || newProp[\"\" + prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    TreeGrid.prototype.updateTreeColumnTextAlign = function () {\n        var gridColumn = this.grid.getColumnByField(this.treeColumnField);\n        gridColumn.textAlign = this.enableRtl ? 'Right' : this.treeColumnTextAlign;\n        this.grid.refreshColumns();\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        var treeGridElement = this.element;\n        if (!treeGridElement) {\n            return;\n        }\n        var hasTreeGridChild = treeGridElement.querySelector('.' + 'e-gridheader') &&\n            treeGridElement.querySelector('.' + 'e-gridcontent') ? true : false;\n        if (hasTreeGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        if (hasTreeGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        if (isNullOrUndefined(this.grid)) {\n            return;\n        }\n        if (!isNullOrUndefined(this.rowDropSettings.targetID) &&\n            isNullOrUndefined(document.getElementById(this.grid.rowDropSettings.targetID))) {\n            document.getElementById(this.rowDropSettings.targetID).id = this.grid.rowDropSettings.targetID;\n            this.rowDropSettings.targetID = this.grid.rowDropSettings.targetID;\n        }\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'treeColumnIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var k = 0, val = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; (!isNullOrUndefined(val) && k < val.length); k++) {\n                var objVal = val[parseInt(k.toString(), 10)];\n                delete currentObject[\"\" + objVal];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n                this.ignoreInArrays(ignoreOnColumn, columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        if (isNullOrUndefined(column.template)) {\n            for (var i = 0; i < ignoreOnColumn.length; i++) {\n                delete column[ignoreOnColumn[parseInt(i.toString(), 10)]];\n                column.filter = {};\n            }\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n        if (this.grid.isCheckBoxSelection && !this.grid.isPersistSelection) {\n            if (this.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n                var checkedTarget = this.grid.getHeaderContent().querySelector('.e-checkselectall');\n                var checkedLen = this.grid.getSelectedRowIndexes().length;\n                var totalRecords = this.getCurrentViewRecords().length;\n                if (checkedLen === totalRecords) {\n                    var spanEle = checkedTarget.nextElementSibling;\n                    removeClass([spanEle], ['e-stop', 'e-uncheck']);\n                    addClass([spanEle], ['e-check']);\n                }\n            }\n        }\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            var isAddedRowByMethod = 'isAddedRowByMethod';\n            this.editModule[\"\" + isAddedRowByMethod] = true;\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[\"\" + primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n        var visibleRecords = this.getVisibleRecords();\n        if (visibleRecords.length > 0 && key === (visibleRecords[visibleRecords.length - 1])[\"\" + primaryKey]) {\n            var table = this.getContentTable();\n            var sHeight = table.scrollHeight;\n            var clientHeight = this.getContent().clientHeight;\n            this.lastRowBorder(this.getRows()[currentRecords.indexOf(record)], sHeight <= clientHeight);\n        }\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        var Columns = this.initialRender ? this.grid.columns : this.columns;\n        var columnModel = 'columnModel';\n        if (this.grid.columns.length !== this.columnModel.length) {\n            Columns = this.grid[\"\" + columnModel];\n        }\n        return iterateArrayOrObject(Columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    TreeGrid.prototype.getVirtualColIndexByUid = function (uid) {\n        var columnModel = 'columnModel';\n        var index = iterateArrayOrObject(this.grid[\"\" + columnModel], function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        var gridColumn;\n        if (!this.enableColumnVirtualization || (this.enableColumnVirtualization && this.columnModel.length === gridColumns.length)) {\n            this.columnModel = [];\n            for (var i = 0; i < gridColumns.length; i++) {\n                gridColumn = {};\n                for (var _i = 0, _a = Object.keys(gridColumns[parseInt(i.toString(), 10)]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[\"\" + prop] = gridColumns[parseInt(i.toString(), 10)][\"\" + prop];\n                }\n                this.columnModel.push(new Column(gridColumn));\n                if (field === this.columnModel[parseInt(i.toString(), 10)].field && this.columnModel[parseInt(i.toString(), 10)].type !== 'checkbox' && (!isNullOrUndefined(temp) && temp !== '')) {\n                    this.columnModel[parseInt(i.toString(), 10)].template = temp;\n                }\n            }\n        }\n        var deepMerge = 'deepMerge';\n        this[\"\" + deepMerge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            this.stackedHeader = true;\n        }\n        if (this.stackedHeader && this.allowResizing) {\n            this.updateColumnsWidth(this.columns);\n        }\n        if (!this.stackedHeader) {\n            merge(this.columns, this.columnModel);\n        }\n        this[\"\" + deepMerge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnsWidth = function (columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.updateColumnsWidth(column.columns);\n            }\n            else if (column.field) {\n                var currentColumn = _this.grid.getColumnByField(column.field);\n                column.width = currentColumn.width;\n            }\n        });\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[\"\" + persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[\"\" + persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                dRows.push(rows[parseInt(i.toString(), 10)]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        var isSummaryRow = 'isSummaryRow';\n        return this.grid.currentViewData.filter(function (e) { return isNullOrUndefined(e[\"\" + isSummaryRow]); });\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            if (!(this.dataSource instanceof DataManager)) {\n                this.grid.dataSource = this.flatData;\n            }\n            else {\n                this.grid.setProperties({\n                    dataSource: new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor)\n                }, true);\n            }\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[parseInt(i.toString(), 10)]);\n                if (!currentViewRecords[parseInt(i.toString(), 10)].expanded) {\n                    i += findChildrenRecords(currentViewRecords[parseInt(i.toString(), 10)]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if ((this.getBatchChanges()[this.changedRecords].length || this.getBatchChanges()[this.deletedRecords].length ||\n                this.getBatchChanges()[this.addedRecords].length) && this.editSettings.showConfirmDialog) {\n                var dialogObj = this.grid.editModule[\"\" + obj];\n                this.grid.editModule[\"\" + showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo_1 = this.grid.getRowInfo(target);\n            var record = rowInfo_1.rowData;\n            if (this.grid.isFrozenGrid() && this.enableVirtualization && !Object.keys(record).length) {\n                var freezeRows = 'freezeRows';\n                record = this.grid.contentModule[\"\" + freezeRows].filter(function (e) { return e.uid === rowInfo_1.row.getAttribute('data-uid'); })[0].data;\n            }\n            if (this.enableImmutableMode) {\n                record = this.getCurrentViewRecords()[rowInfo_1.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo_1.row, record);\n            }\n            else {\n                this.expandRow(rowInfo_1.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @param {Object} key - Primary key value\n     * @param {number} level - Specifies the hierarchical level of the record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record, key, level) {\n        var _this = this;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        if (this.isExpandAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            var pagerValuePresent = false;\n            if (this.grid.pagerModule && !isNullOrUndefined(this.grid.pagerModule.pagerObj.pagerdropdownModule)) {\n                pagerValuePresent = this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value ? true : false;\n            }\n            if (!this.isExpandingEventTriggered) {\n                this.trigger(events.expanding, args, function (expandingArgs) {\n                    _this.expandAllPrevent = expandingArgs.cancel;\n                    if (!expandingArgs.cancel) {\n                        if (expandingArgs.expandAll) {\n                            _this.expandCollapseAllChildren(record, 'expand', key, level);\n                        }\n                        _this.expandRows(row, record, parentRec, key, level);\n                    }\n                });\n            }\n            else if ((!this.allowPaging || (pagerValuePresent && this.grid.pagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === 'All')) &&\n                !this.expandAllPrevent && this.isExpandingEventTriggered) {\n                this.expandRows(row, record, parentRec, key, level);\n            }\n            this.isExpandingEventTriggered = true;\n        }\n        else if (!this.isExpandAll || (this.isExpandAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.expanding, args, function (expandingArgs) {\n                if (!expandingArgs.cancel) {\n                    if (expandingArgs.expandAll) {\n                        _this.expandCollapseAllChildren(record, 'expand', key, level);\n                    }\n                    _this.expandRows(row, record, parentRec, key, level);\n                }\n            });\n        }\n    };\n    // Internal method to handle the rows expand\n    TreeGrid.prototype.expandRows = function (row, record, parentRec, key, level) {\n        this.expandCollapse('expand', row, record);\n        var children = 'Children';\n        if (!(isRemoteData(this) && !isOffline(this)) && (!isCountRequired(this) || !isNullOrUndefined(record[\"\" + children]))) {\n            var expandArgs = { data: record, row: row };\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(expandArgs.data, true);\n            }\n            if (this.isExpandAll && !this.isExpandedEventTriggered) {\n                this.isExpandedEventTriggered = true;\n                expandArgs = { data: parentRec, row: row };\n                this.trigger(events.expanded, expandArgs);\n            }\n            else if (!this.isExpandAll) {\n                this.trigger(events.expanded, expandArgs);\n            }\n        }\n    };\n    TreeGrid.prototype.expandCollapseAllChildren = function (record, action, key, level) {\n        if ((!isNullOrUndefined(key) && record[this.getPrimaryKeyFieldNames()[0]] !== key) ||\n            (!isNullOrUndefined(level) && level !== record.level)) {\n            return;\n        }\n        var records = findChildrenRecords(record).filter(function (e) {\n            return e.hasChildRecords;\n        });\n        records.unshift(record);\n        for (var i = 0; i < records.length; i++) {\n            this.expandCollapse(action, null, records[parseInt(i.toString(), 10)]);\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            if (this.detailTemplate) {\n                record = this.grid.getCurrentViewRecords()[row.getAttribute('data-rowindex')];\n            }\n            else {\n                if (this.enableVirtualization && this.isCollapseAll) {\n                    if (this.isExpandAll && row.rowIndex === -1) {\n                        record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                    }\n                    else {\n                        record = this.grid.getCurrentViewRecords()[row.rowIndex];\n                    }\n                }\n                else {\n                    record = this.grid.getCurrentViewRecords()[parseInt(row.getAttribute('data-rowindex'), 10)];\n                }\n            }\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @param {Object} key - Primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record, key) {\n        var _this = this;\n        var parentRec = this.parentData;\n        if (!this.enableVirtualization) {\n            parentRec = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        record = this.getCollapseExpandRecords(row, record);\n        if (this.isCollapseAll && !isRemoteData(this)) {\n            var args = { data: parentRec, row: row, cancel: false };\n            if (!this.isCollapsingEventTriggered) {\n                this.trigger(events.collapsing, args, function (collapsingArgs) {\n                    _this.collapseAllPrevent = collapsingArgs.cancel;\n                    if (!collapsingArgs.cancel) {\n                        if (collapsingArgs.collapseAll) {\n                            _this.expandCollapseAllChildren(record, 'collapse', key);\n                        }\n                        _this.collapseRows(row, record, parentRec, key);\n                    }\n                });\n            }\n            else if (!this.allowPaging && !this.collapseAllPrevent && this.isCollapsingEventTriggered) {\n                this.collapseRows(row, record, parentRec, key);\n            }\n            this.isCollapsingEventTriggered = true;\n        }\n        else if (!this.isCollapseAll || (this.isCollapseAll && isRemoteData(this))) {\n            var args = { data: record, row: row, cancel: false };\n            this.trigger(events.collapsing, args, function (collapsingArgs) {\n                if (!collapsingArgs.cancel) {\n                    _this.collapseRows(row, record, parentRec, key);\n                }\n            });\n        }\n    };\n    // Internal method for handling the rows collapse\n    TreeGrid.prototype.collapseRows = function (row, record, parentRec, key) {\n        this.expandCollapse('collapse', row, record);\n        var collapseArgs = { data: record, row: row };\n        if (!isRemoteData(this)) {\n            if (!isNullOrUndefined(this.expandStateMapping)) {\n                this.updateExpandStateMapping(collapseArgs.data, false);\n            }\n            if (this.isCollapseAll && !this.isCollapsedEventTriggered) {\n                this.isCollapsedEventTriggered = true;\n                collapseArgs = { data: parentRec, row: row };\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            else if (!this.isCollapseAll) {\n                this.trigger(events.collapsed, collapseArgs);\n            }\n            if (this.enableInfiniteScrolling) {\n                var scrollHeight = this.grid.getContent().firstElementChild.scrollHeight;\n                var scrollTop = this.grid.getContent().firstElementChild.scrollTop;\n                if ((scrollHeight - scrollTop) < this.grid.getRowHeight() + +this.height) {\n                    this.grid.getContent().firstElementChild.scrollBy(0, this.grid.getRowHeight());\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateExpandStateMapping = function (record, state) {\n        var totalRecords = record;\n        if (totalRecords.length) {\n            for (var i = 0; i < totalRecords.length; i++) {\n                totalRecords[parseInt(i.toString(), 10)][this.expandStateMapping] = state;\n                editAction({ value: totalRecords[parseInt(i.toString(), 10)], action: 'edit' }, this, this.isSelfReference, totalRecords[parseInt(i.toString(), 10)].index, this.grid.selectedRowIndex, this.expandStateMapping);\n            }\n        }\n        else {\n            record[\"\" + this.expandStateMapping] = state;\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, this.expandStateMapping);\n        }\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandAction(rec, null, level, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var record = getObject('records', rec);\n            this.expandAction(record, null, level);\n        }\n    };\n    /**\n     * Expands the records by given primary key value\n     *\n     * @param {Object} key - Expands the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Expand');\n    };\n    TreeGrid.prototype.expandAction = function (record, key, level, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        var _loop_1 = function (i) {\n            if (!isNullOrUndefined(record[parseInt(i.toString(), 10)].parentItem)) {\n                var puniqueID_1 = record[parseInt(i.toString(), 10)].parentItem.uniqueID;\n                var parentItem = this_1.flatData.filter(function (e) {\n                    return e.uniqueID === puniqueID_1;\n                });\n                if (isRemoteData(this_1)) {\n                    parentItem = this_1.getCurrentViewRecords().filter(function (e) {\n                        return e.uniqueID === puniqueID_1;\n                    });\n                }\n                if (parentItem[0].expanded === false) {\n                    record.push(parentItem[0]);\n                    parentItem[0].expanded = true;\n                }\n                else {\n                    if (!getExpandStatus(this_1, parentItem[0], this_1.parentData)) {\n                        if (parentItem[0].expanded && parentItem[0].parentItem !== undefined) {\n                            record.push(parentItem[0]);\n                        }\n                    }\n                }\n            }\n            if (!isPaging) {\n                this_1.expandRow(null, record[parseInt(i.toString(), 10)], key, level);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < record.length; i++) {\n            _loop_1(i);\n        }\n        if (isPaging) {\n            this.expandRow(null, record, key, level);\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseAction(record, null, true);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var records = getObject('records', rec);\n            this.collapseAction(records);\n        }\n    };\n    /**\n     * Collapses the records by given primary key value\n     *\n     * @param {Object} key - Collapses the parent rows with given primary key value\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseByKey = function (key) {\n        this.expandCollapseActionByKey(key, 'Collapse');\n    };\n    TreeGrid.prototype.expandCollapseActionByKey = function (key, action) {\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        var dataSource = isRemoteData(this) ? this.getCurrentViewRecords() : this.grid.dataSource;\n        if (!isNullOrUndefined(primaryKeyField)) {\n            var rec = dataSource.filter(function (e) {\n                return e[\"\" + primaryKeyField].toString() === key.toString();\n            });\n            if (action === 'Expand') {\n                this.expandAction(rec, key, null);\n            }\n            else {\n                this.collapseAction(rec, key);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseAction = function (record, key, isPaging) {\n        if (isPaging === void 0) { isPaging = false; }\n        if (isPaging) {\n            this.collapseRow(null, record);\n        }\n        else {\n            for (var i = 0; i < record.length; i++) {\n                this.collapseRow(null, record[parseInt(i.toString(), 10)], key);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[\"\" + endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.isExpandedEventTriggered = false;\n        this.isExpandingEventTriggered = false;\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.isCollapsedEventTriggered = false;\n        this.isCollapsingEventTriggered = false;\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                for (var i = 0; i < rows.length; i++) {\n                    if (action === 'collapse') {\n                        if (!isNullOrUndefined(this.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex])) {\n                            this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        if (!this.enableVirtualization) {\n                            this.expandRow(rows[parseInt(i.toString(), 10)]);\n                        }\n                        else if (rows[0].getAttribute('aria-expanded') !== 'true') {\n                            this.expandRow(rows[0]);\n                        }\n                    }\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.expandRow(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var _this = this;\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if ((!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) || (action === 'collapse' || (this.isExpandAll && this.loadChildOnDemand) && !isRemoteData(this) && this.isSelfReference && isCountRequired(this))) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.grid.currentViewData.indexOf(record);\n            row = gridRows[parseInt(rowIndex.toString(), 10)];\n        }\n        else {\n            rowIndex = +row.getAttribute('data-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization || this.enableInfiniteScrolling) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            row.querySelectorAll('.e-treerowcell')[0].setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n                var lastrowIdx = this.getVisibleRecords()[this.getVisibleRecords().length - 1]['index'];\n                var lastRow = this.getRowByIndex(lastrowIdx);\n                if (this.grid.getContentTable().clientHeight <= this.grid.getContent().clientHeight && !isNullOrUndefined(lastRow) && !lastRow.cells[0].classList.contains('e-lastrowcell')) {\n                    this.lastRowBorder(lastRow, true);\n                }\n            }\n            if (isCountRequired(this) && action === 'expand') {\n                var currentData = this.getCurrentViewRecords();\n                var visibleRecords = currentData.filter(function (e) {\n                    return getExpandStatus(_this, e, _this.parentData);\n                });\n                this.dataResults.result = visibleRecords;\n            }\n            if (!isNullOrUndefined(targetEle) && targetEle.closest('.e-treerowcell').classList.contains('e-cellselectionbackground')) {\n                targetEle.closest('.e-treerowcell').classList.remove('e-cellselectionbackground');\n                targetEle.closest('.e-treerowcell').removeAttribute('aria-selected');\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i >= 0; i--) {\n                    if (!isHidden(totalRows[parseInt(i.toString(), 10)])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[parseInt(i.toString(), 10)], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        if (expandingArgs.requestType === 'collapse' && isCountRequired(this)) {\n            var flatDataRecords = this.flatData.slice();\n            for (var i = 0; i < flatDataRecords.length; i++) {\n                if (flatDataRecords[parseInt(i.toString(), 10)]['parentUniqueID'] === expandingArgs.data['uniqueID']) {\n                    flatDataRecords.splice(i, 1);\n                    i = i - 1;\n                }\n            }\n            this.dataResults.result = flatDataRecords;\n            return;\n        }\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[\"\" + childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                if (isCountRequired(_this)) {\n                    _this.flatData = _this.dataResults.result;\n                }\n                if (_this.enableInfiniteScrolling && isCountRequired(_this)) {\n                    _this.flatData = _this.infiniteScrollData;\n                }\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[parseInt(i.toString(), 10)].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[parseInt(i.toString(), 10)]) {\n                        childData[parseInt(i.toString(), 10)].level = record.level + 1;\n                        childData[parseInt(i.toString(), 10)].index = Math.ceil(Math.random() * 1000);\n                        childData[parseInt(i.toString(), 10)].parentItem = extend({}, record);\n                        childData[parseInt(i.toString(), 10)].taskData = extend({}, childData[parseInt(i.toString(), 10)]);\n                        delete childData[parseInt(i.toString(), 10)].parentItem.childRecords;\n                        delete childData[parseInt(i.toString(), 10)].taskData.parentItem;\n                        childData[parseInt(i.toString(), 10)].parentUniqueID = record.uniqueID;\n                        childData[parseInt(i.toString(), 10)].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[parseInt(i.toString(), 10)].uniqueID, childData[parseInt(i.toString(), 10)], _this);\n                        if (!isNullOrUndefined(childData[parseInt(i.toString(), 10)][_this.childMapping]) ||\n                            (childData[parseInt(i.toString(), 10)][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[parseInt(i.toString(), 10)].hasChildRecords = true;\n                        }\n                        if (isCountRequired(_this) && record[_this.childMapping] && record[_this.childMapping][parseInt(i.toString(), 10)]) {\n                            currentData.splice(index + 1 + i, 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                        else {\n                            currentData.splice(index + 1 + i, record[_this.childMapping] &&\n                                record[_this.childMapping][parseInt(i.toString(), 10)] ? 1 : 0, childData[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[parseInt(index.toString(), 10)][\"\" + _this.childMapping] = childData;\n                currentData[parseInt(index.toString(), 10)].childRecords = childData;\n                currentData[parseInt(index.toString(), 10)].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[parseInt(index.toString(), 10)].uniqueID, currentData[parseInt(index.toString(), 10)], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[parseInt(j.toString(), 10)]);\n                }\n            }\n            if (isCountRequired(_this) && _this.loadChildOnDemand && expandingArgs.requestType === 'expand') {\n                _this.dataResults['expandRecord'] = {};\n                _this.dataResults['expandRecord'] = expandingArgs.data;\n            }\n            _this.isExpandRefresh = true;\n            var scrollHeightBeforeRefresh = _this.getContentTable().parentElement.scrollTop;\n            _this.grid.refresh();\n            if (_this.enableInfiniteScrolling) {\n                _this.getContentTable().parentElement.scrollTop = scrollHeightBeforeRefresh;\n            }\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        var fetchRemoteChildData = 'fetchRemoteChildData';\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return ((r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1))) || (r.querySelector('.e-gridrowindex' + record.index + 'level0' + '.e-summarycell')));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else if (action === 'collapse' && this.enableVirtualization) {\n            this.dataModule[\"\" + fetchRemoteChildData]({ action: action, record: args.data, rows: null, parentRow: args.row });\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.grid.currentViewData.filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var freezeRightRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[parseInt(i.toString(), 10)][\"\" + primaryKeyField]);\n                rows.push(this.getRows()[parseInt(rowIndex.toString(), 10)]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var freeze = (this.grid.getFrozenLeftColumnsCount() > 0 || this.grid.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns() || freeze) {\n            movableRows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (freeze) {\n            freezeRightRows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        var gridRowsObject = this.grid.getRowsObject();\n        var currentViewData = this.grid.currentViewData;\n        var currentRecord = currentViewData.filter(function (e) {\n            return e.uniqueID === record.uniqueID;\n        });\n        var currentIndex = currentViewData.indexOf(currentRecord[0]);\n        if (!isNullOrUndefined(gridRowsObject[parseInt(currentIndex.toString(), 10)].visible) &&\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible !== false) {\n            gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = true;\n        }\n        var detailrows = gridRows.filter(function (r) {\n            return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)])) {\n                rows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(rows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization\n                || this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[rows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                var parentRecord = currentViewData.filter(function (e) {\n                    return e.uniqueID === currentRecord[0].parentUniqueID;\n                });\n                if (!isNullOrUndefined(parentRecord[0]) && gridRows[currentViewData.indexOf(parentRecord[0])].getElementsByClassName('e-treegridcollapse').length) {\n                    gridRowsObject[parseInt(currentIndex.toString(), 10)].visible = false;\n                }\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(freezeRightRows)) {\n                freezeRightRows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[parseInt(i.toString(), 10)] });\n            if ((!isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].childRecords) && childRecords[parseInt(i.toString(), 10)].childRecords.length > 0) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[parseInt(i.toString(), 10)].expanded) || childRecords[parseInt(i.toString(), 10)].expanded)) {\n                this.expandCollapse(action, rows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[parseInt(i.toString(), 10)], childRecords[parseInt(i.toString(), 10)], true);\n                }\n            }\n        }\n        for (var i = 0; i < detailrows.length; i++) {\n            if (!isNullOrUndefined(detailrows[parseInt(i.toString(), 10)]) && !this.allowPaging && !(this.enableVirtualization ||\n                this.enableInfiniteScrolling || isRemoteData(this) || isCountRequired(this))) {\n                gridRowsObject[detailrows[parseInt(i.toString(), 10)].rowIndex].visible = displayAction !== 'none' ? true : false;\n                detailrows[parseInt(i.toString(), 10)].style.display = displayAction;\n            }\n        }\n        if (!this.allowPaging && !(this.enableVirtualization || this.enableInfiniteScrolling || isRemoteData(this)\n            || isCountRequired(this))) {\n            this.grid.notify('refresh-Expand-and-Collapse', { rows: this.grid.getRowsObject() });\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[parseInt(i.toString(), 10)];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        var rows = this.getContentTable().rows;\n        rows = [].slice.call(rows);\n        for (var i = 0; i < rows.length; i++) {\n            var rcell = this.grid.getContentTable().rows[parseInt(i.toString(), 10)]\n                .cells[this.treeColumnIndex];\n            var row = rows[parseInt(i.toString(), 10)];\n            var rowData = this.grid.getRowsObject()[parseInt(i.toString(), 10)].data;\n            var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n            this.renderModule.cellRender(arg);\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var row;\n        var childRecord;\n        var movablerows = [];\n        var rightrows = [];\n        var freeze = (this.getFrozenLeftColumnsCount() > 0 || this.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            movablerows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n            rightrows = this.getRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + rowDetails.record.index + 'level' + (rowDetails.record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].style.display = 'none';\n            row = rows[parseInt(i.toString(), 10)];\n            var collapsingTd = rows[parseInt(i.toString(), 10)].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (freeze) {\n                movablerows[parseInt(i.toString(), 10)].style.display = 'none';\n                rightrows[parseInt(i.toString(), 10)].style.display = 'none';\n                if (!rows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                    if (movablerows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = movablerows[parseInt(i.toString(), 10)];\n                    }\n                    else if (rightrows[parseInt(i.toString(), 10)].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                        row = rightrows[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            if (row.querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = row.querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[parseInt(i.toString(), 10)].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, false);\n                }\n            }\n        }\n    };\n    /**\n     * Method to sanitize html element\n     *\n     * @param {any} value - Specifies the html value to sanitize\n     * @returns {any} Returns the sanitized html value\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TreeGrid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer && typeof (value) === 'string') {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * Updates the rows and cells\n     *\n     * @param {Object[]} records - Updates the given records\n     * @param {HTMLTableRowElement[]} rows - Updates the given rows\n     * @param {number} index -  Updates the given cell index\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRowAndCellElements = function (records, rows, index) {\n        for (var i = 0; i < records.length; i++) {\n            this.renderModule.cellRender({\n                data: records[parseInt(i.toString(), 10)], cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                column: this.grid.getColumns()[this.treeColumnIndex],\n                requestType: 'rowDragAndDrop'\n            });\n            if (this['action'] === 'indenting' || this['action'] === 'outdenting') {\n                this.renderModule.RowModifier({\n                    data: records[parseInt(i.toString(), 10)], row: rows[parseInt(i.toString(), 10)]\n                });\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     *\n     * @deprecated This method is deprecated. Use getCellFromIndex method instead.\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     *\n     * @deprecated This method is deprecated. Use getDataRows method instead.\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     *\n     * @deprecated This method is deprecated. Use getRowByIndex method instead.\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     * @deprecated This method is deprecated. Use getRows method instead.\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     *\n     * @deprecated This method is deprecated. Use getRowByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Gets the Tree Grid's frozen right content rows from frozen Tree Grid.\n     *\n     * @returns {Element[]} returns the element\n     *\n     * @deprecated This method is deprecated. Use getRows method instead.\n     */\n    TreeGrid.prototype.getFrozenRightRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets all the Tree Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getDataRows method instead.\n     */\n    TreeGrid.prototype.getFrozenRightDataRows = function () {\n        return this.grid.getDataRows();\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getCellFromIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     *\n     * @deprecated This method is deprecated. Use getColumnHeaderByIndex method instead.\n     */\n    TreeGrid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    TreeGrid.prototype.getMovableColumnsCount = function () {\n        return this.grid.getMovableColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    TreeGrid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.grid.getFrozenLeftColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    TreeGrid.prototype.getFrozenRightColumnsCount = function () {\n        return this.grid.getFrozenRightColumnsCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenLeftColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenLeftColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getFrozenRightColumns = function () {\n        this.updateColumnModel(this.grid.getFrozenRightColumns());\n        return this.columnModel;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    TreeGrid.prototype.getVisibleMovableCount = function () {\n        return this.grid.getVisibleMovableCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    TreeGrid.prototype.getVisibleFrozenRightCount = function () {\n        return this.grid.getVisibleFrozenRightCount();\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    TreeGrid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.grid.getVisibleFrozenLeftCount();\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    TreeGrid.prototype.getMovableColumns = function () {\n        this.updateColumnModel(this.grid.getMovableColumns());\n        return this.columnModel;\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[parseInt(j.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(j.toString(), 10)].columns, cnt);\n            }\n            else {\n                if (cols[parseInt(j.toString(), 10)].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    /**\n     * Indents the record to one level of hierarchy. Moves the selected row as the last child of its previous row.\n     *\n     * @param {Object} record – specifies the record to do indented\n     * @returns {void}\n     */\n    TreeGrid.prototype.indent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'indent');\n        }\n    };\n    /**\n     * Outdent the record to one level of hierarchy. Moves the selected row as sibling to its parent row.\n     *\n     * @param {Object} record – specifies the record to do outdented\n     * @returns {void}\n     */\n    TreeGrid.prototype.outdent = function (record) {\n        if (!isNullOrUndefined(this.rowDragAndDropModule)) {\n            record = record;\n            this.rowDragAndDropModule[this.indentOutdentAction](record, 'outdent');\n        }\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property('USD')\n    ], TreeGrid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], TreeGrid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[\"\" + columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[parseInt(f.toString(), 10)]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                            childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (isNullOrUndefined(tObj.rowDropSettings.targetID) && !this.canDrop) {\n            this.removetopOrBottomBorder();\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.getDataInfo = function () {\n        return _super.prototype.getData.call(this);\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.virtualInfo) && notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.nextInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.nextInfo.page } }, true);\n        }\n        else if (!isNullOrUndefined(notifyArgs.virtualInfo) && !notifyArgs.virtualInfo.loadNext &&\n            notifyArgs.virtualInfo.page !== this.parent.pageSettings.currentPage) {\n            this.parent.setProperties({ pageSettings: { currentPage: notifyArgs.virtualInfo.page } }, true);\n        }\n        var info = this.getDataInfo();\n        if (!isNullOrUndefined(notifyArgs.virtualInfo)) {\n            if (notifyArgs.virtualInfo.direction !== 'right' && notifyArgs.virtualInfo.direction !== 'left') {\n                if (!((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                    && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent))\n                    || notifyArgs.virtualInfo.blockIndexes.length === 1) {\n                    notifyArgs.virtualInfo.blockIndexes = info.blockIndexes;\n                }\n            }\n            else {\n                notifyArgs.virtualInfo.blockIndexes = this.getBlockIndexes(notifyArgs.virtualInfo.page);\n            }\n        }\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[parseInt(r.toString(), 10)].index = (this.visualData).indexOf(rows[parseInt(r.toString(), 10)].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[\"\" + model].currentPage;\n            if (clear) {\n                this.cache = {};\n                /*this.movableCache = {};\n                this.frozenRightCache = {};*/\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[parseInt(currentPage.toString(), 10)] &&\n                this.cache[parseInt(currentPage.toString(), 10)].length >\n                    (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[parseInt(currentPage.toString(), 10)];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n                /*this.movableCache = {};\n                this.frozenRightCache = {};*/\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[parseInt(f.toString(), 10)];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[parseInt(count.toString(), 10)].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[parseInt(count.toString(), 10)].uniqueID)) {\n                    this.filteredResult.push(childRec[parseInt(count.toString(), 10)]);\n                    setValue('uniqueIDFilterCollection.' + childRec[parseInt(count.toString(), 10)].uniqueID, childRec[parseInt(count.toString(), 10)], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[parseInt(count.toString(), 10)]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[parseInt(count.toString(), 10)]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[parseInt(c.toString(), 10)].parentUniqueID, true);\n                record[parseInt(c.toString(), 10)].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[parseInt(c.toString(), 10)].filterLevel = 0;\n                this.filteredParentRecs.push(record[parseInt(c.toString(), 10)]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[parseInt(count.toString(), 10)];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            var rowlength = excelRow.excelRows.length;\n            var rowlevel = excelrowobj.level;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n            else if (excelrowobj.hasChildRecords && isNullOrUndefined(excelrowobj.parentItem)) {\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[parseInt(i.toString(), 10)].rows) {\n                workbook.worksheets[parseInt(i.toString(), 10)].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        this.parent.flatData.map(function (e) { return e.expanded = e.uniqueID === rowDetails.record.uniqueID &&\n            e.expanded !== rowDetails.record.expanded ? rowDetails.record.expanded : e.expanded; });\n        if (this.parent.enableImmutableMode) {\n            var primaryKeyField_1 = this.parent.getPrimaryKeyFieldNames()[0];\n            var record = this.parent.flatData.filter(function (e) {\n                return e[\"\" + primaryKeyField_1] === rowDetails.record[\"\" + primaryKeyField_1];\n            });\n            if (record.length) {\n                record[0].expanded = rowDetails.record.expanded;\n            }\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[\"\" + action] === 'collapse') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[\"\" + action] === 'expand') {\n                targetEle = ret[\"\" + row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[parseInt(t.toString(), 10)]);\n            var res = [];\n            if (temp[parseInt(t.toString(), 10)].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[parseInt(t.toString(), 10)].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.updatePageSize = function (pageingDetails) {\n        var updateSize = pageingDetails.result.length;\n        var gridPagerModule = this.parent.grid.pagerModule;\n        if (this.parent.pageSettings.pageSizes === true) {\n            if (gridPagerModule.pagerObj.pagerdropdownModule['dropDownListObject'].value === gridPagerModule.pagerObj.getLocalizedLabel('All')) {\n                gridPagerModule['pagerObj'].totalRecordsCount = updateSize;\n                this.parent.grid.pageSettings.pageSize = updateSize;\n            }\n        }\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            this.updatePageSize(pageingDetails);\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.rowDeselected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.rowDeselected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var toolbarElement = this.parent.grid.toolbarModule.getToolbar();\n        if (!isNullOrUndefined(toolbarElement)) {\n            var tObj = this.parent;\n            var indentElement = void 0;\n            var outdentElement = void 0;\n            var indentID = tObj.element.id + '_gridcontrol_indent';\n            var outdentID = tObj.element.id + '_gridcontrol_outdent';\n            var indentEle = toolbarElement.querySelector('#' + indentID);\n            var outdentEle = toolbarElement.querySelector('#' + outdentID);\n            var row = args.row;\n            var selectedrow = tObj.getSelectedRows()[0];\n            if (!isNullOrUndefined(row[0])) {\n                row = row[0];\n            }\n            row = (!isNullOrUndefined(selectedrow) && selectedrow.rowIndex !== row.rowIndex) ? selectedrow : row;\n            if (indentEle !== null && outdentEle !== null) {\n                indentElement = toolbarElement.querySelector('#' + indentID).parentElement;\n                outdentElement = toolbarElement.querySelector('#' + outdentID).parentElement;\n                if (row.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indentElement.classList.add('e-hidden');\n                    outdentElement.classList.add('e-hidden');\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[row.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[row.rowIndex - 1].level)) {\n                            indentElement.classList.add('e-hidden');\n                        }\n                        else {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === tObj.getCurrentViewRecords()[row.rowIndex - 1].level) {\n                            indentElement.classList.remove('e-hidden');\n                        }\n                        if (selectedItem.level === 0) {\n                            outdentElement.classList.add('e-hidden');\n                        }\n                        if (selectedItem.level !== 0) {\n                            outdentElement.classList.remove('e-hidden');\n                        }\n                    }\n                }\n                if (args['name'] === 'rowDeselected' && isNullOrUndefined(selectedrow) && !tObj.grid.isCheckBoxSelection) {\n                    if (this.parent.toolbar['includes']('Indent')) {\n                        indentElement.classList.add('e-hidden');\n                    }\n                    if (this.parent.toolbar['includes']('Outdent')) {\n                        outdentElement.classList.add('e-hidden');\n                    }\n                }\n            }\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        var indentOutdentAction = 'indentOutdentAction';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'indent');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length\n            && !isNullOrUndefined(tObj.rowDragAndDropModule)) {\n            this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, 'outdent');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[parseInt(d.toString(), 10)].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[parseInt(d.toString(), 10)];\n            }\n            if (data[parseInt(d.toString(), 10)].hasChildRecords) {\n                var childSort = (new DataManager(data[parseInt(d.toString(), 10)].childRecords)\n                    .executeLocal(srtQry));\n                if (this.parent.allowRowDragAndDrop && data[parseInt(d.toString(), 10)].childRecords.indexOf(this.parent.rowDragAndDropModule['draggedRecord']) !== -1 && this.parent.rowDragAndDropModule['dropPosition'] !== 'middleSegment') {\n                    var dragdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['draggedRecord']);\n                    childSort.splice(dragdIndex, 1);\n                    var dropdIndex = childSort.indexOf(this.parent.rowDragAndDropModule['droppedRecord']);\n                    if (this.parent.rowDragAndDropModule['dropPosition'] === 'topSegment') {\n                        childSort.splice(dropdIndex, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                    else if (this.parent.rowDragAndDropModule['dropPosition'] === 'bottomSegment') {\n                        childSort.splice(dropdIndex + 1, 0, this.parent.rowDragAndDropModule['draggedRecord']);\n                    }\n                }\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        var indent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Indent', args.element);\n        var outdent = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Outdent', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false || this.parent.grid.isEdit) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n        var tObj = this.parent;\n        var selectedrow = tObj.getSelectedRows()[0];\n        if ((indent || outdent) && !isNullOrUndefined(selectedrow)) {\n            var targetElement = args.event.target.closest('td');\n            if (isNullOrUndefined(targetElement) || (!isNullOrUndefined(targetElement) && !targetElement.classList.contains('e-rowcell'))) {\n                indent.style.display = outdent.style.display = 'none';\n            }\n            else {\n                if (selectedrow.rowIndex === 0 || tObj.getSelectedRowIndexes().length > 1) {\n                    indent.style.display = outdent.style.display = 'none';\n                }\n                else if (args['name'] !== 'rowDeselected' || (!isNullOrUndefined(selectedrow) && tObj.grid.isCheckBoxSelection)) {\n                    var selectedItem = tObj.getCurrentViewRecords()[selectedrow.rowIndex];\n                    if (!isNullOrUndefined(selectedItem)) {\n                        if ((selectedItem.level > tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            indent.style.display = 'none';\n                        }\n                        else {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === tObj.getCurrentViewRecords()[selectedrow.rowIndex - 1].level) && this.parent.editSettings.mode !== 'Batch'\n                            && this.parent.editSettings.mode !== 'Cell') {\n                            indent.style.display = 'block';\n                        }\n                        if ((selectedItem.level === 0) || this.parent.editSettings.mode === 'Batch'\n                            || this.parent.editSettings.mode === 'Cell') {\n                            outdent.style.display = 'none';\n                        }\n                        else {\n                            outdent.style.display = 'block';\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (tObj.grid.isEdit && isNullOrUndefined(selectedrow)) {\n                indent.style.display = 'none';\n                outdent.style.display = 'none';\n            }\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below' || args.item.id === 'Child') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.editModule['isAddedRowByContextMenu'] = true;\n            this.parent.addRecord();\n        }\n        if (args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' || args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Outdent') {\n            if (!isNullOrUndefined(this.parent.rowDragAndDropModule)) {\n                var indentOutdentAction = 'indentOutdentAction';\n                var action = args.item.id === this.parent.element.id + '_gridcontrol_cmenu_Indent' ? 'indent' : 'outdent';\n                this.parent.rowDragAndDropModule[\"\" + indentOutdentAction](null, action);\n            }\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        if (!isNullOrUndefined(args.row) && this.parent.getSelectedRows().indexOf(args.row) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = args.row.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getHeaderContent()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getRows();\n            var movableRowsObject = this.parent.grid.getRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.parent.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && !this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            _this.afterCellSave(args, row_1, rowIndex_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            if ((this.isAddedRowByMethod || (this.isAddedRowByContextMenu && this.parent.grid.selectedRowIndex !== -1)) &&\n                (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else {\n                this.addRowRecord = this.parent.getSelectedRecords()[0];\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' && isNullOrUndefined(this.addRowRecord)\n            && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        if (isNullOrUndefined(this.addRowRecord) && this.parent.getCurrentViewRecords().length > this.addRowIndex &&\n            args.requestType === 'save' && this.parent.getSelectedRecords().length !== 0) {\n            this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[\"\" + visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[parseInt(i.toString(), 10)].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[parseInt(i.toString(), 10)].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[parseInt(i.toString(), 10)]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[parseInt(i.toString(), 10)].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[parseInt(i.toString(), 10)].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[\"\" + matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Cell, CellType } from '@syncfusion/ej2-grids';\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport * as literals from '../base/constant';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser, debounce } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        if (this.parent.enableVirtualization && this.parent.isFrozenGrid()) {\n            return this.getRowCollection(index, true);\n        }\n        else {\n            return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('data-rowindex'), 10) === index; })[0];\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getFrozenRightVirtualRowByIndex = function (index) {\n        return this.getRowCollection(index, false, false, true);\n    };\n    VirtualTreeContentRenderer.prototype.getRowCollection = function (index, isMovable, isRowObject, isFrozenRight) {\n        var startIdx = parseInt(this.parent.getRows()[0].getAttribute(literals.dataRowIndex), 10);\n        var rowCollection = this.parent.getDataRows();\n        var collection = isRowObject ? this.parent.getCurrentViewRecords() : rowCollection;\n        var selectedRow = collection[index - startIdx];\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n            if (!isRowObject) {\n                selectedRow = index <= this.parent.frozenRows ? rowCollection[parseInt(index.toString(), 10)]\n                    : rowCollection[(index - startIdx) + this.parent.frozenRows];\n            }\n            else {\n                selectedRow = index <= this.parent.frozenRows ?\n                    this.parent.getRowsObject()[parseInt(index.toString(), 10)].data : selectedRow;\n            }\n        }\n        return selectedRow;\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if ((this.recordAdded || args.requestType === 'delete' && this.endIndex > args.count - this.parent.pageSettings.pageSize) && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else if (this.parent.root.editSettings.newRowPosition !== 'Top' && this.parent.root.editModule.selectedIndex !== -1 || this.parent.root.editModule.selectedIndex !== -1) {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        if ((this.endIndex - this.startIndex !== this.parent.pageSettings.pageSize) &&\n            (this.totalRecords > this.parent.pageSettings.pageSize)\n            && (this.endIndex === this.totalRecords)) {\n            args.startIndex = this.endIndex - this.parent.pageSettings.pageSize;\n            args.endIndex = this.endIndex;\n        }\n        else {\n            args.startIndex = this.startIndex;\n            args.endIndex = this.endIndex;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[\"\" + action]('data-ready', this.onDataReady, this);\n            this.parent[\"\" + action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); }, _this.onEnteredAction(), _this.parent);\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[\"\" + action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[\"\" + action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[\"\" + action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[\"\" + action]('edit-reset', this.resetIseditValue, this);\n            this.parent[\"\" + action]('get-virtual-data', this.getData, this);\n            this.parent[\"\" + action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[\"\" + action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n            this.parent[\"\" + action]('refresh-virtual-editform-cells', this.refreshCell, this);\n            this.parent[\"\" + action]('virtaul-cell-focus', this.cellFocus, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cellFocus = function (e) {\n        var virtualCellFocus = 'virtualCellFocus';\n        _super.prototype[\"\" + virtualCellFocus].call(this, e);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                // To overcome the white space issue in last page when records collapsed\n                if (this.parent.isFrozenGrid() && e.count < Object.keys(this.parent.dataSource).length) {\n                    var width = this.parent.enableColumnVirtualization ?\n                        this.getColumnOffset(this.parent.columns.length - 1) + 'px' : '100%';\n                    var height = (this.parent.getRowHeight() * e.count) -\n                        (this.parent.getRowHeight() * this.parent.pageSettings.pageSize);\n                    getValue('virtualEle', this).setVirtualHeight(height, width);\n                }\n                if (!this.parent.enableColumnVirtualization && !this.parent.isFrozenGrid()) {\n                    getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                }\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || (this.isDataSourceChanged && (this.startIndex === -1 || this.startIndex === 0 && this['preStartIndex'] === 0))) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (!isNullOrUndefined(this.parent.getRowByIndex(0)) && this.parent.getRows().length && !this[\"\" + initialRowTop]) {\n            var rowTop = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n            var gridTop = this.parent.element.getBoundingClientRect().top;\n            if (rowTop > 0) {\n                this[\"\" + initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top - gridTop;\n            }\n            else {\n                this[\"\" + initialRowTop] = this.content.getBoundingClientRect().top -\n                    this.parent.getRowByIndex(0).getBoundingClientRect().height;\n            }\n        }\n        _super.prototype[\"\" + dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[\"\" + rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        if (this.parent.isEdit) {\n            return;\n        }\n        var selectVirtualRow = 'selectVirtualRow';\n        var containerRect = 'containerRect';\n        if (isNullOrUndefined(this.observer[\"\" + containerRect])) {\n            this.observer[\"\" + containerRect] = this.observers[\"\" + containerRect];\n        }\n        if (isNullOrUndefined(this.parent.clipboardModule['treeGridParent'].editModule) || args.selectedIndex !== 0 ||\n            isNullOrUndefined(this.parent.clipboardModule['treeGridParent'].editModule['addRowIndex'])) {\n            _super.prototype[\"\" + selectVirtualRow].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.refreshCell = function (rowObj) {\n        rowObj.cells = this.generateCells();\n    };\n    VirtualTreeContentRenderer.prototype.generateCells = function () {\n        var cells = [];\n        for (var i = 0; i < this.parent.columns.length; i++) {\n            cells.push(this.generateCell(this.parent.columns[parseInt(i.toString(), 10)]));\n        }\n        return cells;\n    };\n    VirtualTreeContentRenderer.prototype.generateCell = function (col, rowId, cellType, colSpan, oIndex, foreignKeyData) {\n        var opt = {\n            'visible': col.visible,\n            'isDataCell': !isNullOrUndefined(col.field || col.template),\n            'isTemplate': !isNullOrUndefined(col.template),\n            'rowID': rowId,\n            'column': col,\n            'cellType': !isNullOrUndefined(cellType) ? cellType : CellType.Data,\n            'colSpan': colSpan,\n            'commands': col.commands,\n            'isForeignKey': col.isForeignColumn && col.isForeignColumn(),\n            'foreignKeyData': col.isForeignColumn && col.isForeignColumn() && getValue(col.field, foreignKeyData)\n        };\n        if (opt.isDataCell || opt.column.type === 'checkbox' || opt.commands) {\n            opt.index = oIndex;\n        }\n        return new Cell(opt);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        this['editedRowIndex'] = e.index;\n        var selector = '.e-row[data-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.dataRowIndex = addArgs.dataRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[\"\" + isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[\"\" + addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[\"\" + restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[\"\" + isAdd]) {\n            _super.prototype[\"\" + resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[\"\" + editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[\"\" + selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[\"\" + isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.editModule.addRecord(null, this.parent.root.editModule.selectedIndex);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[\"\" + getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, dataRowIndex: this.dataRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.dataRowIndex = this.parent.root.editModule.selectedIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[\"\" + actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.onEnteredAction = function () {\n        var _this = this;\n        return function (element, current, direction, e, isWheel, check) {\n            var directVirtualRender = 'directVirtualRender';\n            if (!_this.parent[\"\" + directVirtualRender]) { // with this property, columns are rendered without debouncing on horizontal scroll.\n                var preventEvent = 'preventEvent';\n                if (Browser.isIE && !isWheel && check && !_this[\"\" + preventEvent] && !_this.parent.enableVirtualMaskRow) {\n                    _this.parent.showSpinner();\n                }\n                if (_this.parent.enableVirtualMaskRow && !_this[\"\" + preventEvent]) {\n                    setTimeout(function () {\n                        _this.parent.showMaskRow(current.axis);\n                        _this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n                    }, 0);\n                }\n                var height = _this.content.getBoundingClientRect().height;\n                var top_1 = _this.prevInfo.offsets ? _this.prevInfo.offsets.top : null;\n                var xAxis = current.axis === 'X';\n                var x = _this.getColumnOffset(xAxis ? _this.vgenerator.getColumnIndexes()[0] - 1 : _this.prevInfo.columnIndexes[0]\n                    - 1);\n                if (xAxis) {\n                    var idx = Object.keys(_this.vgenerator.cOffsets).length - _this.prevInfo.columnIndexes.length;\n                    var maxLeft = _this.vgenerator.cOffsets[idx - 1];\n                    x = x > maxLeft ? maxLeft : x; //TODO: This fix horizontal scrollbar jumping issue in column virtualization.\n                }\n                var y = _this.getTranslateY(e.top, height, xAxis && top_1 === e.top ? _this.prevInfo : undefined, true);\n                if (!_this.parent.isFrozenGrid() || _this.parent.enableVirtualMaskRow) {\n                    if (_this.parent.enableVirtualMaskRow) {\n                        var upScroll = (e.top - _this.translateY) < 0;\n                        y = (Math.round(_this.translateY) > y && !upScroll) ? Math.round(_this.translateY) : y;\n                        _this.virtualEle.adjustTable(x, y);\n                    }\n                    else {\n                        _this.virtualEle.adjustTable(x, _this.translateY);\n                    }\n                    if (_this.parent.enableColumnVirtualization) {\n                        _this.header.virtualEle.adjustTable(x, 0);\n                    }\n                }\n            }\n        };\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        this['scrollAfterEdit']();\n        var info = scrollArgs.sentinel;\n        var rowHeight = this.parent.getRowHeight();\n        var outBuffer = this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 2);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * rowHeight;\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = Math.ceil(scrollArgs.offset.top - this.translateY) + rowHeight >= scrollHeight;\n        var selectedRowIndex = 'selectedRowIndex';\n        var currentViewData = this.parent.currentViewData;\n        var indexValue = 'index';\n        if (upScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? parseInt(this.parent.height.toString(), 10) :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / rowHeight)\n                + Math.ceil(vHeight / rowHeight))\n                - this.parent.pageSettings.pageSize;\n            index = (index > 0) ? index : 0;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 && index !== this[\"\" + selectedRowIndex]) {\n                index = this[\"\" + selectedRowIndex];\n            }\n            this.startIndex = index;\n            this.endIndex = index + this.parent.pageSettings.pageSize;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = (this.startIndex - remains) < 0 ? 0 : (this.startIndex - remains);\n            }\n            if (currentViewData.length && (currentViewData[0][\"\" + indexValue] >= this.parent.pageSettings.pageSize / 2) &&\n                ((currentViewData[0][\"\" + indexValue] - this.startIndex) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] - (this.parent.pageSettings.pageSize / 2);\n                this.endIndex = this.startIndex + this.parent.pageSettings.pageSize;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / rowHeight);\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[parseInt(rowPt.toString(), 10)]) &&\n                !isNullOrUndefined(this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[parseInt(rowPt.toString(), 10)]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('data-rowindex');\n            }\n            if (firsttdinx === 0) {\n                scrollArgs.offset.top = content.scrollTop;\n                if (this.parent.allowRowDragAndDrop) {\n                    this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                }\n                else {\n                    this.translateY = scrollArgs.offset.top;\n                }\n            }\n            else {\n                this.translateY = (scrollArgs.offset.top - (outBuffer * rowHeight) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * rowHeight) + 10 : 0;\n            }\n        }\n        else if (downScroll && (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left')) {\n            var nextSetResIndex = ~~(content.scrollTop / rowHeight);\n            var isLastBlock = (this[\"\" + selectedRowIndex] + this.parent.pageSettings.pageSize) < this.totalRecords ? false : true;\n            if (!isNullOrUndefined(this[\"\" + selectedRowIndex]) && this[\"\" + selectedRowIndex] !== -1 &&\n                nextSetResIndex !== this[\"\" + selectedRowIndex] && !isLastBlock) {\n                nextSetResIndex = this[\"\" + selectedRowIndex];\n            }\n            var lastIndex = nextSetResIndex + this.parent.pageSettings.pageSize;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = !isLastBlock || isNullOrUndefined(this['' + selectedRowIndex]) ? lastIndex - this.parent.pageSettings.pageSize : nextSetResIndex;\n            this.endIndex = lastIndex;\n            if ((nextSetResIndex + this.parent.pageSettings.pageSize) > this.totalRecords && (this.endIndex - this.startIndex) <\n                (this.parent.pageSettings.pageSize / 2) && (this.endIndex - nextSetResIndex) < (this.parent.pageSettings.pageSize / 2)) {\n                this.startIndex = lastIndex - (this.parent.pageSettings.pageSize / 2);\n            }\n            if (currentViewData.length && this.startIndex > currentViewData[0][\"\" + indexValue] &&\n                ((this.startIndex - currentViewData[0][\"\" + indexValue]) < (this.parent.pageSettings.pageSize / 2)) && this.parent.selectionModule.isRowSelected) {\n                this.startIndex = currentViewData[0][\"\" + indexValue] + (this.parent.pageSettings.pageSize / 2);\n            }\n            if (scrollArgs.offset.top > (rowHeight * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                if (this.totalRecords === this.endIndex) {\n                    this.translateY = (this.totalRecords * rowHeight) - ((this.endIndex - this.startIndex) * rowHeight);\n                }\n                else {\n                    if (this.parent.allowRowDragAndDrop) {\n                        this.translateY = scrollArgs.offset.top - rowHeight * 2;\n                    }\n                    else {\n                        this.translateY = scrollArgs.offset.top;\n                    }\n                }\n            }\n        }\n        if (((downScroll && (scrollArgs.offset.top < (rowHeight * this.totalRecords)))\n            || (upScroll)) || (scrollArgs.direction === 'right' || scrollArgs.direction === 'left') ||\n            ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n                && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') && (downScroll || upScroll) || isCountRequired(this.parent))) {\n            var viewInfo = this.currentInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            this.parent.setColumnIndexesInView(this.parent.enableColumnVirtualization ? viewInfo.columnIndexes : []);\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            this.requestType = 'virtualscroll';\n            if (scrollArgs.direction !== 'right' && scrollArgs.direction !== 'left') {\n                viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            }\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.showMaskRow(info.axis);\n                this.parent.addShimmerEffect();\n                this.parent.notify('showGanttShimmer', { requestType: 'showShimmer' });\n            }\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', virtualInfo: viewInfo, focusElement: scrollArgs.focusElement });\n        }\n        else {\n            if (this.parent.enableVirtualMaskRow) {\n                this.parent.removeMaskRow();\n                this.parent.notify('removeGanttShimmer', { requestType: 'hideShimmer' });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent) || this.parent.isFrozenGrid()) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n            if (getValue('requestTypes', this).indexOf('isFrozen') !== -1) {\n                getValue('requestTypes', this).splice(getValue('requestTypes', this).indexOf('isFrozen'), 1);\n                this.requestType = this.requestType === 'isFrozen' ? undefined : this.requestType;\n            }\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            var width = void 0;\n            if (this.parent.enableColumnVirtualization) {\n                this.header.virtualEle.adjustTable(cOffset, 0);\n                var cIndex = info.columnIndexes;\n                width = this.getColumnOffset(cIndex[cIndex.length - 1]) - this.getColumnOffset(cIndex[0] - 1) + '';\n                this.header.virtualEle.setWrapperWidth(width);\n            }\n            this.virtualEle.setWrapperWidth(width, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[\"\" + replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                this.translateY = this.translateY < 0 ? 0 : this.translateY;\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            if (e.requestType === 'virtualscroll' && e.virtualInfo.sentinelInfo.axis === 'X') {\n                this.parent.notify(events.autoCol, {});\n            }\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            var ensureSelectedRowPosition = 'ensureSelectedRowPosition';\n            _super.prototype[\"\" + focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[\"\" + isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.dataRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[\"\" + isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[\"\" + restoreAdd].call(this);\n            _super.prototype[\"\" + ensureSelectedRowPosition].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n        this.parent.off('refresh-virtual-editform-cells', this.refreshCell);\n        this.parent.off('virtaul-cell-focus', this.cellFocus);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback, onEnterCallback, instance) {\n        var containerRect = 'containerRect';\n        _super.prototype[\"\" + containerRect] = getValue('options', this).container.getBoundingClientRect();\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        if (getValue('options', this).movableContainer) {\n            var movableContainerRect = 'movableContainerRect';\n            _super.prototype[\"\" + movableContainerRect] = getValue('options', this).movableContainer.getBoundingClientRect();\n            EventHandler.add(getValue('options', this).movableContainer, 'scroll', this.virtualScrollHandlers(callback, onEnterCallback, instance), this);\n        }\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback, onEnterCallback, instance) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var options = 'options';\n        var movableEle = 'movableEle';\n        var element = 'element';\n        var fromWheel = 'fromWheel';\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        this[\"\" + options].prevTop = this[\"\" + options].prevLeft = 0;\n        return function (e) {\n            var top = _this[\"\" + options].movableContainer ? _this[\"\" + options].container.scrollTop : e.target.scrollTop;\n            var left = _this[\"\" + options].movableContainer ? _this[\"\" + options].scrollbar.scrollLeft : e.target.scrollLeft;\n            var direction = _this[\"\" + options].prevTop < top ? 'down' : 'up';\n            direction = _this[\"\" + options].prevLeft === left ? direction : _this[\"\" + options].prevLeft < left ? 'right' : 'left';\n            _this[\"\" + options].prevTop = top;\n            _this[\"\" + options].prevLeft = left;\n            var current = _this.sentinelInfo[\"\" + direction];\n            var delta = 0;\n            _this.newPos = top;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            if (_this[\"\" + options].axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var containerRect = 'containerRect';\n            _this[\"\" + containerRect] = _this[\"\" + options].container.getBoundingClientRect();\n            var check = _this.check(direction);\n            if (current.entered && (current.axis === 'X' || instance.enableVirtualMaskRow)) {\n                if (_this[\"\" + movableEle] && (direction === 'right' || direction === 'left')) {\n                    onEnterCallback(_this[\"\" + movableEle], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n                else {\n                    onEnterCallback(_this[\"\" + element], current, direction, { top: top, left: left }, _this[\"\" + fromWheel], check);\n                }\n            }\n            if (check) {\n                var fn = debounced50;\n                if (current.axis === 'X') {\n                    fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                        focusElement: document.activeElement });\n                }\n                else {\n                    if ((instance.dataSource instanceof DataManager && instance.dataSource.dataSource.url !== undefined\n                        && !instance.dataSource.dataSource.offline && instance.dataSource.dataSource.url !== '') || isCountRequired(instance)\n                        || instance.enableVirtualMaskRow) {\n                        fn = instance.enableVirtualMaskRow ? debounced100 : fn;\n                        fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                    else {\n                        callback({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                            focusElement: document.activeElement });\n                    }\n                }\n            }\n            _this[\"\" + fromWheel] = false;\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\nimport { VirtualHeaderRenderer, getTransformValues } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n        this.parent.on(events.destroy, this.destroy, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n        this.parent.off(events.destroy, this.destroy);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        if (this.parent.enableVirtualization && this.parent.selectionSettings.mode === 'Cell' ||\n            this.parent.selectionSettings.mode === 'Row' && !this.parent.selectionSettings.persistSelection) {\n            this.parent.grid.clearSelection();\n        }\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count, requestType: pageingDetails.actionArgs.requestType };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' || requestType === 'searching' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            if ((requestType === 'save' && pageingDetails.actionArgs.index >= (counts.count - this.parent.grid.pageSettings.pageSize)) || (requestType === 'refresh' && this.parent['isGantt'] && this.parent['isAddedFromGantt'])) {\n                startIndex = counts.startIndex + (counts.count - counts.endIndex);\n                endIndex = counts.count;\n                this.parent['isAddedFromGantt'] = false;\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            var virtualWrapperElement = this.parent.grid.contentModule.virtualEle.wrapper;\n            var translateY = getTransformValues(virtualWrapperElement).height;\n            if (!isNullOrUndefined(this.expandCollapseRec) && (pageingDetails.actionArgs.requestType === 'virtualscroll' ||\n                (pageingDetails.actionArgs.requestType === 'refresh' && startIndex !== this.prevstartIndex)) &&\n                (startIndex < this.parent.getRows().length && endIndex <= startIndex + this.parent.getRows().length) && translateY === 0) {\n                startIndex = 0;\n            }\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0 && startIndex !== 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n            }\n            //}\n            if ((this.parent.enableCollapseAll || this.parent.expandStateMapping) && !isNullOrUndefined(this.expandCollapseRec)) {\n                if (pageingDetails.count < this.parent.getRows()[0].getBoundingClientRect().height) {\n                    startIndex = 0;\n                }\n                else if (!this.parent['isExpandAll']) {\n                    startIndex = this.prevstartIndex === -1 ? 0 : this.prevstartIndex;\n                }\n            }\n            this.expandCollapseRec = null;\n            startIndex = startIndex < 0 ? 0 : startIndex;\n            if (endIndex === 0 && visualData.length > 0) {\n                pageingDetails.result = visualData;\n            }\n            else {\n                pageingDetails.result = visualData.slice(startIndex, endIndex);\n            }\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        var parentGrid = getValue('parent', this);\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        if (parentGrid.enableColumnVirtualization) {\n            getValue('addRenderer', renderer)\n                .apply(renderer, [RenderType.Header, new VirtualHeaderRenderer(getValue('parent', this), getValue('locator', this))]);\n        }\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parseInt(parentGrid.height.toString(), 10) :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        var frozenRightRows;\n        var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n            this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n        if (freeze) {\n            frozenRightRows = this.parent.getRows().filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var rData = this.parent.grid.getRowObjectFromUID(row.getAttribute('data-Uid')).data;\n            if (!isNullOrUndefined(movableRows) && row.parentElement.firstElementChild.clientHeight > 0) {\n                row.style.height = row.parentElement.firstElementChild.clientHeight + 'px';\n            }\n            row.style.display = args.action;\n            if (freeze && frozenRightRows.length) {\n                frozenRightRows[parseInt(i.toString(), 10)].style.display = args.action;\n            }\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[row.rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[parseInt(i_1.toString(), 10)].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (cRow.length) {\n                    var data = this.parent.getCurrentViewRecords()[cRow[0].rowIndex];\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action, record: data });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell' && (!e.target['classList'].contains('e-treegridcollapse') && !e.target['classList'].contains('e-treegridexpand'))) {\n            this.parent.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getExpandStatus } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandInfinitechilds);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    InfiniteScroll.prototype.collapseExpandInfinitechilds = function (row) {\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var infiniteParents = dm.executeLocal(new Query().where(expanded));\n        var visualData = infiniteParents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, infiniteParents);\n        });\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    if ((pageingDetails.actionArgs['action'] === 'expand' || pageingDetails.actionArgs['action'] === 'collapse') && this.parent.grid.pageSettings.currentPage !== 1) {\n                        current = 1;\n                        size = this.parent.grid.pageSettings.pageSize * this.parent.grid.pageSettings.currentPage;\n                    }\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getRowsObject();\n                var mRowElms = this.parent.grid.getRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getContent().querySelector('tbody')\n                : this.parent.grid.getContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getHeaderContent().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getHeaderContent().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","parseInt","toString","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","filter","item","isSummaryRow","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","e","p","enableImmutableMode","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","updatedParent","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","index_2","treeColumnIndex","allowRowDragAndDrop","renderModule","cellRender","cell","cells","column","getColumns","requestType","RowModifier","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","this","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Column","options","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","setProperties","clipboardModule","uid","TreeGridColumn","_super","apply","Property","StackedColumn","LoadingIndicator","ChildProperty","Predicate","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","IsRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","serviceLocator","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","filteredList","searchingRecords","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","aria-label","setAttribute","checkboxState","allowTextWrap","width","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","indeter","checkChildRecords","checkBoxRecord","hasFilteredChildRecords","checkAll","multiFilterCheckState","filterResult","rec","currentRecord","checkedRecord","currentViewData","recordIndex","checkboxRecord","tr","movableTr","getDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","rowsObj","getRowsObject","isFrozenGrid","visible","proxy_1","parentrec","rowDragAndDropModule","getContentTable","scrollHeight","getContent","clientHeight","getVisibleRecords","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","enableColumnVirtualization","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","loadChildOnDemand","expandIcon","expand","updateTreeCell","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","freezerightColumns","getFrozenRightColumns","freezeLeftColumns","getFrozenLeftColumns","movableColumns","getMovableColumns","field","notify","checkboxElement","summaryData","template","rowTemplate","treeColumn","colindex","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","refreshReactColumnTemplateByUid","columnUid","clearTemplate","undefined","indent","getIndentCount","cellIndex","getNormalizedColumnIndex","isDataRow","cellRenderer","CellRenderer","td","getCellFromIndex","refreshTD","treecell","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","searchString","expands","isExpandCollapse","this_1","childRecords_1","parent_1","getUid","Math","ceil","random","aggregates","summaryQuery","q","fn","summaryModule","calculateSummaryValue","rowDetails","isChild","gridRows","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","take","pageSize","expandDetail","filterqry","predicates","showSpinner","inx","haveChild","resultChildData","gridQuery","aggregateQuery","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","sortBy","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","compFun","sortComparer","bind","direction","dragdIndex","dropdIndex","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","indentOutdentAction","modifiedRecords","stackedHeader","objectEqualityChecker","old","current","isEqual","excludeKeys","Date","getTime","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","serverExcelExport","url","isExcel","exportTreeGrid","serverPdfExport","serverCsvExport","state","processQuery","JSON","parse","treeGridModel","addOnPersist","include","fields","search","sorted","setHeaderText","form","treeGridInput","name","stringify","method","document","body","submit","remove","getColumnByField","getFormat","currencyCode","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","Child","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","getColumnByIndex","editType","findnextRowElement","selectRow","cellIndex_1","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","infiniteScrollData","remoteCollapsedData","remoteExpandedData","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","freezePresent","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","IsRowDDInjected","isIndentEnabled","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","loggerModule","render","portals","isVue","vueInstance","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","refreshToolbarItems","renderComplete","destroyTemplateFn","toolbarElement","toolbarModule","getToolbar","indentID","outdentID","indentElement","outdentElement","afterGridRender","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableVirtualMaskRow","loadingIndicator","enableAltRow","enableHover","enableAutoFill","enableAdaptiveUI","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","clipMode","enableHtmlSanitizer","triggerEvents","IsExpandCollapseClicked","checkboxOnly","bindGridEvents","rowSelecting","rowDeselecting","rowSelected","isHeaderCheckboxClicked","selectionModule","selectedRowIndexes","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","persistSelection","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","JsonAdaptor","actionBegin","dataManager","isQueryInvokedFromData","callBackPromise_2","actionComplete","updateTreeGridModel","ag","showChildSummary","refresh","selectedItem_1","selectedRecords","dropIndex","dropPosition","selectedRows","movableContent","frozenContent","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","iconCss","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","enablePersistence","treeColumnTextAlign","textAlign","treeColumnField","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","updateTreeColumnTextAlign","closeEdit","treeGridElement","hasTreeGridChild","removeListener","dataBind","getElementById","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","val","ignoreInArrays","ignoreInColumn","touches","isEditCollapse","isCheckBoxSelection","isPersistSelection","checkedTarget","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","visibleRecords","sHeight","goToPage","pageNo","pagerModule","updateExternalMessage","iterateArrayOrObject","Columns","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","getVirtualColIndexByUid","isRefresh","gridColumns","updateColumnsWidth","currentColumn","mergeColumns","storedColumn","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","rowInfo_1","parentRec","getCollapseExpandRecords","pagerValuePresent","pagerObj","pagerdropdownModule","isExpandingEventTriggered","expandAllPrevent","expandRows","expandingArgs","expandCollapseAllChildren","expandCollapse","expandArgs","updateExpandStateMapping","isExpandedEventTriggered","isCollapsingEventTriggered","collapseAllPrevent","collapseRows","collapsingArgs","collapseArgs","isCollapsedEventTriggered","firstElementChild","scrollTop","getRowHeight","scrollBy","totalRecords","expandAtLevel","expandAction","getRecordDetails","expandByKey","expandCollapseActionByKey","isPaging","puniqueID_1","collapseAtLevel","collapseAction","collapseByKey","primaryKeyField","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","lastrowIdx","lastRow","removeAttribute","flatDataRecords","deff","data_1","length_1","scrollHeightBeforeRefresh","rows_1","args_1","collapseRemoteChild","movableRows","freezeRightRows","rows_2","freeze","gridRowsObject","currentIndex","visibleRowCount","gridRow","rcell","arg","movablerows","rightrows","collapsingTd","collapse","expandElement","cRow","eRows","i_1","sanitize","SanitizeHtmlHelper","updateRowAndCellElements","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getMovableDataRows","getMovableRowByIndex","getMovableRows","getFrozenRightRowByIndex","getFrozenRightRows","getFrozenRightDataRows","getFrozenRightCellFromIndex","getFrozenLeftColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableColumnsCount","getVisibleMovableCount","getVisibleFrozenRightCount","getVisibleFrozenLeftCount","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","outdent","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","hasDropItem","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropRows","orderToIndex","dropData","totalRecord","parentrow","request","selectedItemIndex","selectedItem","selectedRow","selectedRecord","record_1","eventTrigger","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","islastRowIndex","isEmptyRow","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","getBoundingClientRect","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","pageY","changedTouches","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","errorelem","errorValue","setStyleAttribute","border","box","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","actualData","srcControlFlatData","actualIndex","isByMethod","draggedRecord_2","fromIndex","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","newParentIndex","recordIndex1","dropAtTop","getChildCount","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","getDataInfo","getData","generateRows","virtualInfo","info","blockIndexes","getBlockIndexes","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","excelRow","excelrowobj","rowObj","filtercolumnlength","rowlength","excelRows","rowlevel","Boolean","expandedStatus","sublevelState","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","primaryKeyField_1","ret","pageRoot","pagedResults","newResults","t","res","updatePageSize","pageingDetails","updateSize","gridPagerModule","pageSizes","getLocalizedLabel","propname","skip","size","dm_1","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","indentEle","outdentEle","selectedrow","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","summaryLength","dataLength","getChildRecordsLength","summaryRowIndex","len_1","createSummaryItem","idx_1","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","event","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","newlyAddedRecords","childs","primarykey","parentRowIndex","getRowElementByUID","totalCount","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","endIndex","rowPosition","indexValue","Edit","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","dataset","addArgs","dataRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","columnObject","toolbarID","cellDetails","treeCell","afterCellSave","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","errors","focus","newlyAddedRecord","seletedRow","beginAddEdit","primaryKeys_2","selector","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","getRowCollection","getFrozenRightVirtualRowByIndex","isMovable","isRowObject","isFrozenRight","startIdx","rowCollection","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","root","onDataReady","refreshContentRows","observers","observes","scrollArgs","scrollListeners","onEnteredAction","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","cancelEdit","toSelectRowOnContextOpen","refreshCell","cellFocus","getColumnOffset","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","isOnenter","gridTop","observer","generateCells","generateCell","rowId","cellType","colSpan","oIndex","foreignKeyData","isDataCell","isTemplate","rowID","Data","isForeignKey","isForeignColumn","Cell","withInRange","restoreEditState","restoreNewRow","isWheel","isIE","showMaskRow","axis","top_1","offsets","xAxis","vgenerator","getColumnIndexes","columnIndexes","cOffsets","maxLeft","upScroll","virtualEle","adjustTable","header","sentinel","outBuffer","offset","downScroll","vHeight","lastInx","remains","isRowSelected","rowPt","firsttdinx","isLastBlock","viewInfo","previousInfo","setColumnIndexesInView","loadSelf","addShimmerEffect","removeMaskRow","appendContent","newChild","sentinelInfo","cBlock","cOffset","setWrapperWidth","getTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","onEnterCallback","instance","virtualScrollHandlers","movableContainer","delay","debounced100","debounce","debounced50","prevTop","prevLeft","scrollbar","delta","clearTimeout","preventDefault","returnValue","axes","entered","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","virtualWrapperElement","wrapper","getTransformValues","resourceCount","sIndex","instantiateRenderers","parentGrid","renderer","getService","RenderType","Header","VirtualHeaderRenderer","Content","ensurePageSize","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenRightRows","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","collapseExpandInfinitechilds","rowRenderer","RowRenderer","childRowObjects","childRowElements","infiniteParents","actions","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRows","mRowElms","tbody","currentRows","isFrozenRows","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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qb,EAAShhB,UAAW,oBAAiB,IACxCgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,kBAAe,IACtCgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,qBAAkB,IACzCgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,uBAAoB,IAC3CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,0BAAuB,IAC9CgE,IACI2B,WAAS,SACVqb,EAAShhB,UAAW,aAAU,IACjCgE,IACI2B,WAAS,SACVqb,EAAShhB,UAAW,YAAS,IAChCgE,IACIu/B,aAAY19B,IACbmb,EAAShhB,UAAW,uBAAoB,IAC3CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,2BAAwB,IAC/CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,2BAAwB,IAC/CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,iCAA8B,IACrDgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,0BAAuB,IAC9CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,8BAA2B,IAClDgE,IACIu/B,aAAYxiB,KACbC,EAAShhB,UAAW,6BAA0B,IACjDgE,IACI2B,WAAS,QACVqb,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,cAAW,IAClCgE,IACIy/B,WACDziB,EAAShhB,UAAW,WAAQ,IAC/BgE,IACIy/B,WACDziB,EAAShhB,UAAW,gBAAa,IACpCgE,IACIy/B,WACDziB,EAAShhB,UAAW,eAAY,IACnCgE,IACIy/B,WACDziB,EAAShhB,UAAW,iBAAc,IACrCgE,IACIy/B,WACDziB,EAAShhB,UAAW,gBAAa,IACpCgE,IACIy/B,WACDziB,EAAShhB,UAAW,eAAY,IACnCgE,IACIy/B,WACDziB,EAAShhB,UAAW,gBAAa,IACpCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,gBAAa,IACpCgE,IACIy/B,WACDziB,EAAShhB,UAAW,eAAY,IACnCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,wBAAqB,IAC5CgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,eAAY,IACnCgE,IACIy/B,WACDziB,EAAShhB,UAAW,oBAAiB,IACxCgE,IACIy/B,WACDziB,EAAShhB,UAAW,gBAAa,IACpCgE,IACIy/B,WACDziB,EAAShhB,UAAW,wBAAqB,IAC5CgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,wBAAqB,IAC5CgE,IACIy/B,WACDziB,EAAShhB,UAAW,mBAAgB,IACvCgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,oBAAiB,IACxCgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,mBAAgB,IACvCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,oBAAiB,IACxCgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,oBAAiB,IACxCgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,mBAAgB,IACvCgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,eAAY,IACnCgE,IACIy/B,WACDziB,EAAShhB,UAAW,iBAAc,IACrCgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,iBAAc,IACrCgE,IACIy/B,WACDziB,EAAShhB,UAAW,iBAAc,IACrCgE,IACIy/B,WACDziB,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,oBAAiB,IACxCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,mBAAgB,IACvCgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,sBAAmB,IAC1CgE,IACIy/B,WACDziB,EAAShhB,UAAW,uBAAoB,IAC3CgE,IACIy/B,WACDziB,EAAShhB,UAAW,iBAAc,IACrCgE,IACIy/B,WACDziB,EAAShhB,UAAW,kBAAe,IACtCgE,IACIy/B,WACDziB,EAAShhB,UAAW,cAAW,IAClCgE,IACIy/B,WACDziB,EAAShhB,UAAW,mBAAgB,IACvCgE,IACIy/B,WACDziB,EAAShhB,UAAW,yBAAsB,IAC7CgE,IACIy/B,WACDziB,EAAShhB,UAAW,cAAW,IAClCgE,IACI2B,YAAU,IACXqb,EAAShhB,UAAW,uBAAoB,IAC3CgE,IACIu/B,aAAYhyB,IACbyP,EAAShhB,UAAW,wBAAqB,IAC5CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,uBAAoB,IAC3CgE,IACI2B,YAAS,IACVqb,EAAShhB,UAAW,qBAAkB,IACzCgE,IACIy/B,WACDziB,EAAShhB,UAAW,uBAAoB,IAC3CgE,IACIy/B,WACDziB,EAAShhB,UAAW,6BAA0B,IACjDgE,IACIy/B,WACDziB,EAAShhB,UAAW,yBAAsB,IAC7CgE,IACIy/B,WACDziB,EAAShhB,UAAW,+BAA4B,IACnDgE,IACIy/B,WACDziB,EAAShhB,UAAW,wBAAqB,IAC5CgE,IACIy/B,WACDziB,EAASh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"}