{"version":3,"file":"ej2-heatmap.min.js","sources":["../../src/heatmap/model/theme.js","../../src/heatmap/utils/helper.js","../../src/heatmap/model/base.js","../../src/heatmap/utils/colorMapping.js","../../src/heatmap/axis/axis.js","../../src/heatmap/axis/axis-helpers.js","../../src/heatmap/series/series.js","../../src/heatmap/utils/tooltip.js","../../src/heatmap/datasource/twodimensional.js","../../src/heatmap/legend/legend.js","../../src/heatmap/datasource/adaptor.js","../../src/heatmap/utils/export.js","../../src/heatmap/heatmap.js","../../src/global.js"],"sourcesContent":["/**\n * Specifies HeatMaps Themes\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.heatMapTitleFont = {\n        size: '15px',\n        fontWeight: '500',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.titleFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None'\n    };\n    /** @private */\n    Theme.axisTitleFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None'\n    };\n    /** @private */\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None'\n    };\n    /** @private */\n    Theme.rectLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None'\n    };\n    /** @private */\n    Theme.tooltipFont = {\n        size: '13px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI',\n        textOverflow: 'None'\n    };\n})(Theme || (Theme = {}));\n/**\n * Functions to check whether target object implement specific interface.\n *\n * @param  { HeatMapTheme } theme - specifies the value.\n * @returns { IThemeStyle } returns the theme style\n * @private\n */\nexport function getThemeColor(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'highcontrastlight':\n        case 'highcontrast':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#ffffff',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                heatMapTitle: '#ffffff',\n                axisTitle: '#ffffff',\n                axisLabel: '#DADADA',\n                cellBorder: '#EEEEEE',\n                background: '#000000',\n                cellTextColor: '#000000',\n                toggledColor: '#000000',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#ffffff',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                heatMapTitle: '#212529',\n                axisTitle: '#212529',\n                axisLabel: '#212529',\n                cellBorder: '#E9ECEF',\n                background: '#FFFFFF',\n                cellTextColor: '#212529',\n                toggledColor: '#ffffff',\n                emptyCellColor: '#E9ECEF',\n                legendLabel: '#212529',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n        case 'tailwind':\n            style = {\n                heatMapTitle: '#374151',\n                axisTitle: '#374151',\n                axisLabel: '#6B7280',\n                cellBorder: '#E5E7EB',\n                background: 'transparent',\n                cellTextColor: '#111827',\n                toggledColor: 'transparent',\n                emptyCellColor: '#E5E7EB',\n                legendLabel: '#374151',\n                palette: [{ 'color': '#5A61F6' },\n                    { 'color': '#65A30D' },\n                    { 'color': '#14B8A6' }]\n            };\n            break;\n        case 'tailwinddark':\n            style = {\n                heatMapTitle: '#D1D5DB',\n                axisTitle: '#D1D5DB',\n                axisLabel: '#9CA3AF',\n                cellBorder: '#4B5563',\n                background: 'transparent',\n                cellTextColor: '#FFFFFF',\n                toggledColor: 'transparent',\n                emptyCellColor: '#374151',\n                legendLabel: '#D1D5DB',\n                palette: [{ 'color': '#8B5CF6' },\n                    { 'color': '#22D3EE' },\n                    { 'color': '#F87171' }]\n            };\n            break;\n        case 'bootstrap5':\n            style = {\n                heatMapTitle: '#343A40',\n                axisTitle: '#343A40',\n                axisLabel: '#495057',\n                cellBorder: '#D1D5DB',\n                background: 'transparent',\n                cellTextColor: '#111827',\n                toggledColor: 'transparent',\n                emptyCellColor: '#E5E7EB',\n                legendLabel: '#343A40',\n                palette: [{ 'color': '#D7E7FF' },\n                    { 'color': '#0D6EFD' },\n                    { 'color': '#013889' }]\n            };\n            break;\n        case 'bootstrap5dark':\n            style = {\n                heatMapTitle: '#E9ECEF',\n                axisTitle: '#E9ECEF',\n                axisLabel: '#CED4DA',\n                cellBorder: '#4B5563',\n                background: 'transparent',\n                cellTextColor: '#FFFFFF',\n                toggledColor: 'transparent',\n                emptyCellColor: '#343A40',\n                legendLabel: '#E9ECEF',\n                palette: [{ 'color': '#A860F1' },\n                    { 'color': '#5ECB9B' },\n                    { 'color': '#557EF7' }]\n            };\n            break;\n        case 'fluent':\n            style = {\n                heatMapTitle: '#201F1E',\n                axisTitle: '#201F1E',\n                axisLabel: '#201F1E',\n                cellBorder: '#EDEBE9',\n                background: 'transparent',\n                cellTextColor: '#111827',\n                toggledColor: 'transparent',\n                emptyCellColor: '#EDEBE9',\n                legendLabel: '#201F1E',\n                palette: [{ 'color': '#EDEBE9' },\n                    { 'color': '#614570' },\n                    { 'color': '#4C6FB1' }]\n            };\n            break;\n        case 'fluentdark':\n            style = {\n                heatMapTitle: '#F3F2F1',\n                axisTitle: '#F3F2F1',\n                axisLabel: '#F3F2F1',\n                cellBorder: '#EDEBE9',\n                background: 'transparent',\n                cellTextColor: '#FFFFFF',\n                toggledColor: 'transparent',\n                emptyCellColor: '#292827',\n                legendLabel: '#F3F2F1',\n                palette: [{ 'color': '#292827' },\n                    { 'color': '#2A72D5' },\n                    { 'color': '#43B786' }]\n            };\n            break;\n        case 'material3':\n            style = {\n                heatMapTitle: '#1C1B1F',\n                axisTitle: '#1C1B1F',\n                axisLabel: '#1C1B1F',\n                cellBorder: '#C4C7C5',\n                background: 'transparent',\n                cellTextColor: '#1C1B1F',\n                toggledColor: '#F6F0FB',\n                emptyCellColor: '#F6F0FB',\n                legendLabel: '#49454E',\n                palette: [{ 'color': '#6200EE' },\n                    { 'color': '#E77A16' },\n                    { 'color': '#82C100' }]\n            };\n            break;\n        case 'material3dark':\n            style = {\n                heatMapTitle: '#E6E1E5',\n                axisTitle: '#E6E1E5',\n                axisLabel: '#E6E1E5',\n                cellBorder: '#444746',\n                background: 'transparent',\n                cellTextColor: '#E6E1E5',\n                toggledColor: '#49454F',\n                emptyCellColor: '#49454E',\n                legendLabel: '#CAC4D0',\n                palette: [{ 'color': '#4EAAFF' },\n                    { 'color': '#FA4EAB' },\n                    { 'color': '#FFF500' }]\n            };\n            break;\n        default:\n            style = {\n                heatMapTitle: '#424242',\n                axisTitle: '#424242',\n                axisLabel: '#686868',\n                cellBorder: '#EEEEEE',\n                cellTextColor: '#000000',\n                toggledColor: '#ffffff',\n                background: '#FFFFFF',\n                emptyCellColor: '#EEEEEE',\n                legendLabel: '#353535',\n                palette: [{ 'color': '#BEE7EE' },\n                    { 'color': '#85c4cf' },\n                    { 'color': '#4CA1AF' }]\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { remove, createElement, isNullOrUndefined, compile as templateComplier } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { RgbColor } from '../utils/colorMapping';\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {string} value - specifies the value\n * @param  {number} containerSize - specifies the containerSize\n * @returns {number} returns the number\n * @hidden\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {string} text - specifies the text\n * @param  {FontModel} font - specifies the font\n * @returns {Size} returns the number\n * @hidden\n */\nexport function measureText(text, font) {\n    var breakText = text || '';\n    var htmlObject = document.getElementById('heatmapmeasuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'heatmapmeasuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    if (typeof (text) === 'string' && (text.indexOf('<') > -1 || text.indexOf('>') > -1)) {\n        var textArray = text.split(' ');\n        for (var i = 0; i < textArray.length; i++) {\n            if (textArray[i].indexOf('<br/>') === -1) {\n                textArray[i] = textArray[i].replace(/[<>]/g, '&');\n            }\n        }\n        text = textArray.join(' ');\n    }\n    htmlObject.innerText = (breakText.indexOf('<br>') > -1 || breakText.indexOf('<br/>') > -1) ? breakText : text;\n    htmlObject.style.position = 'absolute';\n    htmlObject.style.visibility = 'hidden';\n    htmlObject.style.fontSize = (font.size).indexOf('px') !== -1 ? font.size : font.size + 'px';\n    htmlObject.style.fontWeight = font.fontWeight;\n    htmlObject.style.fontStyle = font.fontStyle;\n    htmlObject.style.fontFamily = font.fontFamily;\n    htmlObject.style.top = '-100';\n    htmlObject.style.left = '0';\n    htmlObject.style.whiteSpace = 'nowrap';\n    // For bootstrap line height issue\n    htmlObject.style.lineHeight = 'normal';\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/** @private */\nvar TextElement = /** @class */ (function () {\n    function TextElement(fontModel, fontColor) {\n        this['font-size'] = fontModel.size;\n        this['font-style'] = fontModel.fontStyle.toLowerCase();\n        this['font-family'] = fontModel.fontFamily;\n        this['font-weight'] = fontModel.fontWeight.toLowerCase();\n        this.fill = fontColor ? fontColor : '';\n    }\n    return TextElement;\n}());\nexport { TextElement };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {number} width - specifies the text\n * @param  {number} leftPadding - specifies the font\n * @param  {number} rightPadding - specifies the font\n * @param  {FontModel} titleStyle - specifies the font\n * @returns {number} returns the number\n * @hidden\n */\nexport function titlePositionX(width, leftPadding, rightPadding, titleStyle) {\n    var positionX;\n    if (titleStyle.textAlignment === 'Near') {\n        positionX = leftPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionX = leftPadding + width / 2;\n    }\n    else {\n        positionX = width + leftPadding;\n    }\n    return positionX;\n}\n/**\n * Specifies the size information of an element.\n */\nvar Size = /** @class */ (function () {\n    // eslint-disable-next-line valid-jsdoc\n    /** @private */\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d) {\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color ? color : '';\n        _this['stroke-width'] = parseFloat(width.toString());\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string | Function } template - Specifies the template\n * @param { HeatMap } heatMap - Specifies the heatmap\n * @param { HTMLElement }  labelTemplate - Specifies the label template\n * @param { any } rectPosition - Specifies the rect datas\n * @param { any } xLabels - Specifies the xlabels\n * @param { any } yLabels - Specifies the ylabels\n * @param { number } index - Specifies the index\n * @returns {any} templateFunction -  returns the size\n * @private\n */\n/* eslint-disable max-len */\nexport function createLabelTemplate(template, heatMap, labelTemplate, rectPosition, xLabels, yLabels, index) {\n    var templateFunction = getTemplateFunction(template, heatMap);\n    var rectData = null;\n    var dataSource = heatMap.dataSource;\n    if (heatMap.dataSourceSettings.isJsonData && (heatMap.dataSourceSettings.adaptorType === 'Cell' || heatMap.dataSourceSettings.adaptorType === 'Table')) {\n        var yLabelData_1 = heatMap.yAxis.valueType === 'Numeric' ? heatMap.yAxis.labels : yLabels;\n        var xLabelData_1 = heatMap.xAxis.valueType === 'Numeric' ? heatMap.xAxis.labels : xLabels;\n        dataSource.forEach(function (item) {\n            var yDataMapping = heatMap.dataSourceSettings.adaptorType === 'Cell' ? Object.keys(item).some(function (key) { return item[key] === yLabelData_1[rectPosition.yIndex]; }) : (Object.prototype.hasOwnProperty.call(item, yLabelData_1[rectPosition.yIndex]));\n            if (Object.keys(item).some(function (key) { return item[key] === xLabelData_1[rectPosition.xIndex]; }) && yDataMapping) {\n                rectData = item;\n            }\n        });\n    }\n    else {\n        rectData = { value: rectPosition.value, xLabel: xLabels[rectPosition.xIndex], yLabel: yLabels[rectPosition.yIndex] };\n    }\n    if (!isNullOrUndefined(templateFunction)) {\n        var tempElement = templateFunction(rectData, heatMap, templateFunction, heatMap.element.id + '_Template' + index, false);\n        var templateElement = convertElement(tempElement, heatMap.element.id + '_LabelTemplate_' + index);\n        templateElement.style.cssText = 'opacity: 1; display: flex; align-items: center; justify-content: center; z-index: 2; position: absolute;' + 'top:' + rectPosition.y + 'px;' + 'left:' + rectPosition.x + 'px;' + 'height:' + rectPosition.height + 'px;' + 'width:' + rectPosition.width + 'px;';\n        for (var i = 0; i < templateElement.children.length; i++) {\n            templateElement.children[i].style.pointerEvents = 'none';\n        }\n        labelTemplate.appendChild(templateElement);\n    }\n    return labelTemplate;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string | Function } template - Specifies the template\n * @param { HeatMap } heatMap - Specifies the heatmap\n * @returns {any}  -  returns the size\n * @private\n */\nexport function getTemplateFunction(template, heatMap) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var templateFn = null;\n    try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        else if (heatMap.isVue || heatMap.isVue3) {\n            templateFn = templateComplier(template);\n        }\n        else if (typeof template === 'function') {\n            templateFn = templateComplier(template);\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { HTMLCollection } element - Specifies the heatmap\n * @param { string } elementId - Specifies the template\n * @returns { HTMLElement }  -  returns the size\n * @private\n */\nexport function convertElement(element, elementId) {\n    var childElement = createElement('div', {\n        id: elementId\n    });\n    childElement.style.cssText = 'position: absolute;pointer-events: auto;';\n    var elementLength = element.length;\n    while (elementLength > 0) {\n        childElement.appendChild(element[0]);\n        elementLength--;\n    }\n    return childElement;\n}\n/**\n * Class to define currentRect private property.\n *\n * @private\n */\nvar CurrentRect = /** @class */ (function () {\n    function CurrentRect(x, y, width, height, value, id, xIndex, yIndex, xValue, yValue, visible, displayText, textId, allowCollection) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.id = id;\n        this.xIndex = xIndex;\n        this.yIndex = yIndex;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.visible = visible;\n        this.displayText = displayText;\n        this.textId = textId;\n        /** @private */\n        this.allowCollection = allowCollection;\n    }\n    return CurrentRect;\n}());\nexport { CurrentRect };\n/**\n * Specifies the details of the selected cells.\n */\nvar SelectedCellDetails = /** @class */ (function () {\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * @private\n     */\n    function SelectedCellDetails(value, xLabel, yLabel, xValue, yValue, cellElement, xPosition, yPosition, width, height, x, y) {\n        this.value = value;\n        this.xLabel = xLabel;\n        this.yLabel = yLabel;\n        this.xValue = xValue;\n        this.yValue = yValue;\n        this.cellElement = cellElement;\n        this.xPosition = xPosition;\n        this.yPosition = yPosition;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n    }\n    return SelectedCellDetails;\n}());\nexport { SelectedCellDetails };\n/**\n * Class to define property to draw rectangle.\n *\n * @private\n */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect, borderColor, rx, ry, transform, dashArray) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity, dashArray) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height > 0 ? rect.height : 0;\n        _this.width = rect.width > 0 ? rect.width : 0;\n        _this.rx = rx ? rx : 0;\n        _this.ry = ry ? ry : 0;\n        _this.transform = transform ? transform : '';\n        return _this;\n    }\n    return RectOption;\n}(PathOption));\nexport { RectOption };\n/**\n * Class to define property to draw circle.\n *\n * @private\n */\nvar CircleOption = /** @class */ (function (_super) {\n    __extends(CircleOption, _super);\n    function CircleOption(id, fill, border, opacity, borderColor, cx, cy, r) {\n        var _this = _super.call(this, id, fill, border.width, borderColor, opacity) || this;\n        _this.cx = cx ? cx : 0;\n        _this.cy = cy ? cy : 0;\n        _this.r = r ? r : 0;\n        return _this;\n    }\n    return CircleOption;\n}(PathOption));\nexport { CircleOption };\n/**\n * Helper Class to define property to draw rectangle.\n *\n * @private\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/**\n * Class to define property to draw text.\n *\n * @private\n */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, basic, element, fontColor) {\n        var _this = _super.call(this, element, fontColor) || this;\n        _this.transform = '';\n        _this['dominant-baseline'] = 'auto';\n        _this.labelRotation = 0;\n        _this.baseline = 'auto';\n        _this.id = id;\n        _this.x = basic.x;\n        _this.y = basic.y;\n        _this['text-anchor'] = basic['text-anchor'];\n        _this.text = basic.text;\n        _this.transform = basic.transform;\n        _this.labelRotation = basic.labelRotation;\n        _this['dominant-baseline'] = basic['dominant-baseline'];\n        _this.baseline = basic.baseline;\n        _this.dy = basic.dy;\n        return _this;\n    }\n    return TextOption;\n}(TextElement));\nexport { TextOption };\n/**\n * Helper Class to define property to draw text.\n *\n * @private\n */\nvar TextBasic = /** @class */ (function () {\n    function TextBasic(x, y, anchor, text, labelRotation, transform, baseLine, dy) {\n        this.transform = '';\n        this['dominant-baseline'] = 'auto';\n        this.labelRotation = 0;\n        this.baseline = 'auto';\n        this.x = x ? x : 0;\n        this.y = y ? y : 0;\n        this['text-anchor'] = anchor ? anchor : 'start';\n        this.text = text ? text : '';\n        this.transform = transform ? transform : '';\n        this.labelRotation = labelRotation;\n        this['dominant-baseline'] = baseLine ? baseLine : 'auto';\n        this.baseline = baseLine ? baseLine : '';\n        this.dy = dy ? dy : '';\n    }\n    return TextBasic;\n}());\nexport { TextBasic };\n/**\n * Class to define property to draw line.\n *\n * @private\n */\nvar Line = /** @class */ (function () {\n    function Line(x1, y1, x2, y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    return Line;\n}());\nexport { Line };\n/**\n * Class to define property to draw line.\n *\n * @private\n */\nvar LineOption = /** @class */ (function (_super) {\n    __extends(LineOption, _super);\n    function LineOption(id, line, stroke, strokewidth, opacity, dasharray) {\n        var _this = _super.call(this, id, null, strokewidth, stroke, opacity, dasharray, null) || this;\n        _this.x1 = line.x1;\n        _this.y1 = line.y1;\n        _this.x2 = line.x2;\n        _this.y2 = line.y2;\n        return _this;\n    }\n    return LineOption;\n}(PathOption));\nexport { LineOption };\n/**\n * Properties required to render path.\n *\n * @private\n */\nvar PathAttributes = /** @class */ (function (_super) {\n    __extends(PathAttributes, _super);\n    function PathAttributes(id, path, fill, border, borderWidth, opacity, borderColor) {\n        var _this = _super.call(this, id, fill, borderWidth, borderColor, opacity, null) || this;\n        _this.d = path.d;\n        _this.x = path.x;\n        _this.y = path.y;\n        return _this;\n    }\n    return PathAttributes;\n}(PathOption));\nexport { PathAttributes };\n/**\n * Helper Class to define property to path.\n *\n * @private\n */\nvar Path = /** @class */ (function () {\n    function Path(d, innerR, x, y, x1, y1, cx, cy, start, end, radius, counterClockWise) {\n        this.d = d;\n        this.innerR = innerR;\n        this.cx = cx;\n        this.cy = cy;\n        this.x = x;\n        this.y = y;\n        this.x1 = x1;\n        this.y1 = y1;\n        this.start = start;\n        this.end = end;\n        this.radius = radius;\n        this.counterClockWise = counterClockWise;\n    }\n    return Path;\n}());\nexport { Path };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param  {number} values - specifies the values\n * @returns {number} returns the number\n * @hidden\n */\nexport function sum(values) {\n    var sum = 0;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        sum += value;\n    }\n    return sum;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { Size } heatmapSize - Specifies the heatmapsize\n * @param { number } topPadding - Specifies the topPadding\n * @param { number }  bottomPadding - Specifies the bottomPadding\n * @param { FontModel } titleStyle - Specifies the titleStyle\n * @returns {number} returns the number\n * @private\n */\nexport function titlePositionY(heatmapSize, topPadding, bottomPadding, titleStyle) {\n    var positionY;\n    if (titleStyle.textAlignment === 'Near') {\n        positionY = heatmapSize.height - bottomPadding;\n    }\n    else if (titleStyle.textAlignment === 'Center') {\n        positionY = heatmapSize.height / 2;\n    }\n    else {\n        positionY = topPadding;\n    }\n    return positionY;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { FontModel } font - Specifies the heatmapsize\n * @param { string } text - Specifies the topPadding\n * @param { number }  angle - Specifies the bottomPadding\n * @returns {Size} returns the size\n * @private\n */\nexport function rotateTextSize(font, text, angle) {\n    var renderer = new SvgRenderer('heatmapMeasureRotateText');\n    var svgObject = renderer.createSvg({ id: 'heatmapMeasureRotateText_svg', width: 100, height: 100 });\n    var height;\n    var dy;\n    var label;\n    var tspanElement;\n    var options = {\n        'font-size': font.size,\n        'font-style': font.fontStyle.toLowerCase(),\n        'font-family': font.fontFamily,\n        'font-weight': font.fontWeight.toLowerCase(),\n        'transform': 'rotate(' + angle + ', 0, 0)',\n        'text-anchor': 'middle'\n    };\n    var htmlObject = renderer.createText(options, text[0]);\n    if (typeof text !== 'string' && text.length > 1) {\n        for (var i = 1, len = text.length; i < len; i++) {\n            height = (measureText(text[i], font).height);\n            dy = (0) + ((i * height));\n            label = text[i];\n            tspanElement = renderer.createTSpan({\n                'x': 0, 'id': 'heatmapMeasureRotateText_' + i,\n                'y': dy\n            }, label);\n            htmlObject.appendChild(tspanElement);\n        }\n    }\n    svgObject.appendChild(htmlObject);\n    document.body.appendChild(svgObject);\n    var box = htmlObject.getBoundingClientRect();\n    remove(svgObject);\n    return new Size((box.right - box.left), (box.bottom - box.top));\n}\n/**\n * Class to draw SVG and Canvas Rectangle & Text.\n *\n * @private\n */\nvar DrawSvgCanvas = /** @class */ (function () {\n    function DrawSvgCanvas(heatmap) {\n        this.heatMap = heatmap;\n    }\n    //Svg & Canvas Rectangle Part\n    DrawSvgCanvas.prototype.drawRectangle = function (properties, parentElement, isFromSeries) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawRectangle(properties));\n        }\n        else {\n            this.drawCanvasRectangle(this.heatMap.canvasRenderer, properties, isFromSeries);\n        }\n    };\n    //Svg & Canvas Bubble Part\n    DrawSvgCanvas.prototype.drawCircle = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawCircle(properties));\n        }\n        else {\n            this.drawCanvasCircle(this.heatMap.canvasRenderer, properties);\n        }\n    };\n    //Svg & Canvas Pie Part\n    DrawSvgCanvas.prototype.drawPath = function (properties, options, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.x;\n            delete properties.y;\n            parentElement.appendChild(this.heatMap.renderer.drawPath(properties));\n        }\n        else {\n            this.drawCanvasPath(this.heatMap.canvasRenderer, properties, options);\n        }\n    };\n    //Svg & Canvas Text Part\n    DrawSvgCanvas.prototype.createText = function (properties, parentElement, text) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.labelRotation;\n            delete properties.baseline;\n            delete properties.text;\n            parentElement.appendChild(this.heatMap.renderer.createText(properties, text));\n            properties.text = text;\n        }\n        else {\n            this.canvasDrawText(properties, text);\n        }\n    };\n    //Draw the wrapped text for both SVG & canvas\n    DrawSvgCanvas.prototype.createWrapText = function (options, font, parentElement) {\n        var renderOptions = {};\n        var htmlObject;\n        var tspanElement;\n        var height;\n        renderOptions = {\n            'id': options.id,\n            'x': options.x,\n            'y': options.y,\n            'fill': options.fill,\n            'font-size': font.size,\n            'font-style': font.fontStyle,\n            'font-family': font.fontFamily,\n            'font-weight': font.fontWeight.toLowerCase(),\n            'text-anchor': options['text-anchor'],\n            'transform': options.transform,\n            'dominant-baseline': options['dominant-baseline']\n        };\n        var text = options.text[0];\n        if (!this.heatMap.enableCanvasRendering) {\n            htmlObject = this.heatMap.renderer.createText(renderOptions, text);\n        }\n        else {\n            this.heatMap.canvasRenderer.createText(options, text);\n        }\n        if (typeof options.text !== 'string' && options.text.length > 1) {\n            for (var i = 1, len = options.text.length; i < len; i++) {\n                height = (measureText(options.text[i], font).height);\n                if (!this.heatMap.enableCanvasRendering) {\n                    tspanElement = this.heatMap.renderer.createTSpan({\n                        'x': options.x, 'id': options.id + i,\n                        'y': (options.y) + (i * height)\n                    }, options.text[i]);\n                    htmlObject.appendChild(tspanElement);\n                }\n                else {\n                    options.id = options.id + i;\n                    options.y += height;\n                    this.heatMap.canvasRenderer.createText(options, options.text[i]);\n                }\n            }\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parentElement.appendChild(htmlObject);\n        }\n    };\n    DrawSvgCanvas.prototype.drawLine = function (properties, parentElement) {\n        if (!this.heatMap.enableCanvasRendering) {\n            delete properties.d;\n            parentElement.appendChild(this.heatMap.renderer.drawLine(properties));\n        }\n        else {\n            this.heatMap.canvasRenderer.drawLine(properties);\n        }\n    };\n    //Canvas Text Part\n    DrawSvgCanvas.prototype.canvasDrawText = function (options, label, translateX, translateY, wrappedLabels, elementHeight, isAxisLabel) {\n        var ctx = this.heatMap.canvasRenderer.ctx;\n        if (!translateX) {\n            translateX = options.x;\n        }\n        if (!translateY) {\n            translateY = options.y;\n        }\n        var fontWeight = this.getOptionValue(options, 'font-weight');\n        if (!isNullOrUndefined(fontWeight) && fontWeight.toLowerCase() === 'regular') {\n            fontWeight = 'normal';\n        }\n        var fontFamily = this.getOptionValue(options, 'font-family');\n        var fontSize = (options['font-size'].toString()).indexOf('px') === -1 ? options['font-size'] + 'px' : options['font-size'];\n        var anchor = this.getOptionValue(options, 'text-anchor');\n        var fontStyle = this.getOptionValue(options, 'font-style').toLowerCase();\n        var font = (fontStyle + ' ' + fontWeight + ' ' + fontSize + ' ' + fontFamily);\n        if (anchor === 'middle') {\n            anchor = 'center';\n        }\n        ctx.save();\n        ctx.fillStyle = options.fill;\n        ctx.font = font;\n        ctx.textAlign = anchor;\n        if (options.baseline) {\n            ctx.textBaseline = options.baseline;\n        }\n        ctx.translate(translateX, translateY);\n        ctx.rotate(options.labelRotation * Math.PI / 180);\n        if (isAxisLabel) {\n            for (var i = 0; i < wrappedLabels.length; i++) {\n                options.y = i !== 0 ? options.y + elementHeight : options.y;\n                ctx.fillText(wrappedLabels[i], options.x - translateX, options.y - translateY);\n            }\n        }\n        else {\n            ctx.fillText(label, options.x - translateX, options.y - translateY);\n        }\n        ctx.restore();\n    };\n    // method to get the attributes value\n    /* tslint:disable */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    DrawSvgCanvas.prototype.getOptionValue = function (options, key) {\n        return options[key];\n    };\n    DrawSvgCanvas.prototype.setAttributes = function (canvas, options) {\n        canvas.ctx.lineWidth = options['stroke-width'];\n        var dashArray = options['stroke-dasharray'];\n        if (!isNullOrUndefined(dashArray)) {\n            var dashArrayString = dashArray.split(',');\n            canvas.ctx.setLineDash([parseInt(dashArrayString[0], 10), parseInt(dashArrayString[1], 10)]);\n        }\n        canvas.ctx.strokeStyle = options['stroke'];\n    };\n    DrawSvgCanvas.prototype.drawCanvasRectangle = function (canvas, options, isFromSeries) {\n        var canvasCtx = canvas.ctx;\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = options['opacity'];\n        this.setAttributes(canvas, options);\n        this.drawCornerRadius(canvas, options);\n        if ((options['stroke-width'] && options['stroke-width'] !== 0) || isFromSeries) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n        canvas.ctx = canvasCtx;\n    };\n    // To draw the corner of a rectangle\n    DrawSvgCanvas.prototype.drawCornerRadius = function (canvas, options) {\n        var cornerRadius = options.rx;\n        var x = options.x;\n        var y = options.y;\n        var width = options.width;\n        var height = options.height;\n        if (options.fill === 'none') {\n            options.fill = 'transparent';\n        }\n        canvas.ctx.fillStyle = options.fill;\n        if (width < 2 * cornerRadius) {\n            cornerRadius = width / 2;\n        }\n        if (height < 2 * cornerRadius) {\n            cornerRadius = height / 2;\n        }\n        canvas.ctx.beginPath();\n        canvas.ctx.moveTo(x + width - cornerRadius, y);\n        canvas.ctx.arcTo(x + width, y, x + width, y + height, cornerRadius);\n        canvas.ctx.arcTo(x + width, y + height, x, y + height, cornerRadius);\n        canvas.ctx.arcTo(x, y + height, x, y, cornerRadius);\n        canvas.ctx.arcTo(x, y, x + width, y, cornerRadius);\n        canvas.ctx.closePath();\n        canvas.ctx.fill();\n    };\n    DrawSvgCanvas.prototype.drawCanvasCircle = function (canvas, options) {\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.arc(options.cx, options.cy, options.r, 0, 2 * Math.PI);\n        canvas.ctx.fillStyle = options.fill;\n        canvas.ctx.globalAlpha = options.opacity;\n        canvas.ctx.fill();\n        this.setAttributes(canvas, options);\n        if (options['stroke-width'] && options['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    DrawSvgCanvas.prototype.drawCanvasPath = function (canvas, properties, options) {\n        var path = properties.d;\n        var dataSplit = path.split(' ');\n        canvas.ctx.save();\n        canvas.ctx.beginPath();\n        canvas.ctx.globalAlpha = properties.opacity;\n        canvas.ctx.fillStyle = properties.fill;\n        this.setAttributes(canvas, properties);\n        for (var i = 0; i < dataSplit.length; i = i + 3) {\n            var x1 = parseFloat(dataSplit[i + 1]);\n            var y1 = parseFloat(dataSplit[i + 2]);\n            switch (dataSplit[i]) {\n                case 'M':\n                    canvas.ctx.moveTo(x1, y1);\n                    break;\n                case 'L':\n                    canvas.ctx.lineTo(x1, y1);\n                    break;\n                case 'A':\n                case 'a':\n                    canvas.ctx.arc(options.x, options.y, options.radius, (options.start * 0.0174533), (options.end * 0.0174533), false);\n                    i = dataSplit[i] === 'a' ? i + 13 : i + 5;\n                    break;\n                case 'Z':\n                    canvas.ctx.closePath();\n                    break;\n            }\n        }\n        canvas.ctx.fill();\n        if (properties['stroke-width'] && properties['stroke-width'] !== 0) {\n            canvas.ctx.stroke();\n        }\n        canvas.ctx.restore();\n    };\n    return DrawSvgCanvas;\n}());\nexport { DrawSvgCanvas };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string } title - Specifies the heatmapsize\n * @param { FontModel } style - Specifies the topPadding\n * @param { number }  width - Specifies the bottomPadding\n * @returns {string} returns the size\n * @private\n */\nexport function getTitle(title, style, width) {\n    var titleCollection = [];\n    switch (style.textOverflow) {\n        case 'Wrap':\n            titleCollection = textWrap(title, width, style);\n            break;\n        case 'Trim':\n            titleCollection.push(textTrim(width, title, style));\n            break;\n        default:\n            titleCollection.push(textNone(width, title, style));\n            break;\n    }\n    return titleCollection;\n}\n/**\n * Function to check whether the line break character is in the string or not.\n *\n * @param {string[]} labels - Specifies the axis labels.\n * @returns {boolean} returns whether the line break character is in the string or not.\n * @private\n */\nexport function getIsLineBreakLabel(labels) {\n    var isLineBreak = false;\n    for (var i = 0; i < labels.length; i++) {\n        if (labels[i].indexOf('<br>') !== -1 || labels[i].indexOf('<br/>') !== -1) {\n            isLineBreak = true;\n            break;\n        }\n    }\n    return isLineBreak;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string } currentLabel - Specifies the heatmapsize\n * @param { number } maximumWidth - Specifies the topPadding\n * @param { FontModel }  font - Specifies the bottomPadding\n * @returns {string} returns the size\n * @private\n */\nexport function textWrap(currentLabel, maximumWidth, font) {\n    var textCollection = currentLabel.split(' ');\n    var label = '';\n    var labelCollection = [];\n    var text;\n    for (var i = 0, len = textCollection.length; i < len; i++) {\n        text = textCollection[i];\n        if (measureText(label.concat(text), font).width < maximumWidth) {\n            label = label.concat((label === '' ? '' : ' ') + text);\n        }\n        else {\n            if (label !== '') {\n                labelCollection.push(textTrim(maximumWidth, label, font));\n                label = text;\n            }\n            else {\n                labelCollection.push(textTrim(maximumWidth, text, font));\n                text = '';\n            }\n        }\n        if (label && i === len - 1) {\n            labelCollection.push(textTrim(maximumWidth, label, font));\n        }\n    }\n    return labelCollection;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { number } maxWidth - Specifies the heatmapsize\n * @param { string } text - Specifies the topPadding\n * @param { FontModel }  font - Specifies the bottomPadding\n * @returns {string} returns the size\n * @private\n */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var index = textLength - 1; index >= 0; --index) {\n            label = text.substring(0, index) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { number } maxWidth - Specifies the heatmapsize\n * @param { string } text - Specifies the topPadding\n * @param { FontModel }  font - Specifies the bottomPadding\n * @returns {string} returns the size\n * @private\n */\nexport function textNone(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i);\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nvar Gradient = /** @class */ (function () {\n    function Gradient(x, x1, x2, y1, y2) {\n        this.id = x;\n        this.x1 = x1;\n        this.x2 = x2;\n        this.y1 = y1;\n        this.y2 = y2;\n    }\n    return Gradient;\n}());\nexport { Gradient };\nvar GradientColor = /** @class */ (function () {\n    function GradientColor(color, colorStop) {\n        this.color = color;\n        this.colorStop = colorStop;\n    }\n    return GradientColor;\n}());\nexport { GradientColor };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string } text - Specifies the heatmapsize\n * @param { number } x - Specifies the topPadding\n * @param { number }  y - Specifies the bottomPadding\n * @param { number }  areaWidth - Specifies the bottomPadding\n * @param { string }  id - Specifies the bottomPadding\n * @param { Element }  element - Specifies the bottomPadding\n * @param { boolean }  isTouch - Specifies the bottomPadding\n * @param { HeatMap }  heatmap - Specifies the bottomPadding\n * @returns {void} returns the size\n * @private\n */\nexport function showTooltip(text, x, y, areaWidth, id, element, isTouch, heatmap) {\n    var tooltip = document.getElementById(id);\n    var size = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    });\n    var width = size.width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    x = x < 0 ? 5 : x;\n    if (!tooltip) {\n        tooltip = createElement('div', { id: id });\n        tooltip.style.cssText = 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n            'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n            'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n            'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: Segoe UI';\n        tooltip.innerText = text;\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerText = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n    if (text === heatmap.titleSettings.text) {\n        tooltip.style.width = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (x + 15)).toString() + 'px' : '';\n    }\n    else {\n        tooltip.style.left = (x + 15) + size.width + 7 > heatmap.availableSize.width ?\n            (heatmap.availableSize.width - (size.width + 7)).toString() + 'px' : x.toString() + 'px';\n        tooltip.style.top = (y + 15) + size.height + 6 > heatmap.availableSize.height ?\n            (y - (size.height + 6) - 10).toString() + 'px' : tooltip.style.top; // 6 and 7 are padding and border width\n    }\n    if (isTouch) {\n        if (this.tooltipTimer) {\n            window.clearTimeout(this.tooltipTimer);\n        }\n        this.tooltipTimer = setTimeout(function () { removeElement(id); }, 1500);\n    }\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string }  id - Specifies the bottomPadding\n * @returns {void} returns the size\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n        removeMeasureElement();\n    }\n}\n// eslint-disable-next-line valid-jsdoc\n/**\n * @private\n */\nexport function removeMeasureElement() {\n    removeElement('heatmapmeasuretext');\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string }  id - Specifies the bottomPadding\n * @returns {Element} returns the size\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { number } value - Specifies the topPadding\n * @param { number }  interval - Specifies the bottomPadding\n * @param { string } intervalType - Specifies the heatmapsize\n * @param { number }  increment - Specifies the bottomPadding\n * @returns {Date} returns the size\n * @private\n */\nexport function increaseDateTimeInterval(value, interval, intervalType, increment) {\n    var result = new Date(value);\n    interval = Math.ceil(interval * increment);\n    switch (intervalType) {\n        case 'Years':\n            result.setFullYear(result.getFullYear() + interval);\n            break;\n        case 'Months':\n            result.setMonth(result.getMonth() + interval);\n            break;\n        case 'Days':\n            result.setDate(result.getDate() + interval);\n            break;\n        case 'Hours':\n            result.setHours(result.getHours() + interval);\n            break;\n        case 'Minutes':\n            result.setMinutes(result.getMinutes() + interval);\n            break;\n    }\n    return result;\n}\n/* private */\nvar CanvasTooltip = /** @class */ (function () {\n    function CanvasTooltip(text, rect) {\n        this.region = new Rect(0, 0, 0, 0);\n        this.text = text;\n        this.region = rect;\n    }\n    return CanvasTooltip;\n}());\nexport { CanvasTooltip };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { CanvasTooltip } tooltipCollection - Specifies the topPadding\n * @param { number }  xPosition - Specifies the bottomPadding\n * @param { number } yPosition - Specifies the heatmapsize\n * @returns {string} returns the size\n * @private\n */\nexport function getTooltipText(tooltipCollection, xPosition, yPosition) {\n    var length = tooltipCollection.length;\n    var tooltip;\n    var region;\n    var text;\n    for (var i = 0; i < length; i++) {\n        tooltip = tooltipCollection[i];\n        region = tooltip.region;\n        if (xPosition >= region.x && xPosition <= (region.x + region.width) && yPosition >= region.y\n            && yPosition <= (region.y + region.height)) {\n            text = tooltip.text;\n            break;\n        }\n    }\n    return text;\n}\n/**\n * @private\n */\nvar PaletterColor = /** @class */ (function () {\n    function PaletterColor() {\n    }\n    return PaletterColor;\n}());\nexport { PaletterColor };\n/**\n * @private\n */\nvar GradientPointer = /** @class */ (function () {\n    function GradientPointer(pathX1, pathY1, pathX2, pathY2, pathX3, pathY3) {\n        this.pathX1 = pathX1;\n        this.pathY1 = pathY1;\n        this.pathX2 = pathX2;\n        this.pathY2 = pathY2;\n        this.pathX3 = pathX3;\n        this.pathY3 = pathY3;\n    }\n    return GradientPointer;\n}());\nexport { GradientPointer };\n/**\n * Class to define currentRect private property.\n *\n * @private\n */\nvar CurrentLegendRect = /** @class */ (function () {\n    function CurrentLegendRect(x, y, width, height, label, id) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.label = label;\n        this.id = id;\n    }\n    return CurrentLegendRect;\n}());\nexport { CurrentLegendRect };\n/** @private */\nvar LegendRange = /** @class */ (function () {\n    function LegendRange(x, y, width, height, value, visible, currentPage) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.value = value;\n        this.visible = visible;\n        this.currentPage = currentPage;\n    }\n    return LegendRange;\n}());\nexport { LegendRange };\n/** @private */\nvar ToggleVisibility = /** @class */ (function () {\n    function ToggleVisibility(visible, value, startValue, endValue) {\n        this.visible = visible;\n        this.value = value;\n        this.startValue = startValue;\n        this.endValue = endValue;\n    }\n    return ToggleVisibility;\n}());\nexport { ToggleVisibility };\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string } color - Specifies the topPadding\n * @returns {string} returns the size\n * @private\n */\nexport function colorNameToHex(color) {\n    color = color === 'transparent' ? 'white' : color;\n    var element = document.getElementById('heatmapmeasuretext');\n    element.style.color = color;\n    color = window.getComputedStyle(element).color;\n    var isRGBValue = color.replace(/[()RGBrgba ]/g, '').split(',');\n    return convertToHexCode(new RgbColor(parseInt(isRGBValue[0], 10), parseInt(isRGBValue[1], 10), parseInt(isRGBValue[2], 10)));\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { RgbColor } value - Specifies the topPadding\n * @returns {string} returns the size\n * @private\n */\nexport function convertToHexCode(value) {\n    return '#' + componentToHex(value.R) + componentToHex(value.G) + componentToHex(value.B);\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { number }  value - Specifies the bottomPadding\n * @returns {string} returns the size\n * @private\n */\nexport function componentToHex(value) {\n    var hex = value.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { string }  hex - Specifies the bottomPadding\n * @returns {RgbColor} returns the size\n * @private\n */\nexport function convertHexToColor(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? new RgbColor(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) :\n        new RgbColor(255, 255, 255);\n}\n/**\n * Function to check whether target object implement specific interface\n *\n * @param { boolean }  isCustom - Specifies the bottomPadding\n * @param { string }  format - Specifies the bottomPadding\n * @param { number }  tempInterval - Specifies the bottomPadding\n * @param { Function }  formatFun - Specifies the bottomPadding\n * @returns {string} returns the size\n * @private\n */\nexport function formatValue(isCustom, format, tempInterval, formatFun) {\n    return isCustom ? format.replace('{value}', formatFun(tempInterval))\n        : formatFun(tempInterval);\n}\n/** @private */\nvar MultiLevelPosition = /** @class */ (function () {\n    function MultiLevelPosition(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return MultiLevelPosition;\n}());\nexport { MultiLevelPosition };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { Theme } from './theme';\n/**\n * Sets and gets the options to customize the text in heatmap.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('Segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property('Center')\n    ], Font.prototype, \"textAlignment\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Font.prototype, \"textOverflow\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Sets and gets the options to configures the margins of the heatmap.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Sets and gets the options to customize the borders in the heatmap.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Border.prototype, \"radius\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Sets and gets the options to customize the tooltip borders in the heatmap.\n */\nvar TooltipBorder = /** @class */ (function (_super) {\n    __extends(TooltipBorder, _super);\n    function TooltipBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], TooltipBorder.prototype, \"width\", void 0);\n    return TooltipBorder;\n}(ChildProperty));\nexport { TooltipBorder };\n/**\n * Sets and gets the options to configure the mapping value for size and color in bubble cell type.\n */\nvar BubbleData = /** @class */ (function (_super) {\n    __extends(BubbleData, _super);\n    function BubbleData() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"size\", void 0);\n    __decorate([\n        Property(null)\n    ], BubbleData.prototype, \"color\", void 0);\n    return BubbleData;\n}(ChildProperty));\nexport { BubbleData };\n/**\n * Sets and gets the options to customize the title of heatmap.\n */\nvar Title = /** @class */ (function (_super) {\n    __extends(Title, _super);\n    function Title() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Title.prototype, \"text\", void 0);\n    __decorate([\n        Complex({}, Font)\n    ], Title.prototype, \"textStyle\", void 0);\n    return Title;\n}(ChildProperty));\nexport { Title };\n/**\n * Sets and gets the options to apply the fill color value for cell color range.\n */\nvar FillColor = /** @class */ (function (_super) {\n    __extends(FillColor, _super);\n    function FillColor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"minColor\", void 0);\n    __decorate([\n        Property('#eeeeee')\n    ], FillColor.prototype, \"maxColor\", void 0);\n    return FillColor;\n}(ChildProperty));\nexport { FillColor };\n/**\n * Sets and gets the options to customize palette colors.\n */\nvar PaletteCollection = /** @class */ (function (_super) {\n    __extends(PaletteCollection, _super);\n    function PaletteCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"color\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"label\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"startValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"endValue\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"minColor\", void 0);\n    __decorate([\n        Property(null)\n    ], PaletteCollection.prototype, \"maxColor\", void 0);\n    return PaletteCollection;\n}(ChildProperty));\nexport { PaletteCollection };\n/**\n * Sets and gets the options to customize the label border.\n */\nvar AxisLabelBorder = /** @class */ (function (_super) {\n    __extends(AxisLabelBorder, _super);\n    function AxisLabelBorder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#b5b5b5')\n    ], AxisLabelBorder.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], AxisLabelBorder.prototype, \"width\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], AxisLabelBorder.prototype, \"type\", void 0);\n    return AxisLabelBorder;\n}(ChildProperty));\nexport { AxisLabelBorder };\n/**\n * Sets and gets the options to customize the size of the bubble heatmap cell type.\n */\nvar BubbleSize = /** @class */ (function (_super) {\n    __extends(BubbleSize, _super);\n    function BubbleSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('0%')\n    ], BubbleSize.prototype, \"minimum\", void 0);\n    __decorate([\n        Property('100%')\n    ], BubbleSize.prototype, \"maximum\", void 0);\n    return BubbleSize;\n}(ChildProperty));\nexport { BubbleSize };\n/**\n * Sets and gets the options to configure the multi-level labels.\n */\nvar MultiLevelCategories = /** @class */ (function (_super) {\n    __extends(MultiLevelCategories, _super);\n    function MultiLevelCategories() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"end\", void 0);\n    __decorate([\n        Property('')\n    ], MultiLevelCategories.prototype, \"text\", void 0);\n    __decorate([\n        Property(null)\n    ], MultiLevelCategories.prototype, \"maximumTextWidth\", void 0);\n    return MultiLevelCategories;\n}(ChildProperty));\nexport { MultiLevelCategories };\n/**\n * Sets and gets the options to customize the multi-level labels.\n */\nvar MultiLevelLabels = /** @class */ (function (_super) {\n    __extends(MultiLevelLabels, _super);\n    function MultiLevelLabels() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Center')\n    ], MultiLevelLabels.prototype, \"alignment\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], MultiLevelLabels.prototype, \"overflow\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], MultiLevelLabels.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 1, type: 'Rectangle' }, AxisLabelBorder)\n    ], MultiLevelLabels.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelCategories)\n    ], MultiLevelLabels.prototype, \"categories\", void 0);\n    return MultiLevelLabels;\n}(ChildProperty));\nexport { MultiLevelLabels };\n/**\n * Internal class used to maintain colorcollection.\n * @private\n */\nvar ColorCollection = /** @class */ (function () {\n    function ColorCollection(value, color, label, startValue, endValue, minColor, maxColor) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n    }\n    return ColorCollection;\n}());\nexport { ColorCollection };\n/**\n * Specifies the current data of the bubble cell.\n */\nvar BubbleTooltipData = /** @class */ (function () {\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * @private\n     */\n    function BubbleTooltipData(mappingName, bubbleData, valueType) {\n        this.mappingName = mappingName;\n        this.bubbleData = bubbleData;\n        this.valueType = valueType;\n    }\n    return BubbleTooltipData;\n}());\nexport { BubbleTooltipData };\n/**\n * Internal class used to maintain legend colorcollection.\n * @private\n */\nvar LegendColorCollection = /** @class */ (function () {\n    function LegendColorCollection(value, color, label, startValue, endValue, minColor, maxColor, isHidden) {\n        this.value = value;\n        this.color = color;\n        this.label = label;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.minColor = minColor;\n        this.maxColor = maxColor;\n        this.isHidden = isHidden;\n    }\n    return LegendColorCollection;\n}());\nexport { LegendColorCollection };\n/**\n * class used to maintain xAxis labels details for multipleRow label intersect action.\n * @private\n */\nvar MultipleRow = /** @class */ (function () {\n    function MultipleRow(start, end, index, label, row) {\n        this.index = 1;\n        this.row = 1;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n        this.label = label;\n        this.row = row;\n    }\n    return MultipleRow;\n}());\nexport { MultipleRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, extend, ChildProperty, Collection, isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { ColorCollection, LegendColorCollection, PaletteCollection, FillColor } from '../model/base';\nimport { PaletterColor } from './helper';\n/**\n * Sets and gets the options to customize the color palette of heatmap.\n */\nvar PaletteSettings = /** @class */ (function (_super) {\n    __extends(PaletteSettings, _super);\n    function PaletteSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([{}], PaletteCollection)\n    ], PaletteSettings.prototype, \"palette\", void 0);\n    __decorate([\n        Property('Gradient')\n    ], PaletteSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], PaletteSettings.prototype, \"emptyPointColor\", void 0);\n    __decorate([\n        Property('Table')\n    ], PaletteSettings.prototype, \"colorGradientMode\", void 0);\n    __decorate([\n        Complex({}, FillColor)\n    ], PaletteSettings.prototype, \"fillColor\", void 0);\n    return PaletteSettings;\n}(ChildProperty));\nexport { PaletteSettings };\n/**\n * Helper class for colormapping\n */\nvar RgbColor = /** @class */ (function () {\n    function RgbColor(r, g, b) {\n        this.R = r;\n        this.G = g;\n        this.B = b;\n    }\n    return RgbColor;\n}());\nexport { RgbColor };\nvar CellColor = /** @class */ (function () {\n    function CellColor(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To convert hexa color to RGB.\n     *\n     * @returns {any}\n     * @private\n     */\n    CellColor.prototype.convertToRGB = function (value, colorMapping) {\n        var previousOffset = this.heatMap.isColorRange ? colorMapping[0].startValue : colorMapping[0].value;\n        var nextOffset = 0;\n        var i = 0;\n        var previousColor;\n        var nextColor;\n        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n            for (i = 0; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].endValue);\n                if (value <= offset && value >= Number(colorMapping[i].startValue)) {\n                    nextOffset = offset;\n                    previousColor = this.heatMap.colorCollection[i].minColor;\n                    nextColor = this.heatMap.colorCollection[i].maxColor;\n                    break;\n                }\n                else if (colorMapping[0].startValue !== this.heatMap.dataSourceMinValue && value < colorMapping[0].startValue) {\n                    nextOffset = colorMapping[0].startValue;\n                    previousOffset = this.heatMap.dataSourceMinValue;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else if (value > offset && value <= (i === (colorMapping.length - 1) ? this.heatMap.dataSourceMaxValue :\n                    colorMapping[i + 1].startValue)) {\n                    nextOffset = (i === (colorMapping.length - 1)) ? this.heatMap.dataSourceMaxValue : colorMapping[i + 1].startValue;\n                    previousOffset = offset;\n                    previousColor = this.heatMap.paletteSettings.fillColor.minColor;\n                    nextColor = this.heatMap.paletteSettings.fillColor.maxColor;\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < colorMapping.length; i++) {\n                var offset = Number(colorMapping[i].value);\n                if (value <= offset) {\n                    nextOffset = offset;\n                    previousColor = this.getEqualColor(colorMapping, previousOffset);\n                    nextColor = this.getEqualColor(colorMapping, nextOffset);\n                    break;\n                }\n                else {\n                    nextOffset = offset;\n                    previousOffset = offset;\n                }\n            }\n        }\n        var percent = 0;\n        var full = (nextOffset) - previousOffset;\n        percent = (value - previousOffset) / full;\n        percent = isNaN(percent) ? 0 : percent;\n        return this.getPercentageColor(percent, previousColor, nextColor);\n    };\n    /**\n     * To convert RGB to HEX.\n     *\n     * @returns {string}\n     * @private\n     */\n    CellColor.prototype.rgbToHex = function (r, g, b) {\n        return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\n    };\n    /**\n     * To convert Component to HEX.\n     *\n     * @returns {string}\n     * @private\n     */\n    CellColor.prototype.componentToHex = function (c) {\n        var hex = c.toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n    /**\n     * To get similar color.\n     *\n     * @returns {string}\n     * @private\n     */\n    CellColor.prototype.getEqualColor = function (list, offset) {\n        for (var i = 0; i < list.length; i++) {\n            if (Number(list[i].value) === offset) {\n                var color = list[i].color;\n                if (color.indexOf('rgb') !== -1) {\n                    color = this.convertToHex(color);\n                }\n                else if (color.indexOf('#') === -1) {\n                    color = '#FFFFFF';\n                }\n                return color;\n            }\n        }\n        return '#00000';\n    };\n    /**\n     * To convert RGB to HEX.\n     *\n     * @returns {string}\n     * @private\n     */\n    CellColor.prototype.convertToHex = function (color) {\n        var itemColor = color.substr(3);\n        itemColor = itemColor.split('(')[1].split(')')[0];\n        var colorSplit = itemColor.split(',');\n        itemColor = this.rgbToHex(parseInt(colorSplit[0], 10), parseInt(colorSplit[1], 10), parseInt(colorSplit[2], 10));\n        return itemColor;\n    };\n    /**\n     * To get RGB for percentage value.\n     *\n     * @returns {any}\n     * @private\n     */\n    CellColor.prototype.getPercentageColor = function (percent, previous, next) {\n        var nextColor = next.split('#')[1];\n        var prevColor = previous.split('#')[1];\n        var r = this.getPercentage(percent, parseInt(prevColor.substr(0, 2), 16), parseInt(nextColor.substr(0, 2), 16));\n        var g = this.getPercentage(percent, parseInt(prevColor.substr(2, 2), 16), parseInt(nextColor.substr(2, 2), 16));\n        var b = this.getPercentage(percent, parseInt(prevColor.substr(4, 2), 16), parseInt(nextColor.substr(4, 2), 16));\n        return new RgbColor(r, g, b);\n    };\n    /**\n     * To convert numbet to percentage.\n     *\n     * @returns {any}\n     * @private\n     */\n    CellColor.prototype.getPercentage = function (percent, previous, next) {\n        var full = next - previous;\n        return Math.round((previous + (full * percent)));\n    };\n    /**\n     * To get complete color Collection.\n     *\n     * @private\n     */\n    CellColor.prototype.getColorCollection = function () {\n        var heatMap = this.heatMap;\n        heatMap.colorCollection = [];\n        heatMap.legendColorCollection = [];\n        var range;\n        for (var j = 0; j < this.heatMap.paletteSettings.palette.length; j++) {\n            if (this.heatMap.paletteSettings.palette[j].startValue === null ||\n                this.heatMap.paletteSettings.palette[j].endValue === null) {\n                this.heatMap.isColorRange = false;\n                break;\n            }\n            else {\n                this.heatMap.isColorRange = true;\n            }\n        }\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        heatMap.emptyPointColor = heatMap.paletteSettings.emptyPointColor ? heatMap.paletteSettings.emptyPointColor :\n            heatMap.themeStyle.emptyCellColor;\n        var tempcolorMapping = this.orderbyOffset(this.heatMap.isColorRange ? heatMap.paletteSettings.palette :\n            heatMap.paletteSettings.palette && heatMap.paletteSettings.palette.length > 1 ?\n                heatMap.paletteSettings.palette : heatMap.themeStyle.palette);\n        if (!tempcolorMapping.isCompact) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length - 1);\n            }\n            else {\n                range = (maxValue - minValue) / (tempcolorMapping.offsets.length);\n            }\n            if (tempcolorMapping.offsets.length >= 2) {\n                for (var index = 0; index < tempcolorMapping.offsets.length; index++) {\n                    heatMap.colorCollection.push(new ColorCollection((Math.round(((minValue) + (index * range)) * 100) / 100), tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor));\n                    heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(((minValue) + (index * range)) * 100) / 100, tempcolorMapping.offsets[index].color, tempcolorMapping.offsets[index].label, tempcolorMapping.offsets[index].startValue, tempcolorMapping.offsets[index].endValue, tempcolorMapping.offsets[index].minColor, tempcolorMapping.offsets[index].maxColor, false));\n                }\n            }\n        }\n        else {\n            heatMap.colorCollection = tempcolorMapping.offsets;\n            heatMap.legendColorCollection = extend([], tempcolorMapping.offsets, null, true);\n        }\n        if (!this.heatMap.isColorRange) {\n            this.updateLegendColorCollection(minValue, maxValue, tempcolorMapping);\n        }\n    };\n    /**\n     * To update legend color Collection.\n     *\n     * @private\n     */\n    CellColor.prototype.updateLegendColorCollection = function (minValue, maxValue, tempcolorMapping) {\n        if (this.heatMap.paletteSettings.type === 'Fixed' && (tempcolorMapping.isCompact || tempcolorMapping.isLabel)) {\n            return;\n        }\n        if (Math.round(minValue * 100) / 100 < this.heatMap.legendColorCollection[0].value) {\n            this.heatMap.legendColorCollection.unshift(new LegendColorCollection(Math.round(minValue * 100) / 100, this.heatMap.legendColorCollection[0].color, this.heatMap.legendColorCollection[0].label, this.heatMap.legendColorCollection[0].startValue, this.heatMap.legendColorCollection[0].endValue, this.heatMap.legendColorCollection[0].minColor, this.heatMap.legendColorCollection[0].maxColor, true));\n        }\n        if (Math.round(maxValue * 100) / 100 > this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].value) {\n            this.heatMap.legendColorCollection.push(new LegendColorCollection(Math.round(maxValue * 100) / 100, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].color, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].label, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].startValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].endValue, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].minColor, this.heatMap.legendColorCollection[this.heatMap.legendColorCollection.length - 1].maxColor, true));\n        }\n    };\n    /**\n     * To get ordered palette color collection.\n     *\n     * @private\n     */\n    CellColor.prototype.orderbyOffset = function (offsets) {\n        var returnCollection = new PaletterColor();\n        var key = this.heatMap.isColorRange ? 'to' : 'value';\n        var label = 'label';\n        returnCollection.isCompact = true;\n        returnCollection.isLabel = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        returnCollection.offsets = offsets.sort(function (a, b) {\n            if (isNullOrUndefined(a[label]) && isNullOrUndefined(b[label])) {\n                returnCollection.isLabel = false;\n            }\n            if (!isNullOrUndefined(a[key]) && !isNullOrUndefined(b[key])) {\n                return a[key] - b[key];\n            }\n            else {\n                returnCollection.isCompact = false;\n                return a;\n            }\n        });\n        if (!returnCollection.isCompact) {\n            returnCollection.offsets = this.heatMap.paletteSettings.palette && this.heatMap.paletteSettings.palette.length > 1 ?\n                this.heatMap.paletteSettings.palette : this.heatMap.themeStyle.palette;\n        }\n        return returnCollection;\n    };\n    /**\n     * To get color depends to value.\n     *\n     * @private\n     */\n    CellColor.prototype.getColorByValue = function (text) {\n        var color = '';\n        var rbg;\n        var compareValue = 0;\n        if (text.toString() !== '') {\n            if (this.heatMap.cellSettings.tileType === 'Bubble' &&\n                (this.heatMap.cellSettings.bubbleType === 'Size' || this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                color = this.heatMap.isColorRange ? this.heatMap.colorCollection[0].minColor : this.heatMap.colorCollection[0].color;\n            }\n            else if (this.heatMap.paletteSettings.type === 'Fixed') {\n                for (var y = 0; y < this.heatMap.colorCollection.length; y++) {\n                    compareValue = this.heatMap.isColorRange ? this.heatMap.paletteSettings.palette[y].startValue :\n                        this.heatMap.colorCollection[y + 1] ? this.heatMap.colorCollection[y + 1].value :\n                            this.heatMap.colorCollection[y].value;\n                    var singleValue = this.heatMap.dataSourceMinValue === this.heatMap.dataSourceMaxValue;\n                    if (this.heatMap.isColorRange) {\n                        var legendRange = void 0;\n                        if ((text <= this.heatMap.colorCollection[y].endValue &&\n                            text >= this.heatMap.colorCollection[y].startValue)) {\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] &&\n                                !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].minColor;\n                            break;\n                        }\n                        else {\n                            color = this.heatMap.paletteSettings.fillColor.minColor;\n                        }\n                    }\n                    else {\n                        if ((text <= compareValue && singleValue && y === 0) || text < compareValue ||\n                            (text >= compareValue && y === this.heatMap.colorCollection.length - 1)) {\n                            var legendRange = void 0;\n                            if (this.heatMap.legendVisibilityByCellType) {\n                                legendRange = this.heatMap.legendModule.legendRange;\n                            }\n                            color = (this.heatMap.legendVisibilityByCellType && legendRange[y] &&\n                                !legendRange[y].visible) ?\n                                this.heatMap.themeStyle.toggledColor : this.heatMap.colorCollection[y].color;\n                            break;\n                        }\n                    }\n                }\n            }\n            else {\n                if (this.heatMap.paletteSettings.colorGradientMode !== 'Table') {\n                    this.getColorCollection();\n                }\n                if (text < this.heatMap.colorCollection[0].value && !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[0].color;\n                }\n                else if (text > this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].value &&\n                    !this.heatMap.isColorRange) {\n                    color = this.heatMap.colorCollection[this.heatMap.colorCollection.length - 1].color;\n                }\n                else {\n                    rbg = this.convertToRGB(text, this.heatMap.colorCollection);\n                    color = this.rgbToHex(rbg.R, rbg.G, rbg.B);\n                }\n            }\n        }\n        else {\n            color = this.heatMap.emptyPointColor;\n        }\n        return color;\n    };\n    return CellColor;\n}());\nexport { CellColor };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * HeatMap Axis file\n */\nimport { Property, Complex, ChildProperty, isNullOrUndefined, Collection } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { Font, Title, AxisLabelBorder, MultiLevelLabels, MultipleRow } from '../model/base';\nimport { Theme } from '../model/theme';\nimport { Rect, measureText, Size, rotateTextSize, increaseDateTimeInterval, formatValue, textTrim, getIsLineBreakLabel } from '../utils/helper';\nimport { MultiLevelPosition, textWrap } from '../utils/helper';\n/**\n * Sets and gets the options to customize the axis of the heatmap.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.multipleRow = [];\n        /** @private */\n        _this.rect = new Rect(undefined, undefined, 0, 0);\n        /** @private */\n        _this.nearSizes = [];\n        /** @private */\n        _this.farSizes = [];\n        /** @private */\n        _this.maxLabelSize = new Size(0, 0);\n        /** @private */\n        _this.titleSize = new Size(0, 0);\n        /** @private */\n        _this.multilevel = [];\n        /** @private */\n        _this.axisLabels = [];\n        /** @private */\n        _this.tooltipLabels = [];\n        /** @private */\n        _this.labelValue = [];\n        /** @private */\n        _this.axisLabelSize = 0;\n        /** @private */\n        _this.axisLabelInterval = 0;\n        /** @private */\n        _this.dateTimeAxisLabelInterval = [];\n        /** @private */\n        _this.maxLength = 0;\n        /** @private */\n        _this.min = 0;\n        /** @private */\n        _this.max = 0;\n        /** @private */\n        _this.isIntersect = false;\n        /** @private */\n        _this.jsonCellLabel = [];\n        _this.multiLevelSize = [];\n        /** @private */\n        _this.xAxisMultiLabelHeight = [];\n        /** @private */\n        _this.yAxisMultiLabelHeight = [];\n        /** @private */\n        _this.multiLevelPosition = [];\n        return _this;\n    }\n    /**\n     * measure the axis title and label size\n     *\n     * @param axis\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.computeSize = function (axis, heatmap, rect) {\n        var size = new Size(0, 0);\n        var innerPadding = 10;\n        this.titleSize = axis.getTitleSize(axis, innerPadding);\n        this.maxLabelSize = axis.getMaxLabelSize(axis, heatmap);\n        this.getMultilevelLabelsHeight(axis, rect, heatmap);\n        for (var i = 0; i < this.multiLevelLabels.length; i++) {\n            size = axis.multiLevelLabelSize(innerPadding, i);\n            this.multiLevelSize.push(size);\n        }\n    };\n    /**\n     * calculating x, y position of multi level labels\n     *\n     * @private\n     */\n    Axis.prototype.multiPosition = function (axis, index) {\n        var innerPadding = axis.orientation === 'Horizontal' ? 10 : 20;\n        var multiPosition = new MultiLevelPosition(0, 0);\n        if (axis.orientation === 'Horizontal') {\n            var level0 = axis.maxLabelSize.height + innerPadding\n                + ((axis.angle === 0 || axis.angle === 180 || axis.angle === 360) ? 0 : innerPadding);\n            var level1 = this.xAxisMultiLabelHeight[index - 1];\n            multiPosition.x = (axis.isInversed ? axis.rect.x + axis.rect.width : axis.rect.x);\n            multiPosition.y = index === 0 ? axis.rect.y + (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].y + (axis.opposedPosition ? -level1 : level1);\n        }\n        else {\n            var level0 = axis.maxLabelSize.width + innerPadding;\n            var level1 = index !== 0 && (this.multiLevelSize[index - 1].width);\n            multiPosition.x = index === 0 ? axis.rect.x - (axis.opposedPosition ? -level0 : level0) :\n                axis.multiLevelPosition[index - 1].x - (axis.opposedPosition ? -(level1 + innerPadding) : level1 + innerPadding);\n            multiPosition.y = axis.isInversed ? axis.rect.y : axis.rect.y + axis.rect.height;\n        }\n        return multiPosition;\n    };\n    Axis.prototype.multiLevelLabelSize = function (innerPadding, index) {\n        var labelSize = new Size(0, 0);\n        var multiLevel = this.multiLevelLabels;\n        var categoryLabel = multiLevel[index].categories;\n        for (var i = 0; i < categoryLabel.length; i++) {\n            var size_1 = measureText(categoryLabel[i].text, multiLevel[index].textStyle);\n            labelSize.width = (labelSize.width > size_1.width) ? labelSize.width : size_1.width;\n            labelSize.height = (labelSize.height > size_1.height) ? labelSize.height : size_1.height;\n        }\n        var size = (this.orientation === 'Horizontal') ? this.xAxisMultiLabelHeight[index] :\n            this.yAxisMultiLabelHeight[index];\n        if (this.opposedPosition) {\n            this.farSizes.push(size);\n        }\n        else {\n            this.nearSizes.push(size);\n        }\n        return labelSize;\n    };\n    Axis.prototype.getMultilevelLabelsHeight = function (axis, rect, heatmap) {\n        var labelSize;\n        var gap;\n        var height;\n        var multiLevelLabelsHeight = [];\n        var start;\n        var end;\n        var startPosition;\n        var endPosition;\n        var isVertical = axis.orientation === 'Vertical';\n        var padding = axis.orientation === 'Vertical' ? 20 : 10;\n        this.multiLevelLabels.map(function (multiLevel, index) {\n            multiLevel.categories.map(function (categoryLabel) {\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                if (categoryLabel.text !== '' && categoryLabel.start !== null && categoryLabel.end !== null) {\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    height = isVertical ? labelSize.width : labelSize.height;\n                    startPosition = heatmap.heatMapAxis.calculateLeftPosition(axis, start, categoryLabel.start, rect);\n                    endPosition = heatmap.heatMapAxis.calculateWidth(axis, categoryLabel.end, end, rect);\n                    labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                    gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endPosition - startPosition) :\n                        categoryLabel.maximumTextWidth);\n                    if ((labelSize.width > gap - padding) && (multiLevel.overflow === 'Wrap') && !isVertical) {\n                        height = (height * (textWrap(categoryLabel.text, gap - padding, multiLevel.textStyle).length));\n                    }\n                    multiLevelLabelsHeight[index] = !multiLevelLabelsHeight[index] ? height + padding :\n                        ((multiLevelLabelsHeight[index] < height) ? height + padding : multiLevelLabelsHeight[index]);\n                }\n            });\n        });\n        if (isVertical) {\n            this.yAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n        else {\n            this.xAxisMultiLabelHeight = multiLevelLabelsHeight;\n        }\n    };\n    Axis.prototype.getTitleSize = function (axis, innerPadding) {\n        var titleSize = new Size(0, 0);\n        if (this.title.text) {\n            titleSize = measureText(this.title.text, this.title.textStyle);\n            titleSize.height += innerPadding;\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push(titleSize.height);\n        }\n        else {\n            this.nearSizes.push(titleSize.height);\n        }\n        return titleSize;\n    };\n    Axis.prototype.getMaxLabelSize = function (axis, heatmap) {\n        var labelSize = new Size(0, 0);\n        var labels = this.axisLabels;\n        var padding = (axis.border.width > 0 || axis.multiLevelLabels.length > 0) ? 10 : 0;\n        var labelPadding = 10;\n        var count = 1;\n        var row = 1;\n        var interval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') || (axis.textStyle.textOverflow === 'Wrap' || axis.textStyle.textOverflow === 'Trim') ?\n            heatmap.initialClipRect.width / axis.axisLabelSize : heatmap.initialClipRect.width / axis.axisLabels.length;\n        axis.angle = axis.labelRotation;\n        axis.isIntersect = false;\n        var isLineBreak = getIsLineBreakLabel(labels);\n        if ((axis.orientation === 'Horizontal' && (axis.labelIntersectAction === 'Rotate45' ||\n            (axis.labelRotation % 180 === 0 && axis.labelIntersectAction === 'Trim' || axis.enableTrim)) ||\n            axis.labelIntersectAction === 'MultipleRows') && axis.textStyle.textOverflow !== 'Wrap' && axis.textStyle.textOverflow !== 'Trim') {\n            var startX = heatmap.initialClipRect.x + ((!axis.isInversed) ? 0 : heatmap.initialClipRect.width);\n            var previousEnd = void 0;\n            var previousStart = void 0;\n            this.clearMultipleRow();\n            for (var i = 0, len = labels.length; i < len; i++) {\n                var label = labels[i];\n                var elementSize = measureText(label, axis.textStyle);\n                var axisInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] * interval : interval;\n                var startPoint = startX + (!axis.isInversed ?\n                    ((interval - elementSize.width) / 2) : -((interval + elementSize.width) / 2));\n                startPoint = startPoint < heatmap.initialClipRect.x ? heatmap.initialClipRect.x : startPoint;\n                var endPoint = startPoint + elementSize.width;\n                if (!axis.isInversed) {\n                    if (isNullOrUndefined(previousEnd)) {\n                        previousEnd = endPoint;\n                    }\n                    else if ((startPoint < previousEnd) && axis.labelIntersectAction !== 'MultipleRows') {\n                        if (axis.labelIntersectAction === 'Rotate45' && !(isLineBreak) && !axis.enableTrim) {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousEnd = endPoint;\n                }\n                else {\n                    if (isNullOrUndefined(previousStart)) {\n                        previousStart = startPoint;\n                    }\n                    else if ((previousStart < endPoint && axis.labelIntersectAction !== 'MultipleRows')) {\n                        if (axis.labelIntersectAction === 'Rotate45' && !(isLineBreak) && !axis.enableTrim) {\n                            axis.angle = 45;\n                        }\n                        else {\n                            axis.isIntersect = true;\n                        }\n                        break;\n                    }\n                    previousStart = startPoint;\n                }\n                startX += axis.isInversed ? -axisInterval : axisInterval;\n                if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && axis.labelRotation === 0) {\n                    this.multipleRow.push(new MultipleRow(startPoint, endPoint, count, label, row));\n                }\n            }\n            if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && axis.isInversed) {\n                this.multipleRow = this.multipleRow.reverse();\n            }\n        }\n        var labelLength = 1;\n        for (var i = 0; i < labels.length; i++) {\n            var multipleRow = this.multipleRow;\n            var label = void 0;\n            if (axis.enableTrim || (axis.textStyle.textOverflow === 'Trim' && !(labels[i].indexOf('<br>') !== -1 || labels[i].indexOf('<br/>') !== -1))) {\n                label = textTrim((axis.textStyle.textOverflow === 'Trim' && axis.orientation === 'Horizontal' ? interval : axis.maxLabelLength), labels[i], axis.textStyle);\n            }\n            else {\n                label = labels[i];\n            }\n            var wrappedlabels = [];\n            if ((axis.textStyle.textOverflow === 'Wrap' || isLineBreak) && !axis.enableTrim) {\n                var labelInterval = axis.orientation === 'Horizontal' ? interval : axis.maxLabelLength;\n                if (isLineBreak) {\n                    wrappedlabels = label.split(/<br\\s*\\/?>/, -1);\n                    for (var i_1 = 0; i_1 < wrappedlabels.length; i_1++) {\n                        wrappedlabels[i_1] = textTrim(labelInterval, wrappedlabels[i_1], axis.textStyle);\n                    }\n                }\n                else {\n                    wrappedlabels = textWrap(label, labelInterval, axis.textStyle);\n                }\n                labelLength = wrappedlabels.length > labelLength && !axis.enableTrim ? wrappedlabels.length : labelLength;\n                if (axis.orientation === 'Vertical' || (axis.orientation === 'Horizontal' && axis.angle % 180 !== 0)) {\n                    var labelWidth = 0;\n                    for (var index = 0; index < wrappedlabels.length; index++) {\n                        var wrappedlabelSize = measureText(wrappedlabels[index], axis.textStyle);\n                        if (wrappedlabelSize.width > labelWidth) {\n                            labelWidth = wrappedlabelSize.width;\n                            label = wrappedlabels[index];\n                        }\n                    }\n                }\n                if (axis.orientation === 'Vertical') {\n                    var tempintervel = heatmap.initialClipRect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n                    for (var index = 0; index < wrappedlabels.length; index++) {\n                        if ((measureText(label, axis.textStyle).height * wrappedlabels.length) > (tempintervel - labelPadding) && wrappedlabels.length > 0 && (axis.angle !== 90 && axis.angle !== 270)) {\n                            wrappedlabels.pop();\n                            if (wrappedlabels.length > 0) {\n                                wrappedlabels[wrappedlabels.length - 1] = wrappedlabels[wrappedlabels.length - 1] + '...';\n                                /* eslint-disable max-len */\n                                wrappedlabels[wrappedlabels.length - 1] = textTrim(axis.maxLabelLength, wrappedlabels[wrappedlabels.length - 1], axis.textStyle);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (isLineBreak && axis.enableTrim) {\n                    wrappedlabels = label.split(/<br\\s*\\/?>/, -1);\n                    var trimmedLabel = textTrim(axis.maxLabelLength, wrappedlabels[0], axis.textStyle);\n                    label = (label.indexOf('<br>') !== -1 || label.indexOf('<br/>') !== -1) && trimmedLabel.indexOf('...') === -1 ? trimmedLabel + '...' : trimmedLabel;\n                    wrappedlabels = [];\n                }\n                wrappedlabels.push(label);\n            }\n            var size = (axis.angle % 180 === 0) ?\n                measureText(label, axis.textStyle) : rotateTextSize(axis.textStyle, wrappedlabels, axis.angle);\n            labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n            if (axis.labelIntersectAction === 'MultipleRows' && axis.orientation === 'Horizontal' && axis.textStyle.textOverflow !== 'Wrap' && axis.textStyle.textOverflow !== 'Trim' && i > 0 && axis.labelRotation === 0) {\n                if (multipleRow[i].end >= heatmap.initialClipRect.width && i < labels.length - 1) {\n                    multipleRow[i].row = multipleRow[i].row + 1;\n                }\n                for (var k = 1; k <= axis.multilevel.length; k++) {\n                    if (multipleRow[i].start < multipleRow[i - 1].end) {\n                        if (axis.multilevel[k] < multipleRow[i].start) {\n                            count = k;\n                            break;\n                        }\n                        else if (k === axis.multilevel.length - 1) {\n                            count = axis.multilevel.length;\n                            break;\n                        }\n                    }\n                    else if (size.width < interval) {\n                        for (var j = 1; j <= axis.multilevel.length; j++) {\n                            if (axis.multilevel[j] < multipleRow[i].start) {\n                                count = j;\n                                multipleRow[j].row = count;\n                                break;\n                            }\n                        }\n                    }\n                }\n                labelSize.height = (labelSize.height > ((size.height * count) + (((size.height * 0.5) / 2) * (count - 1)))) ?\n                    labelSize.height : ((size.height * count) + (((size.height * 0.5) / 2) * count));\n                this.multipleRow[i].index = count;\n                axis.multilevel[count] = multipleRow[i].end;\n            }\n            else {\n                if (axis.orientation === 'Horizontal' && axis.labelIntersectAction === 'MultipleRows' && i === 0 &&\n                    axis.labelRotation === 0 && axis.textStyle.textOverflow !== 'Wrap' && axis.textStyle.textOverflow !== 'Trim') {\n                    axis.multilevel[1] = multipleRow[i].end;\n                }\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n        }\n        labelSize.height = (axis.angle % 180 === 0) ? labelSize.height * labelLength : labelSize.height;\n        if (heatmap.cellSettings.border.width >= 20 && axis.orientation !== 'Horizontal') {\n            labelSize.width = labelSize.width + (heatmap.cellSettings.border.width / 4);\n        }\n        if (axis.opposedPosition) {\n            this.farSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        else {\n            this.nearSizes.push((axis.orientation === 'Horizontal') ? labelSize.height : labelSize.width + padding);\n        }\n        return labelSize;\n    };\n    /**\n     * Generate the axis lables for numeric axis\n     *\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateNumericAxisLabels = function (heatmap) {\n        //Axis Min\n        var min = 0;\n        var max = 0;\n        var interval = this.interval ? this.interval : 1;\n        var adaptorMin;\n        var adaptorMax;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.min : heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ?\n                heatmap.adaptorModule.adaptiveXMinMax.max : heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        min = !isNullOrUndefined(this.minimum) ? this.minimum : ((adaptorMin) ? adaptorMin : 0);\n        max = !isNullOrUndefined(this.maximum) ? this.maximum :\n            ((adaptorMax) ? adaptorMax : (this.maxLength * this.increment));\n        var temp;\n        if (this.minimum && this.maximum && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        max = !isNullOrUndefined(this.maximum) ? max : (adaptorMax ? adaptorMax : (max + min));\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatmap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        for (var i = min; i <= max; i = i + (interval * this.increment)) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.axisLabels.push(value);\n        }\n        this.min = 0;\n        this.axisLabelSize = Math.floor(((max - min) / this.increment) + 1);\n        this.max = this.axisLabelSize - 1;\n        this.axisLabelInterval = interval;\n        for (var i = min; i <= max; i = i + this.increment) {\n            var value = formatValue(isCustom, format, i, this.format);\n            this.tooltipLabels.push(value);\n            this.labelValue.push(i);\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis lables for category axis\n     *\n     * @private\n     */\n    Axis.prototype.calculateCategoryAxisLabels = function () {\n        var labels = this.labels ? this.labels : [];\n        labels = (labels.length > 0) ? labels : this.jsonCellLabel;\n        var min = !isNullOrUndefined(this.minimum) && !(this.minimum instanceof Date) ? this.minimum : 0;\n        var max = !isNullOrUndefined(this.maximum) && !(this.maximum instanceof Date) ? this.maximum : this.maxLength;\n        var interval = this.interval ? this.interval : 1;\n        var temp;\n        var format = this.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        if (!isNullOrUndefined(this.minimum) && !isNullOrUndefined(this.maximum) && min > max) {\n            temp = min;\n            min = max;\n            max = temp;\n        }\n        if (labels && labels.length > 0) {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = !isNullOrUndefined(labels[i]) ? isCustom ? format.replace('{value}', labels[i].toString()) : labels[i].toString() : isCustom ? format.replace('{value}', i.toString()) : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        else {\n            for (var i = min; i <= max; i = i + interval) {\n                var value = isCustom ? format.replace('{value}', i.toString()) : i.toString();\n                this.axisLabels.push(value);\n            }\n        }\n        for (var i = min; i <= max; i++) {\n            this.tooltipLabels.push(!isNullOrUndefined(labels[i]) ? isCustom ? format.replace('{value}', labels[i].toString()) : labels[i].toString() : isCustom ? format.replace('{value}', i.toString()) : i.toString());\n            this.labelValue.push(!isNullOrUndefined(labels[i]) ? labels[i].toString() : i.toString());\n        }\n        this.min = min;\n        this.max = max;\n        this.axisLabelSize = max - min + 1;\n        this.axisLabelInterval = interval;\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    /**\n     * Generate the axis labels for date time axis.\n     *\n     * @param heatmap\n     * @private\n     */\n    Axis.prototype.calculateDateTimeAxisLabel = function (heatmap) {\n        var interval = this.interval ? this.interval : 1;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = heatmap.intl.getDateParser(option);\n        var dateFormatter = heatmap.intl.getDateFormat(option);\n        var min;\n        var max;\n        var adaptorMin = null;\n        var adaptorMax = null;\n        if (heatmap.adaptorModule && heatmap.isCellData) {\n            adaptorMin = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.min :\n                heatmap.adaptorModule.adaptiveYMinMax.min;\n            adaptorMax = this.orientation === 'Horizontal' ? heatmap.adaptorModule.adaptiveXMinMax.max :\n                heatmap.adaptorModule.adaptiveYMinMax.max;\n        }\n        var minimum = this.minimum ? this.minimum : (adaptorMin ? adaptorMin : null);\n        var maximum = this.maximum ? this.maximum : (adaptorMax ? adaptorMax : null);\n        if (minimum === null && maximum === null) {\n            min = 0;\n            max = this.maxLength * this.increment;\n            for (var i = min; i <= max; i = i + (interval * this.increment)) {\n                this.axisLabels.push(i.toString());\n                this.tooltipLabels.push(i.toString());\n                this.labelValue.push(i.toString());\n            }\n            this.min = 0;\n            this.max = this.maxLength;\n            this.axisLabelSize = (max - min) / this.increment + 1;\n            this.axisLabelInterval = interval;\n        }\n        else {\n            if (minimum !== null && maximum === null) {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = increaseDateTimeInterval(min, this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else if (minimum === null && maximum !== null) {\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n                min = increaseDateTimeInterval(max, -this.maxLength, this.intervalType, this.increment).getTime();\n            }\n            else {\n                min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: minimum }).val))));\n                max = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: maximum }).val))));\n            }\n            this.format = heatmap.intl.getDateFormat({\n                format: this.labelFormat, skeleton: this.getSkeleton()\n            });\n            var tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.axisLabels.push(value);\n                if (this.showLabelOn !== 'None') {\n                    interval = this.calculateLabelInterval(tempInterval);\n                    this.dateTimeAxisLabelInterval.push(interval);\n                }\n                tempInterval = increaseDateTimeInterval(tempInterval, interval, this.intervalType, this.increment).getTime();\n            }\n            this.min = 0;\n            this.axisLabelInterval = interval;\n            this.axisLabelSize = this.getTotalLabelLength(min, max); // this.tooltipLabels.length;\n            this.max = this.axisLabelSize - 1;\n            tempInterval = min;\n            while (tempInterval <= max) {\n                var value = this.format(new Date(tempInterval));\n                this.tooltipLabels.push(value);\n                this.labelValue.push(new Date(tempInterval));\n                tempInterval = increaseDateTimeInterval(tempInterval, 1, this.intervalType, this.increment).getTime();\n            }\n        }\n        this.labelValue = this.isInversed ? this.labelValue.reverse() : this.labelValue;\n    };\n    Axis.prototype.calculateLabelInterval = function (interval) {\n        var year = new Date(interval).getFullYear();\n        var month = new Date(interval).getMonth() + 1;\n        var day = new Date(interval).getDate();\n        var numberOfDays;\n        var tempInterval;\n        if (this.showLabelOn === 'Years' || this.showLabelOn === 'Months') {\n            if (this.showLabelOn === 'Years' && this.intervalType === 'Months') {\n                tempInterval = Math.ceil(12 / this.increment);\n            }\n            else {\n                numberOfDays = this.showLabelOn === 'Years' ? year % 4 === 0 ? 366 : 365 : new Date(year, month, 0).getDate();\n                numberOfDays += 1 - day;\n                tempInterval = this.intervalType === 'Days' ? Math.ceil(numberOfDays / this.increment) : this.intervalType === 'Hours' ?\n                    Math.ceil((numberOfDays * 24) / this.increment) : this.intervalType === 'Minutes' ?\n                    Math.ceil((numberOfDays * 24 * 60) / this.increment) : 1;\n            }\n        }\n        else if (this.showLabelOn === 'Days') {\n            tempInterval = this.intervalType === 'Hours' ? Math.ceil(24 / this.increment) : this.intervalType === 'Minutes' ?\n                Math.ceil((24 * 60) / this.increment) : 1;\n        }\n        else if (this.showLabelOn === 'Hours') {\n            var minutes = new Date(interval).getMinutes();\n            tempInterval = this.intervalType === 'Minutes' ? Math.ceil((60 - minutes) / this.increment) : 1;\n        }\n        else {\n            tempInterval = 1;\n        }\n        return tempInterval;\n    };\n    /**\n     * @private\n     */\n    Axis.prototype.getSkeleton = function () {\n        var skeleton;\n        if (this.intervalType === 'Years') {\n            skeleton = 'yMMM';\n        }\n        else if (this.intervalType === 'Months') {\n            skeleton = 'MMMd';\n        }\n        else if (this.intervalType === 'Days') {\n            skeleton = 'yMd';\n        }\n        else if (this.intervalType === 'Hours') {\n            skeleton = 'EHm';\n        }\n        else if (this.intervalType === 'Minutes') {\n            skeleton = 'Hms';\n        }\n        else {\n            skeleton = 'Hms';\n        }\n        return skeleton;\n    };\n    /** @private */\n    Axis.prototype.getTotalLabelLength = function (min, max) {\n        var length = 0;\n        var minimum = new Date(min);\n        var maximum = new Date(max);\n        var difference;\n        var days;\n        switch (this.intervalType) {\n            case 'Years':\n                // eslint-disable-next-line no-case-declarations\n                var years = ((maximum.getFullYear() - minimum.getFullYear()) / this.increment) + 1;\n                length = Math.floor(years);\n                break;\n            case 'Months':\n                // eslint-disable-next-line no-case-declarations\n                var months = (maximum.getFullYear() - minimum.getFullYear()) * 12;\n                months -= minimum.getMonth();\n                months += maximum.getMonth();\n                length = months <= 0 ? 1 : Math.floor((months / this.increment) + 1);\n                break;\n            case 'Days':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                days = Math.floor(difference / (1000 * 3600 * 24));\n                length = Math.floor((days / this.increment) + 1);\n                break;\n            case 'Hours':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                // eslint-disable-next-line no-case-declarations\n                var hours = Math.floor(difference / (1000 * 3600));\n                length = Math.floor(hours / this.increment) + 1;\n                break;\n            case 'Minutes':\n                difference = Math.abs(minimum.getTime() - maximum.getTime());\n                // eslint-disable-next-line no-case-declarations\n                var minutes = Math.floor(difference / (1000 * 60));\n                length = Math.floor(minutes / this.increment) + 1;\n                break;\n        }\n        return length;\n    };\n    /**\n     * Clear the axis label collection\n     *\n     * @private\n     */\n    Axis.prototype.clearAxisLabel = function () {\n        this.axisLabels = [];\n        this.tooltipLabels = [];\n        this.dateTimeAxisLabelInterval = [];\n        this.labelValue = [];\n    };\n    /**\n     * Clear the axis label collection\n     *\n     * @private\n     */\n    Axis.prototype.clearMultipleRow = function () {\n        this.multipleRow = [];\n        this.multilevel = [];\n    };\n    __decorate([\n        Complex({ text: '', textStyle: Theme.axisTitleFont }, Title)\n    ], Axis.prototype, \"title\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"opposedPosition\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"labels\", void 0);\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Axis.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(0)\n    ], Axis.prototype, \"labelRotation\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"isInversed\", void 0);\n    __decorate([\n        Property('Category')\n    ], Axis.prototype, \"valueType\", void 0);\n    __decorate([\n        Property(1)\n    ], Axis.prototype, \"increment\", void 0);\n    __decorate([\n        Property('None')\n    ], Axis.prototype, \"showLabelOn\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"interval\", void 0);\n    __decorate([\n        Property('')\n    ], Axis.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property('Days')\n    ], Axis.prototype, \"intervalType\", void 0);\n    __decorate([\n        Property('Trim')\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"enableTrim\", void 0);\n    __decorate([\n        Property(35)\n    ], Axis.prototype, \"maxLabelLength\", void 0);\n    __decorate([\n        Complex({ color: '#b5b5b5', width: 0, type: 'Rectangle' }, AxisLabelBorder)\n    ], Axis.prototype, \"border\", void 0);\n    __decorate([\n        Collection([], MultiLevelLabels)\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { Rect, Size, measureText, TextOption, rotateTextSize, textTrim, CanvasTooltip, PathOption, textWrap, getIsLineBreakLabel } from '../utils/helper';\nimport { sum, titlePositionX, LineOption, Line, DrawSvgCanvas, TextBasic, titlePositionY, getTitle } from '../utils/helper';\nimport { extend, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar AxisHelper = /** @class */ (function () {\n    function AxisHelper(heatMap) {\n        this.heatMap = heatMap;\n        this.padding = 10;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * To render the x and y axis.\n     *\n     * @private\n     */\n    AxisHelper.prototype.renderAxes = function () {\n        this.initialClipRect = this.heatMap.initialClipRect;\n        var heatMap = this.heatMap;\n        var axisElement;\n        var element;\n        if (!heatMap.enableCanvasRendering) {\n            axisElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'AxisCollection' });\n        }\n        var axes = this.heatMap.axisCollections;\n        for (var i = 0, len = axes.length; i < len; i++) {\n            var axis = axes[i];\n            if (axis.orientation === 'Horizontal') {\n                if (!heatMap.enableCanvasRendering) {\n                    element = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisGroup' });\n                }\n                this.drawXAxisLine(element, axis);\n                this.drawXAxisTitle(axis, element, axis.rect);\n                this.drawXAxisLabels(axis, element, axis.rect);\n            }\n            else {\n                element = heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisGroup' });\n                this.drawYAxisLine(element, axis);\n                this.drawYAxisTitle(axis, element, axis.rect);\n                this.drawYAxisLabels(axis, element, axis.rect);\n            }\n            if (axis.multiLevelLabels.length > 0) {\n                this.drawMultiLevels(element, axis);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                axisElement.appendChild(element);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.heatMap.svgObject.appendChild(axisElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisLine = function (parent, axis) {\n        var y = this.initialClipRect.y + (!axis.opposedPosition ? this.initialClipRect.height : 0);\n        var line = new LineOption(this.heatMap.element.id + '_XAxisLine', new Line(this.initialClipRect.x, y, this.initialClipRect.x + this.initialClipRect.width, y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawYAxisLine = function (parent, axis) {\n        var x = this.initialClipRect.x + ((!axis.opposedPosition) ? 0 : this.initialClipRect.width);\n        var line = new LineOption(this.heatMap.element.id + '_YAxisLine', new Line(x, this.initialClipRect.y, x, this.initialClipRect.height + this.initialClipRect.y), 'transparent', 0);\n        this.drawSvgCanvas.drawLine(line, parent);\n    };\n    AxisHelper.prototype.drawXAxisTitle = function (axis, parent, rect) {\n        var titlepadding = (axis.textStyle.size === '0px' ? 0 : 10);\n        var y = rect.y + (!axis.opposedPosition ? (axis.maxLabelSize.height + titlepadding +\n            sum(axis.xAxisMultiLabelHeight)) : -(axis.maxLabelSize.height + titlepadding + sum(axis.xAxisMultiLabelHeight)));\n        if (axis.title.text) {\n            var heatMap = this.heatMap;\n            var title = axis.title;\n            var elementSize = measureText(title.text, title.textStyle);\n            var padding = this.padding;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4) : (padding + (3 * elementSize.height / 4));\n            var options = new TextOption(heatMap.element.id + '_XAxisTitle', new TextBasic(rect.x + titlePositionX(rect.width, 0, 0, title.textStyle), y + padding, anchor, title.text), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            this.drawSvgCanvas.createText(options, parent, title.text);\n        }\n    };\n    AxisHelper.prototype.drawYAxisTitle = function (axis, parent, rect) {\n        if (axis.title.text) {\n            var title = axis.title;\n            var heatMap = this.heatMap;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var anchor = title.textStyle.textAlignment === 'Near' ? 'start' :\n                title.textStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            var padding = 10;\n            padding = axis.opposedPosition ? padding : -padding;\n            var titlepadding = (axis.textStyle.size === '0px' ? 0 : padding);\n            var x = rect.x + titlepadding + ((axis.opposedPosition) ? axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight) :\n                -(axis.maxLabelSize.width + sum(axis.yAxisMultiLabelHeight)));\n            var y = rect.y + titlePositionY(rect, 0, 0, title.textStyle) + (axis.opposedPosition ? this.padding : -this.padding);\n            var options = new TextOption(heatMap.element.id + '_YAxisTitle', new TextBasic(x, y - this.padding, anchor, title.text, labelRotation, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', 'auto'), title.textStyle, title.textStyle.color || heatMap.themeStyle.axisTitle);\n            if (!this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.createText(options, parent, title.text);\n            }\n            else {\n                this.drawSvgCanvas.canvasDrawText(options, title.text, x, y);\n            }\n        }\n    };\n    /**\n     * Get the visible labels for both x and y axis\n     *\n     * @private\n     */\n    AxisHelper.prototype.calculateVisibleLabels = function () {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        var data = this.heatMap.dataSourceSettings;\n        var processLabels = !(data && data.isJsonData && data.adaptorType === 'Cell');\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            axis = axisCollection[i];\n            if (axis.valueType === 'Numeric' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n            else if (axis.valueType === 'DateTime' && processLabels) {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else if (axis.valueType === 'Category') {\n                axis.clearAxisLabel();\n                axis.calculateCategoryAxisLabels();\n            }\n            axis.tooltipLabels = axis.isInversed ? axis.tooltipLabels.reverse() : axis.tooltipLabels;\n        }\n    };\n    /**\n     * Measure the title and labels rendering position for both X and Y axis.\n     *\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.measureAxis = function (rect) {\n        var heatmap = this.heatMap;\n        var axis;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = axisCollection.length - 1; i >= 0; i--) {\n            axis = axisCollection[i];\n            var padding = axis.textStyle.size === '0px' ? 0 : this.padding;\n            axis.nearSizes = [];\n            axis.farSizes = [];\n            axis.computeSize(axis, heatmap, rect);\n            if (!axis.opposedPosition) {\n                if (axis.orientation === 'Horizontal') {\n                    rect.height -= (sum(axis.nearSizes) + padding);\n                }\n                else {\n                    rect.x += sum(axis.nearSizes) + padding;\n                    rect.width -= sum(axis.nearSizes) + padding;\n                }\n            }\n            else {\n                if (axis.orientation === 'Horizontal') {\n                    rect.y += sum(axis.farSizes) + padding;\n                    rect.height -= sum(axis.farSizes) + padding;\n                }\n                else {\n                    rect.width -= sum(axis.farSizes) + padding;\n                }\n            }\n        }\n    };\n    /**\n     * Calculate the X and Y axis line position\n     *\n     * @param rect\n     * @private\n     */\n    AxisHelper.prototype.calculateAxisSize = function (rect) {\n        var heatmap = this.heatMap;\n        var axisCollection = heatmap.axisCollections;\n        for (var i = 0, len = axisCollection.length; i < len; i++) {\n            var axis = axisCollection[i];\n            axis.rect = extend({}, rect, null, true);\n            if (axis.orientation === 'Horizontal' && axis.multiLevelLabels.length !== 0) {\n                if (axis.opposedPosition) {\n                    axis.rect.y += (axis.angle === 0 || axis.angle === 180 || axis.angle === 360 ? 0 : this.padding);\n                    this.heatMap.initialClipRect.y += (axis.angle === 0 || axis.angle === 180 || axis.angle === 360 ? 0 : this.padding);\n                }\n                rect.height -= (axis.angle === 0 || axis.angle === 180 || axis.angle === 360 ? 0 : this.padding);\n            }\n            if (axis.orientation === 'Horizontal' && !axis.opposedPosition) {\n                axis.rect.y = rect.y + rect.height;\n                axis.rect.height = 0;\n            }\n            if (axis.orientation === 'Vertical' && axis.opposedPosition) {\n                axis.rect.x = rect.x + rect.width;\n                axis.rect.width = 0;\n            }\n            axis.multiLevelPosition = [];\n            for (var i_1 = 0; i_1 < axis.multiLevelLabels.length; i_1++) {\n                var multiPosition = axis.multiPosition(axis, i_1);\n                axis.multiLevelPosition.push(multiPosition);\n            }\n        }\n    };\n    AxisHelper.prototype.drawXAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var isLineBreak = false;\n        var borderWidth = this.heatMap.cellSettings.border.width > 5 ? (this.heatMap.cellSettings.border.width / 2) : 0;\n        var interval = (rect.width - borderWidth) / axis.axisLabelSize;\n        var compactInterval = 0;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var tempintervel = rect.width / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.width / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n            axisInterval = temp;\n        }\n        var y;\n        var padding = 10;\n        var lableStrtX = rect.x + (!axis.isInversed ? 0 : rect.width);\n        var labelPadding;\n        var angle = axis.angle;\n        padding = this.padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'XAxisLabelBorder' });\n        }\n        if (axis.isInversed && axis.labelIntersectAction === 'MultipleRows') {\n            axis.multipleRow.reverse();\n        }\n        isLineBreak = getIsLineBreakLabel(labels);\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var lableRect = new Rect(lableStrtX, rect.y, interval, rect.height);\n            var label = (axis.textStyle.textOverflow !== 'Wrap' && !(isLineBreak) && axis.textStyle.textOverflow !== 'Trim' && axis.labelIntersectAction === 'Trim' && axis.isIntersect) ? axis.valueType !== 'DateTime' ||\n                axis.showLabelOn === 'None' ? textTrim(interval * axisInterval, labels[i], axis.textStyle) :\n                textTrim(axis.dateTimeAxisLabelInterval[i] * interval, labels[i], axis.textStyle) : labels[i];\n            label = ((axis.enableTrim || axis.textStyle.textOverflow === 'Trim') && !isLineBreak) ? textTrim((axis.textStyle.textOverflow === 'Trim' ? interval - (axis.border.width / 2) : axis.maxLabelLength), labels[i], axis.textStyle) : label;\n            var wrappedLabel = label;\n            var wrappedlabels = [];\n            var rotateSize = new Size(0, 0);\n            if ((axis.textStyle.textOverflow === 'Wrap' || isLineBreak) && !axis.enableTrim) {\n                wrappedlabels = this.getLabels(wrappedLabel, interval - (axis.border.width / 2), axis, isLineBreak);\n                wrappedLabel = this.getMaxLabel(wrappedlabels, axis);\n            }\n            else {\n                if (isLineBreak && axis.enableTrim) {\n                    wrappedlabels = this.getLabels(wrappedLabel, interval - (axis.border.width / 2), axis, isLineBreak);\n                    wrappedLabel = textTrim(axis.maxLabelLength, wrappedlabels[0], axis.textStyle);\n                    wrappedLabel = (label.indexOf('<br>') !== -1 || label.indexOf('<br/>') !== -1) && wrappedLabel.indexOf('...') === -1 ? wrappedLabel + '...' : wrappedLabel;\n                    wrappedlabels = [];\n                }\n                wrappedlabels.push(wrappedLabel);\n            }\n            var elementSize = measureText(wrappedLabel, axis.textStyle);\n            var transform = void 0;\n            labelPadding = (axis.opposedPosition) ? -(padding) : (padding + ((angle % 360) === 0 ? (elementSize.height / 2) : 0));\n            elementSize.width = axis.isInversed ? (elementSize.width > interval ? interval : elementSize.width) : elementSize.width;\n            var x = lableRect.x + ((!axis.isInversed) ?\n                (lableRect.width / 2) : -((lableRect.width / 2)));\n            if (axis.textStyle.textAlignment === 'Near') {\n                x = lableRect.x - ((!axis.isInversed) ? 0 : lableRect.width);\n            }\n            else if (axis.textStyle.textAlignment === 'Far') {\n                x = lableRect.x + ((!axis.isInversed) ?\n                    (lableRect.width - elementSize.width) : -(elementSize.width));\n            }\n            if (axis.labelIntersectAction === 'Trim') {\n                x = (!axis.isInversed) ? (x >= lableRect.x ? x : lableRect.x) : (x > (lableStrtX - interval) ? x : (lableStrtX - interval));\n            }\n            else if (angle % 180 === 0) {\n                x = x < rect.x ? rect.x : x;\n                x = ((x + elementSize.width) > (rect.x + rect.width)) ? (rect.x + rect.width - elementSize.width) : x;\n            }\n            if ((axis.textStyle.textOverflow === 'Wrap' || isLineBreak) && !axis.isInversed) {\n                x = x < lableRect.x ? lableRect.x : x;\n            }\n            if (axis.labelIntersectAction === 'MultipleRows' && axis.textStyle.textOverflow !== 'Wrap' && axis.textStyle.textOverflow !== 'Trim' && axis.labelRotation === 0) {\n                var a = axis.opposedPosition ? -(axis.multipleRow[i].index - 1) :\n                    (axis.multipleRow[i].index - 1);\n                if (axis.multipleRow[i].index > 1) {\n                    y = rect.y + labelPadding + (elementSize.height * a) + (axis.opposedPosition ?\n                        -(((elementSize.height * 0.5) / 2) * axis.multipleRow[i].index) :\n                        (((elementSize.height * 0.5) / 2) * axis.multipleRow[i].index));\n                }\n                else {\n                    y = rect.y + labelPadding + (axis.opposedPosition ? -((elementSize.height * 0.5) / 2) :\n                        ((elementSize.height * 0.5) / 2));\n                }\n            }\n            else {\n                y = rect.y + ((axis.textStyle.textOverflow === 'Wrap' || isLineBreak) && axis.opposedPosition && angle % 360 === 0 ? -(axis.farSizes.length >= 1 ? axis.farSizes[1] : 0) + padding : labelPadding);\n            }\n            this.drawXAxisBorder(axis, borderElement, axis.rect, x, elementSize.width, i);\n            if (angle % 360 !== 0) {\n                angle = (angle > 360) ? angle % 360 : angle;\n                rotateSize = rotateTextSize(axis.textStyle, wrappedlabels, angle);\n                /* eslint-disable max-len */\n                x = lableRect.x + (axis.isInversed ? -(lableRect.width / 2) : (lableRect.width / 2)) + (angle === 90 ? (elementSize.height * ((wrappedlabels.length - 1) / 2)) : angle === 270 ? -(elementSize.height * (wrappedlabels.length - 1) / 2) : 0);\n                /* eslint-disable max-len */\n                y = y + (axis.opposedPosition ? (((axis.textStyle.textOverflow === 'Wrap' || isLineBreak) && !axis.enableTrim ? (((angle % 360) === 180) ? padding : 0) + (rotateSize.height / 2) - (axis.farSizes.length >= 1 ? axis.farSizes[1] : 0) : -(rotateSize.height / 2)) + (axis.border.width / 2)) :\n                    (((angle % 360) === 0) ? 0 : ((angle % 360) === 180) ? (rotateSize.height / 2) - (axis.border.width) + padding : (rotateSize.height / 2) - (axis.border.width)));\n                if (wrappedlabels.length > 1) {\n                    y = y - ((angle > 0 && angle < 80) || (angle > 300 && angle < 360) ? elementSize.height * ((wrappedlabels.length - 1) / 2) : (angle > 120 && angle < 240) && angle !== 180 && wrappedlabels.length > 2 ? -(elementSize.height * ((wrappedlabels.length - 2) / 2)) : 0);\n                    x = x + ((angle > 0 && angle < 70) ? elementSize.height * ((wrappedlabels.length - 1) / 2) : 0);\n                }\n                transform = 'rotate(' + angle + ',' + x + ',' + y + ')';\n            }\n            if (this.heatMap.cellSettings.border.width > 5 && axis.opposedPosition) {\n                y = y - (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (this.heatMap.yAxis.opposedPosition && this.heatMap.cellSettings.border.width > 5) {\n                x = x + (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (this.heatMap.xAxis.isInversed && this.heatMap.cellSettings.border.width > 5) {\n                x = x - (this.heatMap.cellSettings.border.width / 2);\n            }\n            if (elementSize.width >= interval) {\n                x = axis.border.width ? x + (axis.border.width / 2) : x;\n            }\n            x = axis.textStyle.textAlignment === 'Near' ? x + (axis.border.width / 2) : axis.textStyle.textAlignment === 'Far' ?\n                x - (axis.border.width / 2) : x;\n            x = (angle % 360 === 0) && axis.textStyle.textAlignment === 'Center' && elementSize.width > interval ? lableRect.x + ((!axis.isInversed) ?\n                (elementSize.width / 2) : -((elementSize.width / 2))) : x;\n            var options = new TextOption(heatMap.element.id + '_XAxis_Label' + i, new TextBasic(x, y, (angle % 360 === 0) ? axis.textStyle.textAlignment === 'Center' ? 'middle' : 'start' : 'middle', label, angle, transform), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            /* eslint-disable max-len */\n            options.text = isLineBreak ? wrappedlabels : getTitle(options.text, axis.textStyle, lableRect.width - (axis.border.width / 2));\n            if (angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, null, null, null, wrappedlabels, elementSize.height, true);\n            }\n            else {\n                if (axis.textStyle.textOverflow === 'Wrap' || isLineBreak) {\n                    this.drawSvgCanvas.createWrapText(options, axis.textStyle, labelElement);\n                }\n                else {\n                    this.drawSvgCanvas.createText(options, labelElement, label);\n                }\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStrtX = lableStrtX + (!axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStrtX = lableStrtX + (!axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n            }\n            if (wrappedLabel.indexOf('...') !== -1) {\n                var xValue = axis.angle % 360 !== 0 ? x - (rotateSize.width / 2) : (axis.textStyle.textAlignment === 'Center' ? x - (elementSize.width / 2) : x);\n                var yValue = y - (axis.angle % 360 !== 0 ? (rotateSize.height / 2) : elementSize.height);\n                label = labels[i].indexOf('<br>') !== -1 || labels[i].indexOf('<br/>') !== -1 ? labels[i].replace(/<br\\s*\\/?>/g, ' ') : labels[i];\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(label, new Rect(xValue, yValue, axis.angle % 360 !== 0 ? rotateSize.width : elementSize.width, axis.angle % 360 !== 0 ? rotateSize.height : elementSize.height * wrappedlabels.length)));\n            }\n            if (compactInterval !== 0) {\n                i = i + (compactInterval - 1);\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.getWrappedLabels = function (wrappedLabel, labelInterval, axis) {\n        var wrappedlabels = wrappedLabel.split(/<br\\s*\\/?>/, -1);\n        for (var i = 0; i < wrappedlabels.length; i++) {\n            var label = wrappedlabels[i];\n            wrappedlabels[i] = textTrim(labelInterval, label, axis.textStyle);\n        }\n        return wrappedlabels;\n    };\n    AxisHelper.prototype.getMaxLabel = function (wrappedlabels, axis) {\n        var label = '';\n        var labelWidth = 0;\n        var wrappedlabelSize = new Size(0, 0);\n        for (var index = 0; index < wrappedlabels.length; index++) {\n            wrappedlabelSize = measureText(wrappedlabels[index], axis.textStyle);\n            if (wrappedlabelSize.width > labelWidth) {\n                labelWidth = wrappedlabelSize.width;\n                label = wrappedlabels[index];\n            }\n        }\n        return label;\n    };\n    AxisHelper.prototype.getLabels = function (label, labelInterval, axis, isLineBreak) {\n        var wrappedlabels = [];\n        if (isLineBreak) {\n            wrappedlabels = this.getWrappedLabels(label, labelInterval, axis);\n        }\n        else {\n            wrappedlabels = textWrap(label, labelInterval, axis.textStyle);\n        }\n        return wrappedlabels;\n    };\n    AxisHelper.prototype.drawYAxisLabels = function (axis, parent, rect) {\n        var heatMap = this.heatMap;\n        var labels = axis.axisLabels;\n        var interval = rect.height / axis.axisLabelSize;\n        var compactInterval = 0;\n        var tempintervel = rect.height / (axis.axisLabelSize / axis.axisLabelInterval);\n        var temp = axis.axisLabelInterval;\n        var label;\n        if (tempintervel > 0) {\n            while (tempintervel < parseInt(axis.textStyle.size, 10)) {\n                temp = temp + 1;\n                tempintervel = rect.height / (axis.axisLabelSize / temp);\n            }\n        }\n        else {\n            temp = axis.tooltipLabels.length;\n        }\n        if (axis.axisLabelInterval < temp) {\n            compactInterval = temp;\n            labels = axis.tooltipLabels;\n        }\n        var padding = 10;\n        var labelPadding = 5;\n        var lableStartY = rect.y + (axis.isInversed ? 0 : rect.height);\n        var anchor = axis.opposedPosition ? 'start' : 'end';\n        padding = axis.opposedPosition ? padding : -padding;\n        var labelElement;\n        var borderElement;\n        if (!heatMap.enableCanvasRendering) {\n            labelElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabels' });\n            borderElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + 'YAxisLabelBorder' });\n        }\n        var isLineBreak = getIsLineBreakLabel(labels);\n        for (var i = 0, len = labels.length; i < len; i++) {\n            var labelRect = new Rect(rect.x, lableStartY, rect.width, interval);\n            var position = axis.isInversed ? labelRect.height / 2 : -(labelRect.height / 2); //titlePositionY(lableRect, 0, 0, axis.textStyle);\n            var axisWidth = this.heatMap.cellSettings.border.width >= 20 ? (this.heatMap.cellSettings.border.width / 2) : 0;\n            var indexValue = this.heatMap.cellSettings.border.width > 5 ?\n                (((this.heatMap.cellSettings.border.width / 2) / len) * (axis.isInversed ? (i) : (len - i))) : 0;\n            label = (axis.enableTrim || axis.textStyle.textOverflow === 'Trim') && !isLineBreak ? textTrim(axis.maxLabelLength, labels[i], axis.textStyle) : labels[i];\n            var elementSize = measureText(label, axis.textStyle);\n            var labelLength = 1;\n            var wrappedLabel = [];\n            var rotateSize = new Size(0, 0);\n            if ((axis.textStyle.textOverflow === 'Wrap' || isLineBreak) && !axis.enableTrim) {\n                wrappedLabel = this.getLabels(label, axis.maxLabelLength, axis, isLineBreak);\n                for (var index = 0; index < wrappedLabel.length; index++) {\n                    if ((elementSize.height * wrappedLabel.length) > (tempintervel + (labelPadding)) && wrappedLabel.length > 0 && (axis.angle !== 90 && axis.angle !== 270)) {\n                        wrappedLabel.pop();\n                        if (wrappedLabel.length > 0) {\n                            wrappedLabel[wrappedLabel.length - 1] = wrappedLabel[wrappedLabel.length - 1] + '...';\n                            /* eslint-disable max-len */\n                            wrappedLabel[wrappedLabel.length - 1] = textTrim(axis.maxLabelLength, wrappedLabel[wrappedLabel.length - 1], axis.textStyle);\n                        }\n                    }\n                }\n                if (!(isLineBreak)) {\n                    label = wrappedLabel.length !== 0 ? '' : label;\n                    for (var labelIndex = 0; labelIndex < wrappedLabel.length; labelIndex++) {\n                        label = isNullOrUndefined(label) ? wrappedLabel[labelIndex] : label + ' ' + wrappedLabel[labelIndex];\n                    }\n                }\n                labelLength = wrappedLabel.length;\n            }\n            else {\n                if (isLineBreak && axis.enableTrim) {\n                    wrappedLabel = this.getLabels(label, axis.maxLabelLength, axis, isLineBreak);\n                    var trimmedLabel = textTrim(axis.maxLabelLength, wrappedLabel[0], axis.textStyle);\n                    label = (label.indexOf('<br>') !== -1 || label.indexOf('<br/>') !== -1) && trimmedLabel.indexOf('...') === -1 ? trimmedLabel + '...' : trimmedLabel;\n                    wrappedLabel = [];\n                }\n                wrappedLabel.push(label);\n            }\n            var x = labelRect.x + padding + (axis.opposedPosition ? (axis.textStyle.textOverflow === 'Wrap' && axis.angle % 360 !== 0 ? labelLength * (elementSize.height / 2) : 0) + axisWidth : -axisWidth);\n            if (axis.textStyle.textAlignment === 'Far' && axis.angle % 360 === 0) {\n                /* eslint-disable max-len */\n                position = axis.isInversed ? labelRect.height - (labelLength > 1 ? (elementSize.height * labelLength) - (elementSize.height / 2) : (elementSize.height / 2)) :\n                    -(labelLength > 1 ? (elementSize.height * labelLength) - (elementSize.height / 2) : (elementSize.height / 2));\n            }\n            else if (axis.textStyle.textAlignment === 'Near' && axis.angle % 360 === 0) {\n                /* eslint-disable max-len */\n                position = (axis.isInversed ? elementSize.height / 2 : ((elementSize.height / 2) - labelRect.height)) + (axis.border.width / 2);\n            }\n            var y = (labelRect.y - indexValue) + position - ((labelLength > 1 && axis.textStyle.textAlignment === 'Center') || (axis.angle % 360 !== 0 && axis.opposedPosition) ? (((elementSize.height * labelLength) / 2) - (elementSize.height / 2)) : 0);\n            if (axis.angle % 360 !== 0) {\n                anchor = 'middle';\n                axis.angle = (axis.angle > 360) ? axis.angle % 360 : axis.angle;\n                rotateSize = rotateTextSize(axis.textStyle, wrappedLabel, axis.angle);\n                x = labelRect.x + (axis.opposedPosition ? (rotateSize.width / 2 + padding) : -(rotateSize.width / 2 - padding)) + (axis.angle === 90 ? (elementSize.height * ((wrappedLabel.length - 1) / 2)) : axis.angle === 270 ? -(elementSize.height * (wrappedLabel.length - 1) / 2) : 0);\n                y = labelRect.y + (axis.isInversed ? (labelRect.height / 2) : (-labelRect.height / 2)) + (axis.angle === 180 ? (elementSize.height * ((wrappedLabel.length - 1) / 2)) : 0);\n                if (wrappedLabel.length > 1) {\n                    var value = elementSize.height * ((wrappedLabel.length - 1) / 2);\n                    y = y - ((axis.angle > 0 && axis.angle < 60) || (axis.angle > 290 && axis.angle < 360) ? value : (axis.angle > 115 && axis.angle < 240) && axis.angle !== 180 ? -value : 0);\n                    x = x + (axis.angle > 20 && axis.angle < 160 && axis.angle !== 90 ? value : axis.angle > 200 && axis.angle < 330 && axis.angle !== 270 ? -value - (axis.angle > 200 && axis.angle < 240 && !axis.opposedPosition && wrappedLabel.length > 2 ? -(elementSize.height * ((wrappedLabel.length - 2) / 2)) : 0) :\n                        (axis.angle >= 330 && axis.angle < 350 ? -value / 2 : 0));\n                }\n            }\n            var options = new TextOption(heatMap.element.id + '_YAxis_Label' + i, new TextBasic(x, y, anchor, label, axis.angle, 'rotate(' + axis.angle + ',' + (x) + ',' + (y) + ')', 'middle'), axis.textStyle, axis.textStyle.color || heatMap.themeStyle.axisLabel);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                options.dy = '1ex';\n            }\n            options.text = isLineBreak ? wrappedLabel : getTitle(options.text, axis.textStyle, axis.maxLabelLength);\n            if (axis.angle !== 0 && this.heatMap.enableCanvasRendering) {\n                this.drawSvgCanvas.canvasDrawText(options, null, null, null, wrappedLabel, elementSize.height, true);\n            }\n            else {\n                if (axis.textStyle.textOverflow === 'Wrap' || isLineBreak) {\n                    this.drawSvgCanvas.createWrapText(options, axis.textStyle, labelElement);\n                }\n                else {\n                    this.drawSvgCanvas.createText(options, labelElement, label);\n                }\n            }\n            if (compactInterval === 0) {\n                var labelInterval = (axis.valueType === 'DateTime' && axis.showLabelOn !== 'None') ?\n                    axis.dateTimeAxisLabelInterval[i] : axis.axisLabelInterval;\n                lableStartY = lableStartY + (axis.isInversed ? (labelInterval * interval) :\n                    -(labelInterval * interval));\n            }\n            else {\n                lableStartY = lableStartY + (axis.isInversed ? (compactInterval * interval) : -(compactInterval * interval));\n                i = i + (compactInterval - 1);\n            }\n            this.drawYAxisBorder(axis, borderElement, axis.rect, y, elementSize.height, i);\n            label = this.getMaxLabel(wrappedLabel, axis);\n            if (label.indexOf('...') !== -1) {\n                var xValue = axis.opposedPosition ? x : (x - (axis.angle % 360 !== 0 ? (rotateSize.width / 2) : elementSize.width));\n                var yValue = y - (axis.angle % 360 !== 0 ? (rotateSize.height / 2) : elementSize.height);\n                label = labels[i].indexOf('<br>') !== -1 || labels[i].indexOf('<br/>') !== -1 ? labels[i].replace(/<br\\s*\\/?>/g, ' ') : labels[i];\n                this.heatMap.tooltipCollection.push(new CanvasTooltip(label, new Rect(xValue, yValue, (axis.angle % 360 !== 0 ? rotateSize.width : elementSize.width), (axis.angle % 360 !== 0 ? rotateSize.height : elementSize.height * wrappedLabel.length))));\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n            parent.appendChild(borderElement);\n        }\n    };\n    AxisHelper.prototype.drawXAxisBorder = function (axis, parent, rect, lableX, width, index) {\n        var interval = rect.width / axis.axisLabelSize;\n        var path = '';\n        var padding = 10;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = axis.isInversed ? rect.x + rect.width - (interval * index * axisInterval) :\n            rect.x + (interval * index * axisInterval);\n        var startY = rect.y;\n        var endX;\n        var endY;\n        endY = startY + (axis.opposedPosition ? -(axis.maxLabelSize.height + padding) : axis.maxLabelSize.height + padding);\n        // eslint-disable-next-line prefer-const\n        endX = axis.isInversed ? startX - interval : startX + interval;\n        var endY1 = axis.isInversed ? (lableX + width + padding) : (lableX - padding);\n        var endY2 = axis.isInversed ? (lableX - padding) : (lableX + width + padding);\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY);\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endY = startY + ((endY - startY) / 2) + (axis.opposedPosition ? 0 : 5);\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endY1 + ' ' + endY + ' ' + 'M' + ' ' + endY2 +\n                    ' ' + endY + ' ' + 'L' +\n                    ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    AxisHelper.prototype.drawYAxisBorder = function (axis, parent, rect, lableY, height, index) {\n        var interval = rect.height / axis.axisLabelSize;\n        var path = '';\n        var padding = 20;\n        var axisInterval = axis.interval ? axis.interval : 1;\n        var startX = rect.x;\n        var startY = axis.isInversed ? rect.y + (interval * index * axisInterval) :\n            rect.y + rect.height - (interval * index * axisInterval);\n        var endX;\n        var endY;\n        endX = startX + (!axis.opposedPosition ? -(axis.maxLabelSize.width + padding) : axis.maxLabelSize.width + padding);\n        // eslint-disable-next-line prefer-const\n        endY = axis.isInversed ? startY + interval : startY - interval;\n        var endY1 = axis.isInversed ? lableY - height / 2 : lableY + height / 2;\n        var endY2 = axis.isInversed ? lableY + height / 2 : lableY - height / 2;\n        switch (axis.border.type) {\n            case 'Rectangle':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY;\n                break;\n            case 'WithoutTopBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path = 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                endX = startX - (startX - endX) / 2;\n                path = 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY1 + ' ' + 'M' + ' ' +\n                    endX + ' ' + endY2 + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY;\n                break;\n        }\n        if (axis.border.width > 0 && axis.border.type !== 'WithoutBorder') {\n            this.createAxisBorderElement(axis, path, parent, index);\n        }\n    };\n    /**\n     * To create border element for axis.\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisHelper.prototype.createAxisBorderElement = function (axis, labelBorder, parent, index) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? '_XAxis_Label_Border' : '_YAxis_Label_Border';\n        var pathOptions = new PathOption(this.heatMap.element.id + id + index, 'transparent', axis.border.width, axis.border.color, 1, 'none', labelBorder);\n        if (!this.heatMap.enableCanvasRendering) {\n            var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    AxisHelper.prototype.drawMultiLevels = function (parent, axis) {\n        var element;\n        if (!this.heatMap.enableCanvasRendering) {\n            element = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_' + axis.orientation + '_MultiLevelLabel' });\n        }\n        if (axis.orientation === 'Horizontal') {\n            this.renderXAxisMultiLevelLabels(axis, element);\n        }\n        else {\n            this.renderYAxisMultiLevelLabels(axis, element);\n        }\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(element);\n        }\n    };\n    /**\n     * render x axis multi level labels\n     *\n     * @private\n     * @returns {void}\n     */\n    AxisHelper.prototype.renderXAxisMultiLevelLabels = function (axis, parent) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endX = 0;\n        var tooltip;\n        var start;\n        var end;\n        var labelSize;\n        var anchor;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var opposedPosition = axis.opposedPosition;\n        var pathRect = '';\n        var gap;\n        var textLength;\n        var position = (isInversed ? axis.rect.width : 0) + axis.rect.x;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_XAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                if (_this.heatMap.theme === 'Bootstrap5' || _this.heatMap.theme === 'Bootstrap5Dark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"' } }, true);\n                }\n                if (_this.heatMap.theme === 'Tailwind' || _this.heatMap.theme === 'TailwindDark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: 'Inter' } }, true);\n                }\n                if (_this.heatMap.theme === 'Material3' || _this.heatMap.theme === 'Material3Dark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: 'Roboto' } }, true);\n                }\n                if (_this.heatMap.theme === 'Fluent' || _this.heatMap.theme === 'FluentDark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: '\"Segoe UI\", -apple-system, BlinkMacSystemFont, \"Roboto\", \"Helvetica Neue\", sans-serif' } }, true);\n                }\n                tooltip = false;\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startX = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startY = axis.multiLevelPosition[level].y;\n                endX = position + _this.calculateWidth(axis, categoryLabel.end, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(endX - startX) : categoryLabel.maximumTextWidth) - padding;\n                y = startY + (opposedPosition ? -((axis.xAxisMultiLabelHeight[level] - labelSize.height)) : labelSize.height);\n                x = !isInversed ? startX + padding : startX - gap;\n                if (multiLevel.alignment === 'Center') {\n                    x = ((endX - startX) / 2) + startX;\n                    x -= (labelSize.width > gap ? gap : labelSize.width) / 2;\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    x = !isInversed ? endX - padding : startX - padding;\n                    x -= (labelSize.width > gap ? gap : labelSize.width);\n                }\n                else {\n                    x = !isInversed ? startX + padding : endX + padding;\n                }\n                if (multiLevel.overflow === 'None' && labelSize.width > Math.abs(endX - startX)) {\n                    x = !isInversed ? startX + padding : startX - labelSize.width - padding;\n                    anchor = 'start';\n                }\n                var textBasic = new TextBasic(x, y, anchor, categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_XAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                if (multiLevel.overflow === 'Wrap') {\n                    options.text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    textLength = options.text.length;\n                }\n                else if (multiLevel.overflow === 'Trim') {\n                    options.text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    textLength = 1;\n                }\n                if (multiLevel.overflow === 'Wrap' && options.text.length > 1) {\n                    _this.drawSvgCanvas.createWrapText(options, multiLevel.textStyle, labelElement);\n                    for (var i_2 = 0; i_2 < options.text.length; i_2++) {\n                        if (options.text[i_2].indexOf('...') !== -1) {\n                            tooltip = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n                if (options.text.indexOf('...') !== -1 || options.text[0].indexOf('...') !== -1 || tooltip) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height * textLength)));\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderXAxisLabelBorder(level, axis, startX, startY, endX, pathRect, level, labelSize, gap, x);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     *\n     * @private\n     * @returns {void}\n     */\n    AxisHelper.prototype.renderXAxisLabelBorder = function (labelIndex, axis, startX, startY, endX, path, level, labelSize, gap, x) {\n        var path1;\n        var path2;\n        var endY = startY + (axis.opposedPosition ? -(axis.xAxisMultiLabelHeight[labelIndex]) :\n            axis.xAxisMultiLabelHeight[labelIndex]);\n        var padding = 3;\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                    'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                path1 = axis.isInversed ? (labelSize.width > gap ? gap : labelSize.width) + x + padding : x - padding;\n                path2 = axis.isInversed ? x - padding : (labelSize.width > gap ? gap : labelSize.width) + x + padding;\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + (startY + (endY - startY) / 2) + ' ' +\n                    'L' + ' ' + path1 + ' ' + (startY + (endY - startY) / 2) + ' ' + 'M' + ' ' + path2 + ' ' + (startY +\n                    (endY - startY) / 2) + ' ' + 'L' + ' ' + endX + ' ' + (startY + (endY - startY) / 2) +\n                    ' ' + 'L' + ' ' + endX + ' ' + startY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * render y axis multi level labels\n     *\n     * @private\n     * @returns {void}\n     */\n    AxisHelper.prototype.renderYAxisMultiLevelLabels = function (axis, parent) {\n        var _this = this;\n        var x = 0;\n        var y;\n        var padding = 10;\n        var startX;\n        var startY;\n        var endY;\n        var start;\n        var end;\n        var labelSize;\n        var isInversed = axis.isInversed;\n        var labelElement;\n        var pathRect = '';\n        var gap;\n        var text;\n        var position = (!isInversed ? axis.rect.height : 0) + axis.rect.y;\n        axis.multiLevelLabels.map(function (multiLevel, level) {\n            startY = axis.multiLevelPosition[level].y;\n            labelElement = _this.heatMap.renderer.createGroup({ id: _this.heatMap.element.id + '_YAxisMultiLevelLabel' + level });\n            multiLevel.categories.map(function (categoryLabel, i) {\n                if (_this.heatMap.theme === 'Tailwind' || _this.heatMap.theme === 'TailwindDark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: 'Inter' } }, true);\n                }\n                if (_this.heatMap.theme === 'Material3' || _this.heatMap.theme === 'Material3Dark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: 'Roboto' } }, true);\n                }\n                if (_this.heatMap.theme === 'Bootstrap5' || _this.heatMap.theme === 'Bootstrap5Dark') {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    multiLevel.setProperties({ textStyle: { fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"' } }, true);\n                }\n                start = typeof categoryLabel.start === 'number' ? categoryLabel.start : Number(new Date(categoryLabel.start));\n                end = typeof categoryLabel.end === 'number' ? categoryLabel.end : Number(new Date(categoryLabel.end));\n                startY = position + _this.calculateLeftPosition(axis, start, categoryLabel.start, axis.rect);\n                startX = axis.multiLevelPosition[level].x;\n                endY = position + _this.calculateWidth(axis, categoryLabel.start, end, axis.rect);\n                labelSize = measureText(categoryLabel.text, multiLevel.textStyle);\n                gap = ((categoryLabel.maximumTextWidth === null) ? Math.abs(startX) : categoryLabel.maximumTextWidth) - padding;\n                var maxWidth = Math.abs(startX - (startX - axis.multiLevelSize[level].width - 2 * padding)) / 2 -\n                    (labelSize.width / 2);\n                x = (axis.opposedPosition ? startX : startX - axis.multiLevelSize[level].width - 2 * padding) + maxWidth;\n                y = startY + padding;\n                if (multiLevel.overflow !== 'None') {\n                    if (multiLevel.overflow === 'Wrap') {\n                        text = textWrap(categoryLabel.text, gap, multiLevel.textStyle);\n                    }\n                    else {\n                        text = textTrim(gap, categoryLabel.text, multiLevel.textStyle);\n                    }\n                }\n                if (multiLevel.alignment === 'Center') {\n                    y += ((endY - startY) / 2 - (text.length * labelSize.height) / 2);\n                }\n                else if (multiLevel.alignment === 'Far') {\n                    y = isInversed ? endY - labelSize.height / 2 : y - labelSize.height;\n                }\n                else {\n                    y = isInversed ? y + labelSize.height / 2 : endY + labelSize.height;\n                }\n                if (multiLevel.border.width > 0 && multiLevel.border.type !== 'WithoutBorder') {\n                    pathRect = _this.renderYAxisLabelBorder(level, axis, startX, startY, endY, pathRect, level, labelSize, gap, y);\n                }\n                var textBasic = new TextBasic(x, y, 'start', categoryLabel.text, 0, 'translate(0,0)');\n                var options = new TextOption(_this.heatMap.element.id + '_YAxis_MultiLevel' + level + '_Text' + i, textBasic, multiLevel.textStyle, multiLevel.textStyle.color || _this.heatMap.themeStyle.axisLabel);\n                options.text = text;\n                _this.drawSvgCanvas.createText(options, labelElement, options.text);\n                if (options.text.indexOf('...') !== -1) {\n                    _this.heatMap.tooltipCollection.push(new CanvasTooltip(categoryLabel.text, new Rect(x, y - labelSize.height, gap, labelSize.height)));\n                }\n                if (!_this.heatMap.enableCanvasRendering) {\n                    parent.appendChild(labelElement);\n                }\n            });\n            if (pathRect !== '') {\n                _this.createBorderElement(level, axis, pathRect, parent);\n                pathRect = '';\n            }\n        });\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(labelElement);\n        }\n    };\n    /**\n     * render x axis multi level labels border\n     *\n     * @private\n     * @returns {void}\n     */\n    AxisHelper.prototype.renderYAxisLabelBorder = function (labelIndex, axis, startX, startY, endY, path, level, labelSize, gap, y) {\n        var padding = 20;\n        var path1;\n        var path2;\n        var endX = startX - (axis.opposedPosition ? -(axis.multiLevelSize[labelIndex].width + padding) :\n            (axis.multiLevelSize[labelIndex].width + padding));\n        switch (axis.multiLevelLabels[level].border.type) {\n            case 'Rectangle':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ';\n                break;\n            case 'WithoutTopBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'L' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n            case 'WithoutBottomBorder':\n                path += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + startY + ' ' +\n                    'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'WithoutTopandBottomBorder':\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' +\n                    'M' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n                break;\n            case 'Brace':\n                padding = 10;\n                path1 = axis.isInversed ? (y - padding - 5) : (y + (labelSize.height) - padding);\n                path2 = axis.isInversed ? (y + (labelSize.height) - padding) : (y - padding - 5);\n                path += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + startY + ' ' +\n                    'L' + ' ' + (startX + (endX - startX) / 2) + ' ' + path1 + ' ' + 'M' + ' ' + (startX + (endX - startX) / 2) +\n                    ' ' + path2 + ' ' + 'L' + ' ' + (startX + (endX - startX) / 2) + ' ' +\n                    endY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ';\n                break;\n        }\n        return path;\n    };\n    /**\n     * create borer element\n     *\n     * @returns {void}\n     * @private\n     */\n    AxisHelper.prototype.createBorderElement = function (borderIndex, axis, path, parent) {\n        var canvasTranslate;\n        var id = axis.orientation === 'Horizontal' ? 'XAxis' : 'YAxis';\n        var pathOptions = new PathOption(this.heatMap.element.id + '_' + id + '_MultiLevel_Rect_' + borderIndex, 'Transparent', axis.multiLevelLabels[borderIndex].border.width, axis.multiLevelLabels[borderIndex].border.color, 1, '', path);\n        var borderElement = this.heatMap.renderer.drawPath(pathOptions);\n        if (!this.heatMap.enableCanvasRendering) {\n            parent.appendChild(borderElement);\n        }\n        else {\n            this.heatMap.canvasRenderer.drawPath(pathOptions, canvasTranslate);\n        }\n    };\n    /**\n     * calculate left position of border element\n     *\n     * @private\n     */\n    AxisHelper.prototype.calculateLeftPosition = function (axis, start, label, rect) {\n        var value;\n        var interval;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                start -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * start * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(start, axis, true, rect);\n            value = axis.isInversed ? -interval : interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    /**\n     * calculate width of border element\n     *\n     * @private\n     */\n    AxisHelper.prototype.calculateWidth = function (axis, label, end, rect) {\n        var interval;\n        var value;\n        if (typeof label === 'number') {\n            if (axis.valueType === 'Numeric' && (axis.minimum || axis.maximum)) {\n                var min = axis.minimum ? axis.minimum : 0;\n                end -= min;\n            }\n            var size = axis.orientation === 'Horizontal' ? rect.width : rect.height;\n            interval = size / (axis.axisLabelSize * axis.increment);\n            value = (axis.isInversed ? -1 : 1) * (end + 1) * interval;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        else {\n            interval = this.calculateNumberOfDays(end, axis, false, rect);\n            value = interval;\n            value = axis.isInversed ? -value : value;\n            value = axis.orientation === 'Horizontal' ? value : -value;\n        }\n        return value;\n    };\n    AxisHelper.prototype.calculateNumberOfDays = function (date, axis, start, rect) {\n        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n        var oneMinute = 60 * 1000;\n        var firstDate;\n        var secondDate;\n        var labels = axis.labelValue;\n        var position;\n        var interval = (axis.orientation === 'Horizontal' ? rect.width : rect.height) / axis.axisLabelSize;\n        var givenDate = new Date(Number(date));\n        var days = 0;\n        for (var index = 0; index < axis.axisLabelSize; index++) {\n            firstDate = new Date(Number(labels[index]));\n            secondDate = axis.isInversed ? new Date(Number(labels[index - 1])) : new Date(Number(labels[index + 1]));\n            if (index === (axis.isInversed ? 0 : axis.axisLabelSize - 1)) {\n                secondDate = new Date(Number(labels[index]));\n                if (axis.intervalType === 'Hours') {\n                    secondDate = new Date(Number(secondDate.setHours(secondDate.getHours() + 1)));\n                }\n                else if ((axis.intervalType === 'Minutes')) {\n                    secondDate = new Date(Number(secondDate.setMinutes(secondDate.getMinutes() + 1)));\n                }\n                else if ((axis.intervalType === 'Days')) {\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + 1)));\n                }\n                else {\n                    var numberOfDays = axis.intervalType === 'Months' ?\n                        new Date(secondDate.getFullYear(), secondDate.getMonth() + 1, 0).getDate() :\n                        secondDate.getFullYear() % 4 === 0 ? 366 : 365;\n                    secondDate = new Date(Number(secondDate.setDate(secondDate.getDate() + numberOfDays)));\n                }\n            }\n            if (Number(firstDate) <= date && Number(secondDate) >= date) {\n                if (axis.intervalType === 'Minutes' || axis.intervalType === 'Hours') {\n                    var totalMinutes = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneMinute)));\n                    var minutesInHours = Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneMinute));\n                    days = (interval / totalMinutes) * minutesInHours;\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n                else {\n                    var numberOfDays = Math.round(Math.abs((firstDate.getTime() - secondDate.getTime()) / (oneDay)));\n                    // eslint-disable-next-line\n                    start ? givenDate.getDate() : givenDate.setDate(givenDate.getDate() + 1);\n                    if (numberOfDays !== 0) {\n                        days = (interval / numberOfDays) * (Math.abs((firstDate.getTime() - givenDate.getTime()) / (oneDay)));\n                    }\n                    index = axis.isInversed ? axis.axisLabelSize - 1 - index : index;\n                    position = index * interval + days;\n                    break;\n                }\n            }\n        }\n        return position;\n    };\n    return AxisHelper;\n}());\nexport { AxisHelper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, extend, merge, Complex, Browser, isNullOrUndefined, createElement } from '@syncfusion/ej2-base';\nimport { Rect, TextBasic, Path, PathAttributes, RectOption, CircleOption, TextOption, CurrentRect, DrawSvgCanvas, createLabelTemplate } from '../utils/helper';\nimport { convertHexToColor, colorNameToHex, formatValue, removeElement } from '../utils/helper';\nimport { CellColor } from '../utils/colorMapping';\nimport { Border, Font, BubbleTooltipData, BubbleSize } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to configure the cells of the heatmap.\n */\nvar CellSettings = /** @class */ (function (_super) {\n    __extends(CellSettings, _super);\n    function CellSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"labelTemplate\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property('')\n    ], CellSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(true)\n    ], CellSettings.prototype, \"enableCellHighlighting\", void 0);\n    __decorate([\n        Complex({}, BubbleSize)\n    ], CellSettings.prototype, \"bubbleSize\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], CellSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.rectLabelFont, Font)\n    ], CellSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('Rect')\n    ], CellSettings.prototype, \"tileType\", void 0);\n    __decorate([\n        Property('Color')\n    ], CellSettings.prototype, \"bubbleType\", void 0);\n    __decorate([\n        Property(false)\n    ], CellSettings.prototype, \"isInversedBubbleSize\", void 0);\n    return CellSettings;\n}(ChildProperty));\nexport { CellSettings };\nvar Series = /** @class */ (function () {\n    function Series(heatMap) {\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(this.heatMap);\n        this.cellColor = new CellColor(this.heatMap);\n    }\n    /**\n     * To render rect series.\n     *\n     * @returns {void}\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    Series.prototype.renderRectSeries = function () {\n        this.createSeriesGroup();\n        var heatMap = this.heatMap;\n        var isValueInRange = false;\n        heatMap.xLength = heatMap.axisCollections[0].axisLabelSize;\n        heatMap.yLength = heatMap.axisCollections[1].axisLabelSize; // Series Part\n        var tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n        var tempY = Math.round(heatMap.initialClipRect.y * 100) / 100;\n        var dataXIndex = 0;\n        var dataYIndex = 0;\n        var cellSetting = heatMap.cellSettings;\n        var tempWidth = Math.round(((heatMap.initialClipRect.width -\n            (cellSetting.border.width / 2)) / heatMap.xLength) * 100) / 100;\n        var tempHeight = Math.round(((heatMap.initialClipRect.height -\n            (cellSetting.border.width / 2)) / heatMap.yLength) * 100) / 100;\n        var tempVal = 0;\n        var tempRectPosition = [];\n        var tempBorder = cellSetting.border;\n        var borderColor;\n        var templateElement = null;\n        var displayText;\n        this.rectPositionCollection = [];\n        this.color = '';\n        this.bubbleColorValue = [];\n        if (heatMap.yAxis.opposedPosition) {\n            tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n        }\n        if (!isNullOrUndefined(this.heatMap.cellSettings.labelTemplate) && this.heatMap.cellSettings.labelTemplate !== '') {\n            if (document.getElementById(this.heatMap.element.id + '_LabelTemplate_Group')) {\n                removeElement(this.heatMap.element.id + '_LabelTemplate_Group');\n            }\n            templateElement = createElement('div', {\n                id: heatMap.element.id + '_LabelTemplate_Group'\n            });\n        }\n        var circleRadius = this.getBubbleRadius(tempWidth, tempHeight);\n        for (var x = 0; x < (heatMap.xLength * heatMap.yLength); x++) {\n            if (heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataYIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataYIndex];\n            }\n            else if (heatMap.paletteSettings.colorGradientMode === 'Row' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataSourceMinValue = this.heatMap.dataMin[dataXIndex];\n                this.heatMap.dataSourceMaxValue = this.heatMap.dataMax[dataXIndex];\n            }\n            this.setTextAndColor(dataXIndex, dataYIndex);\n            var rectPosition = new CurrentRect(0, 0, 0, 0, 0, '', 0, 0, 0, 0, true, '', '', true);\n            borderColor = tempBorder.color;\n            if (this.heatMap.bubbleSizeWithColor) {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, extend('', this.bubbleColorValue, null, true), x, dataYIndex, dataXIndex);\n            }\n            else {\n                this.updateRectDetails(rectPosition, tempX, tempY, tempWidth, tempHeight, this.text, x, dataYIndex, dataXIndex);\n            }\n            if (cellSetting.showLabel) {\n                if (isNullOrUndefined(this.heatMap.cellSettings.labelTemplate) || this.heatMap.cellSettings.labelTemplate === '') {\n                    displayText = this.getFormatedText(this.text, cellSetting.format);\n                }\n                else {\n                    var rectValue = heatMap.dataSourceSettings.bubbleDataMapping && heatMap.dataSourceSettings.isJsonData && heatMap.dataSourceSettings.adaptorType === 'Cell' && !isNullOrUndefined(rectPosition.value[0]) ? rectPosition.value[0].bubbleData : rectPosition.value;\n                    if (typeof rectValue == 'number' && this.cellColor.getColorByValue(rectValue) !== '#ffffff') {\n                        createLabelTemplate(this.heatMap.cellSettings.labelTemplate, heatMap, templateElement, rectPosition, heatMap.axisCollections[0].axisLabels, heatMap.axisCollections[1].axisLabels.slice().reverse(), x);\n                    }\n                }\n            }\n            else {\n                displayText = '';\n            }\n            rectPosition.displayText = displayText;\n            if (!isNullOrUndefined(this.heatMap.cellRender)) {\n                displayText = this.cellRendering(rectPosition, displayText);\n            }\n            if ((heatMap.renderingMode === 'Canvas' && parseFloat(tempBorder.width.toString()) === 0) || (!borderColor &&\n                cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                borderColor = this.color;\n            }\n            if (cellSetting.tileType === 'Rect') { // Rectangle/Tile Series\n                this.renderTileCell(rectPosition, tempBorder, x, this.color, borderColor);\n                this.updateLabelVisibleStatus(tempWidth, tempHeight, displayText);\n            }\n            else {\n                if (cellSetting.bubbleType === 'Color') { // Bubble by same size and different color Series\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, circleRadius);\n                    this.updateLabelVisibleStatus((circleRadius * 2) - 12, (circleRadius * 2) - 6, displayText); // 6, 12 - circle padding\n                }\n                else if (!isNullOrUndefined(this.text) && (cellSetting.bubbleType === 'Size' || cellSetting.bubbleType === 'SizeAndColor')\n                    && this.text.toString() !== '') { // Bubble by same color and different size Series\n                    if (this.heatMap.paletteSettings.colorGradientMode !== 'Table' && this.heatMap.paletteSettings.type === 'Gradient') {\n                        this.heatMap.minColorValue = !isFinite(this.heatMap.minColorValue) ?\n                            this.heatMap.dataSourceMinValue : this.heatMap.minColorValue;\n                        this.heatMap.maxColorValue = !isFinite(this.heatMap.maxColorValue) ?\n                            this.heatMap.dataSourceMaxValue : this.heatMap.maxColorValue;\n                    }\n                    var tempCircleRadius = this.getRadiusBypercentage(parseFloat(this.text.toString()), heatMap.dataSourceMinValue, heatMap.dataSourceMaxValue, circleRadius);\n                    this.renderBubbleCell(rectPosition, tempBorder, x, this.color, borderColor, tempCircleRadius);\n                    this.updateLabelVisibleStatus((tempCircleRadius * 2) - 12, (tempCircleRadius * 2) - 6, displayText);\n                }\n                else if (cellSetting.bubbleType === 'Sector' && !isNullOrUndefined(this.text) && this.text.toString() !== '') {\n                    this.renderSectorCell(rectPosition, tempBorder, x.toString(), this.color, borderColor, circleRadius, this.text);\n                    this.checkLabelXDisplay = false;\n                    this.checkLabelYDisplay = false;\n                }\n            }\n            tempRectPosition.push(rectPosition);\n            if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                isValueInRange = this.isCellValueInRange(dataXIndex, dataYIndex);\n                rectPosition.visible = isValueInRange;\n            }\n            if (cellSetting.showLabel && this.checkLabelYDisplay && this.checkLabelXDisplay) {\n                var themeCellTextStyle = cellSetting.textStyle;\n                var options = new TextOption(heatMap.element.id + '_HeatMapRectLabels_' + x, new TextBasic(Math.round((tempX + tempWidth / 2) * 100) / 100, Math.round((tempY + tempHeight / 2) * 100) / 100, 'middle', displayText, null, null, 'middle'), themeCellTextStyle, themeCellTextStyle.color || this.getSaturatedColor(this.color));\n                rectPosition.textId = options.id;\n                if (heatMap.rangeSelection && heatMap.paletteSettings.type === 'Fixed') {\n                    options.fill = isValueInRange ? options.fill : this.heatMap.themeStyle.toggledColor;\n                }\n                if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                    options.dy = this.heatMap.cellSettings.tileType === 'Bubble' ? '0.5ex' : '1ex';\n                }\n                this.drawSvgCanvas.createText(options, this.containerTextObject, displayText);\n            }\n            if (tempVal === heatMap.xLength - 1) {\n                tempY = Math.round((tempY + tempHeight) * 100) / 100;\n                tempVal = 0;\n                dataYIndex = 0;\n                if (heatMap.yAxis.opposedPosition) {\n                    tempX = Math.round((heatMap.initialClipRect.x + (parseFloat(tempBorder.width.toString()) / 2)) * 100) / 100;\n                }\n                else {\n                    tempX = Math.round(heatMap.initialClipRect.x * 100) / 100;\n                }\n                this.rectPositionCollection.push(tempRectPosition);\n                tempRectPosition = [];\n                dataXIndex++;\n            }\n            else {\n                tempX = Math.round((tempX + tempWidth) * 100) / 100;\n                tempVal++;\n                dataYIndex++;\n            }\n        }\n        if (!isNullOrUndefined(templateElement)) {\n            document.getElementById(this.heatMap.element.id + '_Secondary_Element').appendChild(templateElement);\n        }\n        if (!heatMap.enableCanvasRendering) {\n            heatMap.svgObject.appendChild(this.containerRectObject);\n            if (cellSetting.showLabel && !(cellSetting.tileType === 'Bubble' && cellSetting.bubbleType === 'Sector')) {\n                heatMap.svgObject.appendChild(this.containerTextObject);\n            }\n        }\n    };\n    /**\n     * To toggle the cell text color based on legend selection.\n     */\n    Series.prototype.isCellValueInRange = function (dataXIndex, dataYIndex) {\n        var isValueInRange = false;\n        for (var i = 0; i < this.heatMap.toggleValue.length; i++) {\n            var maxValue = void 0;\n            var minValue = (i === 0) && !this.heatMap.isColorRange ? this.heatMap.dataSourceMinValue :\n                this.heatMap.isColorRange ?\n                    this.heatMap.toggleValue[i].startValue : this.heatMap.toggleValue[i].value;\n            if (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor') {\n                maxValue = (i === this.heatMap.toggleValue.length - 1) ? this.heatMap.maxColorValue :\n                    this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            else {\n                maxValue = (i === this.heatMap.toggleValue.length - 1 && !this.heatMap.isColorRange) ?\n                    this.heatMap.dataSourceMaxValue : this.heatMap.isColorRange ?\n                    this.heatMap.toggleValue[i].endValue : this.heatMap.toggleValue[i + 1].value - 0.01;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var clonedDataSource = this.heatMap.clonedDataSource;\n            var bubbleText = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '';\n            var text = parseFloat(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'SizeAndColor' ?\n                bubbleText.toString() : this.text.toString());\n            if (isNaN(text)) {\n                isValueInRange = true;\n            }\n            else if (!isNaN(text) && text >= minValue && text <= maxValue) {\n                if (!this.heatMap.toggleValue[i].visible) {\n                    isValueInRange = false;\n                    break;\n                }\n                else {\n                    isValueInRange = true;\n                    break;\n                }\n            }\n            else if (this.heatMap.isColorRange &&\n                maxValue >= this.heatMap.toggleValue[i].endValue && i === this.heatMap.toggleValue.length - 1) {\n                isValueInRange = true;\n                break;\n            }\n        }\n        return isValueInRange;\n    };\n    /**\n     * To customize the cell.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.cellRendering = function (rectPosition, text) {\n        var xAxis = this.heatMap.axisCollections[0];\n        var yAxis = this.heatMap.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var yLabelValue = yAxis.labelValue.slice().reverse();\n        var argData = {\n            heatmap: this.heatMap,\n            cancel: false,\n            name: 'cellRender',\n            value: rectPosition.value,\n            xLabel: xLabels[rectPosition.xIndex].toString(),\n            yLabel: yLabels[rectPosition.yIndex].toString(),\n            displayText: text,\n            xValue: xAxis.labelValue[rectPosition.xIndex],\n            yValue: yLabelValue[rectPosition.yIndex],\n            cellColor: this.color\n        };\n        this.heatMap.trigger('cellRender', argData);\n        this.color = argData.cellColor;\n        return argData.displayText;\n    };\n    /**\n     * To set color and text details.\n     *\n     * @private\n     */\n    Series.prototype.setTextAndColor = function (dataXIndex, dataYIndex) {\n        this.bubbleColorValue = [];\n        var adaptData = this.heatMap.dataSourceSettings;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var clonedDataSource = this.heatMap.clonedDataSource;\n        if (this.heatMap.bubbleSizeWithColor) {\n            this.text = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][0]) &&\n                clonedDataSource[dataXIndex][dataYIndex][0].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][0] : '';\n            this.color = !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ?\n                this.cellColor.getColorByValue(clonedDataSource[dataXIndex][dataYIndex][1])\n                : this.heatMap.isColorValueExist ? this.heatMap.emptyPointColor : this.cellColor.getColorByValue(this.text);\n            var tempBubbleCollection = new BubbleTooltipData(adaptData.isJsonData && adaptData.adaptorType === 'Cell' ? adaptData.bubbleDataMapping.size : null, this.text, 'Size');\n            this.bubbleColorValue.push(tempBubbleCollection);\n            this.bubbleColorValue.push({\n                mappingName: adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                    adaptData.bubbleDataMapping.color : null,\n                bubbleData: !isNullOrUndefined(clonedDataSource[dataXIndex][dataYIndex][1]) &&\n                    clonedDataSource[dataXIndex][dataYIndex][1].toString() !== '' ? clonedDataSource[dataXIndex][dataYIndex][1] : '',\n                valueType: 'Color'\n            });\n        }\n        else {\n            this.text = clonedDataSource[dataXIndex][dataYIndex];\n            this.color = this.cellColor.getColorByValue(this.text);\n        }\n    };\n    /**\n     * To update rect details.\n     *\n     * @private\n     */\n    Series.prototype.createSeriesGroup = function () {\n        if (!this.heatMap.enableCanvasRendering) {\n            this.containerRectObject = this.heatMap.renderer.createGroup({\n                id: this.heatMap.element.id + '_Container_RectGroup'\n            });\n            if (this.heatMap.cellSettings.showLabel &&\n                !(this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Sector')) {\n                this.containerTextObject = this.heatMap.renderer.createGroup({ id: this.heatMap.element.id + '_Container_TextGroup', transform: 'translate( 0, 0)' });\n            }\n        }\n    };\n    /**\n     * To update rect details.\n     *\n     * @private\n     */\n    Series.prototype.updateRectDetails = function (rectPosition, tempX, tempY, tempWidth, tempHeight, text, x, dataXIndex, dataYIndex) {\n        rectPosition.x = tempX;\n        rectPosition.y = tempY;\n        rectPosition.width = tempWidth;\n        rectPosition.height = tempHeight;\n        rectPosition.value = text;\n        rectPosition.id = this.heatMap.element.id + '_HeatMapRect_' + x;\n        rectPosition.xIndex = dataXIndex;\n        rectPosition.yIndex = dataYIndex;\n    };\n    /**\n     * To Render Tile Cell.\n     *\n     * @private\n     */\n    Series.prototype.renderTileCell = function (rectPosition, tempBorder, x, color, borderColor) {\n        var rect = new RectOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, new Rect(rectPosition.x, rectPosition.y, rectPosition.width, rectPosition.height), borderColor || this.heatMap.themeStyle.cellBorder, tempBorder.radius, tempBorder.radius);\n        this.drawSvgCanvas.drawRectangle(rect, this.containerRectObject, true);\n    };\n    /**\n     * To get bubble radius.\n     *\n     * @private\n     */\n    Series.prototype.getBubbleRadius = function (width, height) {\n        var radius = (width / 2) - 2;\n        if (height / 2 < width / 2) {\n            radius = (height / 2) - 2;\n        }\n        return radius < 0 ? 0 : radius;\n    };\n    /**\n     * To Render Bubble Cell.\n     *\n     * @private\n     */\n    Series.prototype.renderSectorCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius, text) {\n        var curve;\n        var startAngle;\n        var endAngle;\n        var cX;\n        var cY;\n        var X1;\n        var Y1;\n        var tempcX;\n        var tempcY;\n        var pathBorderWidth;\n        var centerX = Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100;\n        var centerY = Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100;\n        var tempColor = color;\n        var sectorContibution = this.getRadiusBypercentage(text, this.heatMap.dataSourceMinValue, this.heatMap.dataSourceMaxValue, 360); // Circle total angle.\n        for (var y = 0; y < 2; y++) {\n            pathBorderWidth = parseFloat(tempBorder.width.toString());\n            if (y === 0) {\n                curve = sectorContibution >= 180 ? 1 : 0;\n                startAngle = -90;\n                if (sectorContibution === 0) {\n                    endAngle = 270; // (360 - 90) for zero position adjustment.\n                }\n                else {\n                    endAngle = (sectorContibution - 90);\n                }\n                cX = Math.round((centerX + circleRadius * Math.cos((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                cY = Math.round((centerY + circleRadius * Math.sin((sectorContibution - 90) * (Math.PI / 180))) * 100) / 100;\n                X1 = Math.round(centerX * 100) / 100;\n                Y1 = Math.round((centerY - circleRadius) * 100) / 100;\n                if (sectorContibution === 0) {\n                    tempColor = this.heatMap.emptyPointColor;\n                }\n            }\n            else {\n                curve = sectorContibution >= 180 ? 0 : 1;\n                startAngle = endAngle;\n                endAngle = 270; // (360 - 90) for zero position adjustment.\n                tempColor = this.heatMap.emptyPointColor;\n                x = x + '_Unfilled';\n                tempcX = cX;\n                tempcY = cY;\n                cX = X1;\n                cY = Y1;\n                X1 = tempcX;\n                Y1 = tempcY;\n                if (sectorContibution === 0) {\n                    pathBorderWidth = 1;\n                    borderColor = color;\n                }\n            }\n            var path = new Path('', false, centerX, centerY, X1, Y1, cX, cY, startAngle, endAngle, circleRadius, true);\n            var sector = new PathAttributes(this.heatMap.element.id + '_HeatMapRect_' + x, path, tempColor, tempBorder, pathBorderWidth, 1, borderColor);\n            this.calculateShapes(sector, path, sectorContibution, curve);\n            this.drawSvgCanvas.drawPath(sector, path, this.containerRectObject);\n            if (sectorContibution === 360) {\n                break;\n            }\n        }\n    };\n    /**\n     * To Render sector Cell.\n     *\n     * @private\n     */\n    Series.prototype.calculateShapes = function (options, path, sectorContibution, curve) {\n        var pathString;\n        switch (sectorContibution) {\n            case 360:\n            case 0:\n                if (sectorContibution === 0 && path.start === path.end) {\n                    pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x + ' ' + (path.y - path.radius);\n                }\n                else {\n                    pathString = !this.heatMap.enableCanvasRendering ? 'M' + ' ' + options.x + ' ' + options.y + ' ' : '';\n                    pathString = pathString + 'm' + ' ' + (-path.radius) + ' ' + '0' + ' ' +\n                        'a' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (path.radius * 2) + ' ' + '0' + ' ' + 'a' + ' ' + path.radius +\n                        ' ' + path.radius + ' ' + '0' + ' ' + '1' + ' ' + '0' +\n                        ' ' + (-(path.radius * 2)) + ' ' + '0' + ' ';\n                }\n                merge(options, { 'd': pathString });\n                break;\n            default:\n                pathString = 'M' + ' ' + options.x + ' ' + options.y + ' ' + 'L' + ' ' + path.x1 + ' ' + path.y1 + ' ' +\n                    'A' + ' ' + path.radius + ' ' + path.radius + ' ' + '0' + ' ' + curve + ' ' + '1' + ' ' +\n                    path.cx + ' ' + path.cy + ' ' + 'Z';\n                merge(options, { 'd': pathString });\n                break;\n        }\n    };\n    /**\n     * To Render Bubble Cell.\n     *\n     * @private\n     */\n    Series.prototype.renderBubbleCell = function (bubblePosition, tempBorder, x, color, borderColor, circleRadius) {\n        var circle = new CircleOption(this.heatMap.element.id + '_HeatMapRect_' + x, color, tempBorder, 1, borderColor || this.heatMap.themeStyle.cellBorder, Math.round((bubblePosition.x + (bubblePosition.width / 2)) * 100) / 100, Math.round((bubblePosition.y + (bubblePosition.height / 2)) * 100) / 100, circleRadius);\n        this.drawSvgCanvas.drawCircle(circle, this.containerRectObject);\n    };\n    /**\n     * To find whether the X,Y Label need to display or not.\n     *\n     * @private\n     */\n    Series.prototype.updateLabelVisibleStatus = function (tempWidth, tempHeight, displayText) {\n        if (this.heatMap.cellSettings.showLabel && (isNullOrUndefined(this.heatMap.cellSettings.labelTemplate) || this.heatMap.cellSettings.labelTemplate === '')) {\n            this.checkLabelYDisplay = tempHeight > parseInt(this.heatMap.cellSettings.textStyle.size, 10) ? true : false;\n            this.checkLabelXDisplay = tempWidth > (displayText.length *\n                (parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2)) ? true : false;\n        }\n    };\n    /**\n     * To find percentage value.\n     *\n     * @private\n     */\n    Series.prototype.getRadiusBypercentage = function (text, min, max, radius) {\n        var minimum = parseInt(this.heatMap.cellSettings.bubbleSize.minimum, 10);\n        var maximum = parseInt(this.heatMap.cellSettings.bubbleSize.maximum, 10);\n        if (minimum < 0 || minimum > 100 || isNaN(minimum)) {\n            minimum = 0;\n        }\n        if (maximum < 0 || maximum > 100 || isNaN(maximum)) {\n            maximum = 100;\n        }\n        var valueInPrecentage = ((text - min) /\n            (max - min)) * 100;\n        valueInPrecentage = isNaN(valueInPrecentage) ? 100 : valueInPrecentage;\n        if ((this.heatMap.bubbleSizeWithColor ||\n            (this.heatMap.cellSettings.tileType === 'Bubble' && this.heatMap.cellSettings.bubbleType === 'Size'))) {\n            if (this.heatMap.cellSettings.isInversedBubbleSize) {\n                valueInPrecentage = 100 - valueInPrecentage;\n            }\n            valueInPrecentage = ((valueInPrecentage * (maximum - minimum)) / 100) + minimum;\n        }\n        radius = radius * (valueInPrecentage / 100);\n        return (Math.round(radius * 100) / 100) < 0 ? 0 : (Math.round(radius * 100) / 100);\n    };\n    /**\n     * To find saturated color for datalabel.\n     *\n     * @returns {string}\n     * @private\n     */\n    Series.prototype.getSaturatedColor = function (color) {\n        var saturatedColor = color;\n        saturatedColor = (saturatedColor === 'transparent') ? window.getComputedStyle(document.body, null).backgroundColor : saturatedColor;\n        var rgbValue = convertHexToColor(colorNameToHex(saturatedColor));\n        var contrast = Math.round((rgbValue.R * 299 + rgbValue.G * 587 + rgbValue.B * 114) / 1000);\n        return contrast >= 128 ? 'black' : 'white';\n    };\n    /**\n     * To highlight the mouse hovered rect cell.\n     *\n     * @returns {void}\n     * @private\n     */\n    Series.prototype.highlightSvgRect = function (tempID) {\n        if (tempID.indexOf('Celltooltip') === -1) {\n            if (tempID.indexOf('_HeatMapRect') !== -1) {\n                if (tempID.indexOf('_HeatMapRectLabels_') !== -1) {\n                    var tempIndex = tempID.indexOf('_HeatMapRectLabels_') + 19;\n                    tempID = this.heatMap.element.id + '_HeatMapRect_' + tempID.slice(tempIndex);\n                }\n                var element = document.getElementById(tempID);\n                if (this.heatMap.tempRectHoverClass !== tempID) {\n                    if (this.heatMap.cellSettings.enableCellHighlighting) {\n                        var oldElement = void 0;\n                        if (this.heatMap.tempRectHoverClass) {\n                            oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                        }\n                        if (oldElement && !this.heatMap.rectSelected) {\n                            oldElement.setAttribute('opacity', '1');\n                        }\n                        if (element && !this.heatMap.rectSelected) {\n                            element.setAttribute('opacity', '0.65');\n                        }\n                    }\n                    this.heatMap.tempRectHoverClass = tempID;\n                }\n            }\n            else {\n                if (this.heatMap.cellSettings.enableCellHighlighting) {\n                    var oldElement = void 0;\n                    if (this.heatMap.tempRectHoverClass) {\n                        oldElement = document.getElementById(this.heatMap.tempRectHoverClass);\n                    }\n                    if (oldElement && !this.heatMap.rectSelected) {\n                        oldElement.setAttribute('opacity', '1');\n                        this.heatMap.tempRectHoverClass = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To get the value depends to format.\n     *\n     * @returns {string}\n     * @private\n     */\n    Series.prototype.getFormatedText = function (val, getFormat) {\n        var format = getFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = this.heatMap.intl.getNumberFormat({\n            format: isCustom ? '' : format\n        });\n        var value = '';\n        if (val.toString() !== '') {\n            value = formatValue(isCustom, format, val, this.format);\n        }\n        return value;\n    };\n    /**\n     * To get mouse hovered cell details.\n     *\n     * @returns {CurrentRect}\n     * @private\n     */\n    Series.prototype.getCurrentRect = function (x, y) {\n        var currentRect;\n        var firstRectDetails = [];\n        firstRectDetails.push(this.heatMap.heatMapSeries.rectPositionCollection[0][0]);\n        var rectX = Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) <\n            this.heatMap.axisCollections[0].axisLabelSize ?\n            Math.ceil((x - firstRectDetails[0].x) / firstRectDetails[0].width) :\n            this.heatMap.axisCollections[0].axisLabelSize;\n        var rectY = Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) <\n            this.heatMap.axisCollections[1].axisLabelSize ?\n            Math.floor(((y - firstRectDetails[0].y) / firstRectDetails[0].height)) :\n            this.heatMap.axisCollections[1].axisLabelSize - 1;\n        rectX = rectX === 0 ? 1 : rectX;\n        // eslint-disable-next-line prefer-const\n        currentRect = this.heatMap.heatMapSeries.rectPositionCollection[rectY][rectX - 1];\n        this.hoverXAxisLabel = this.heatMap.axisCollections[0].tooltipLabels[rectX - 1];\n        this.hoverXAxisValue = this.heatMap.axisCollections[0].labelValue[rectX - 1];\n        this.hoverYAxisLabel = this.heatMap.axisCollections[1].tooltipLabels[(this.heatMap.axisCollections[1].tooltipLabels.length - 1) - rectY];\n        this.hoverYAxisValue = this.heatMap.axisCollections[1].labelValue[(this.heatMap.axisCollections[1].labelValue.length - 1) - rectY];\n        return currentRect;\n    };\n    return Series;\n}());\nexport { Series };\n","/**\n * HeatMap tool tip file\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { createElement, Property, Complex, ChildProperty, isNullOrUndefined, select } from '@syncfusion/ej2-base';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\nimport { TooltipBorder, Font } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Sets and gets the options to customize the tooltip in heatmap.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({}, TooltipBorder)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex(Theme.tooltipFont, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n/**\n *\n * The `Tooltip` module is used to render the tooltip for heatmap series.\n */\nvar Tooltip = /** @class */ (function () {\n    function Tooltip(heatMap) {\n        /* private */\n        this.isFirst = true;\n        /* private */\n        this.isFadeout = false;\n        this.heatMap = heatMap;\n    }\n    /**\n     * Get module name\n     */\n    Tooltip.prototype.getModuleName = function () {\n        return 'Tooltip';\n    };\n    /**\n     * To show/hide Tooltip.\n     *\n     * @private\n     */\n    Tooltip.prototype.showHideTooltip = function (isShow, isFadeout) {\n        var ele = document.getElementById(this.heatMap.element.id + 'Celltooltipcontainer');\n        if (!isShow) {\n            if (ele && ele.style.visibility !== 'hidden') {\n                if (this.tooltipObject && isFadeout && this.heatMap.isRectBoundary) {\n                    this.tooltipObject.fadeOut();\n                }\n                else {\n                    if (this.tooltipObject && this.tooltipObject.element) {\n                        var tooltipElement = this.tooltipObject.element.firstChild;\n                        tooltipElement.setAttribute('opacity', '0');\n                    }\n                }\n                ele.style.visibility = 'hidden';\n            }\n            this.isFadeout = true;\n        }\n        else {\n            ele.style.visibility = 'visible';\n        }\n    };\n    /**\n     * To destroy the Tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * To add Tooltip to the rect cell.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltip = function (currentRect, x, y, tempTooltipText) {\n        var offset = null;\n        var element = select('#' + this.heatMap.element.id + 'Celltooltipcontainer');\n        if (this.heatMap.cellSettings.showLabel && this.heatMap.heatMapSeries.checkLabelXDisplay &&\n            this.heatMap.heatMapSeries.checkLabelYDisplay) {\n            offset = parseInt(this.heatMap.cellSettings.textStyle.size, 10) / 2;\n        }\n        if (this.heatMap.theme === 'Tailwind') {\n            this.heatMap.setProperties({ tooltipSettings: { textStyle: { size: '12px', fontFamily: 'Inter', fontWeight: '500' } } }, true);\n        }\n        if (this.heatMap.theme === 'TailwindDark') {\n            this.heatMap.setProperties({ tooltipSettings: { fill: '#F9FAFB', textStyle: { size: '12px', fontFamily: 'Inter', fontWeight: '500', color: '#1F2937' } } }, true);\n        }\n        if (this.heatMap.theme === 'Bootstrap5') {\n            this.heatMap.setProperties({ tooltipSettings: { textStyle: { size: '14px', fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"', fontWeight: '500' } } }, true);\n        }\n        if (this.heatMap.theme === 'Bootstrap5Dark') {\n            this.heatMap.setProperties({ tooltipSettings: { fill: '#E9ECEF', textStyle: { size: '14px', fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"', fontWeight: '500', color: '#212529' } } }, true);\n        }\n        if (this.heatMap.theme === 'Fluent') {\n            this.heatMap.setProperties({ tooltipSettings: { textStyle: { size: '12px', fontFamily: '\"Segoe UI\", -apple-system, BlinkMacSystemFont, \"Roboto\", \"Helvetica Neue\", sans-serif', fontWeight: '500' } } }, true);\n        }\n        if (this.heatMap.theme === 'FluentDark') {\n            this.heatMap.setProperties({ tooltipSettings: { fill: '#252423', textStyle: { size: '12px', fontFamily: '\"Segoe UI\", -apple-system, BlinkMacSystemFont, \"Roboto\", \"Helvetica Neue\", sans-serif', fontWeight: '500', color: '#F3F2F1' } } }, true);\n        }\n        if (this.heatMap.theme === 'Material3') {\n            this.heatMap.setProperties({ tooltipSettings: { fill: '#313033', textStyle: { size: '14px', fontFamily: 'Roboto', fontWeight: '400', color: '#F4EFF4' } } }, true);\n        }\n        if (this.heatMap.theme === 'Material3Dark') {\n            this.heatMap.setProperties({ tooltipSettings: { fill: '#E6E1E5', textStyle: { size: '14px', fontFamily: 'Roboto', fontWeight: '400', color: '#313033' } } }, true);\n        }\n        this.tooltipObject = new tool({\n            opacity: (this.heatMap.theme === 'Tailwind' || this.heatMap.theme === 'TailwindDark' || this.heatMap.theme === 'Bootstrap5' || this.heatMap.theme === 'Bootstrap5Dark' || this.heatMap.theme === 'Fluent' || this.heatMap.theme === 'FluentDark') ? 1 : 0.75,\n            enableAnimation: false,\n            offset: offset,\n            location: { x: x, y: y },\n            availableSize: this.heatMap.availableSize,\n            data: {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                value: currentRect.value,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null\n            },\n            theme: this.heatMap.theme,\n            content: tempTooltipText,\n            fill: this.heatMap.tooltipSettings.fill,\n            template: this.heatMap.tooltipSettings.template === '' ? null : this.heatMap.tooltipSettings.template,\n            border: {\n                width: this.heatMap.tooltipSettings.border.width,\n                color: this.heatMap.tooltipSettings.border.color\n            },\n            textStyle: {\n                size: this.heatMap.tooltipSettings.textStyle.size,\n                fontWeight: this.heatMap.tooltipSettings.textStyle.fontWeight.toLowerCase(),\n                color: this.heatMap.tooltipSettings.textStyle.color,\n                fontStyle: this.heatMap.tooltipSettings.textStyle.fontStyle.toLowerCase(),\n                fontFamily: this.heatMap.tooltipSettings.textStyle.fontFamily\n            },\n            areaBounds: {\n                height: this.heatMap.initialClipRect.height + this.heatMap.initialClipRect.y,\n                width: this.heatMap.initialClipRect.width, x: this.heatMap.initialClipRect.x\n            }\n        }, element);\n    };\n    /**\n     * To create div container for tooltip.\n     *\n     * @returns {void}\n     * @private\n     */\n    Tooltip.prototype.createTooltipDiv = function (heatMap) {\n        var position = 'absolute';\n        var top = heatMap.enableCanvasRendering && heatMap.allowSelection ? heatMap.availableSize.height : 0;\n        var element2 = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipcontainer'\n        });\n        element2.style.cssText = 'position:' + position + '; z-index: 3;top:-' + top + 'px';\n        var tooltipElement = createElement('div', {\n            id: this.heatMap.element.id + 'Celltooltipparent'\n        });\n        tooltipElement.style.position = 'relative';\n        tooltipElement.appendChild(element2);\n        this.heatMap.element.appendChild(tooltipElement);\n    };\n    /**\n     * To get default tooltip content.\n     *\n     * @private\n     */\n    Tooltip.prototype.getTooltipContent = function (currentRect, hetmapSeries) {\n        var value;\n        var content;\n        var heatMap = this.heatMap;\n        var adaptData = this.heatMap.dataSourceSettings;\n        if (heatMap.bubbleSizeWithColor) {\n            var xAxis = heatMap.xAxis.title && heatMap.xAxis.title.text !== '' ? heatMap.xAxis.title.text : 'X-Axis';\n            var yAxis = heatMap.yAxis.title && heatMap.yAxis.title.text !== '' ? heatMap.yAxis.title.text : 'Y-Axis';\n            var value1 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.size : 'Value 1';\n            var value2 = adaptData.isJsonData && adaptData.adaptorType === 'Cell' ?\n                adaptData.bubbleDataMapping.color : 'Value 2';\n            value = hetmapSeries.getFormatedText(currentRect.value[0].bubbleData, this.heatMap.cellSettings.format);\n            content = [xAxis + ' : ' + hetmapSeries.hoverXAxisLabel + '<br/>'\n                    + yAxis + ' : ' + hetmapSeries.hoverYAxisLabel + '<br/>'\n                    + value1 + ' : ' + value + '<br/>'\n                    + value2 + ' : '\n                    + hetmapSeries.getFormatedText(currentRect.value[1].bubbleData, this.heatMap.cellSettings.format)];\n        }\n        else {\n            value = currentRect.value;\n            content = [hetmapSeries.hoverXAxisLabel + ' | ' + hetmapSeries.hoverYAxisLabel + ' : ' +\n                    hetmapSeries.getFormatedText(value, this.heatMap.cellSettings.format)];\n        }\n        return content;\n    };\n    /**\n     * To render tooltip.\n     *\n     * @private\n     */\n    Tooltip.prototype.renderTooltip = function (currentRect) {\n        var _this = this;\n        var hetmapSeries = this.heatMap.heatMapSeries;\n        var tempTooltipText = [''];\n        var showTooltip = this.heatMap.bubbleSizeWithColor ?\n            !isNullOrUndefined(currentRect.value) && !isNullOrUndefined(currentRect.value[0].bubbleData)\n                && currentRect.value[0].bubbleData.toString() !== '' ? true : false\n            : isNullOrUndefined(currentRect.value) || (!isNullOrUndefined(currentRect.value) &&\n                currentRect.value.toString() === '') ? false : true;\n        if (!showTooltip) {\n            this.showHideTooltip(false, false);\n            if (!currentRect.visible) {\n                this.showHideTooltip(false, false);\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.heatMap.tooltipRender)) {\n                // this.tooltipObject.header = '';\n                // this.tooltipObject.content = this.getTemplateText(\n                //     currentRect, this.heatMap.tooltipTemplate, hetmapSeries.hoverXAxisLabel,\n                //     hetmapSeries.hoverYAxisLabel);\n                var content = this.getTooltipContent(currentRect, hetmapSeries);\n                var argData = {\n                    heatmap: this.heatMap,\n                    cancel: false,\n                    name: 'tooltipRender',\n                    value: currentRect.value,\n                    xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                    yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                    xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                    yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                        this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                    content: content\n                };\n                this.heatMap.trigger('tooltipRender', argData, function (observedArgs) {\n                    if (!observedArgs.cancel) {\n                        tempTooltipText = observedArgs.content;\n                        _this.tooltipCallback(currentRect, tempTooltipText);\n                    }\n                    else {\n                        if (_this.tooltipObject) {\n                            _this.showHideTooltip(false);\n                        }\n                    }\n                });\n            }\n            else {\n                //  this.tooltipObject.header = hetmapSeries.hoverYAxisLabel.toString();\n                tempTooltipText = this.getTooltipContent(currentRect, hetmapSeries);\n                this.tooltipCallback(currentRect, tempTooltipText);\n            }\n        }\n    };\n    /**\n     * To render tooltip.\n     */\n    Tooltip.prototype.tooltipCallback = function (currentRect, tempTooltipText) {\n        if (!this.tooltipObject) {\n            this.createTooltip(currentRect, currentRect.x + (currentRect.width / 2), currentRect.y + (currentRect.height / 2), tempTooltipText);\n        }\n        else {\n            this.tooltipObject.content = tempTooltipText;\n            this.tooltipObject.data = {\n                xValue: this.heatMap.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMap.heatMapSeries.hoverYAxisValue,\n                xLabel: this.heatMap.heatMapSeries.hoverXAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverXAxisLabel.toString() : null,\n                yLabel: this.heatMap.heatMapSeries.hoverYAxisLabel ?\n                    this.heatMap.heatMapSeries.hoverYAxisLabel.toString() : null,\n                value: currentRect.value\n            };\n        }\n        this.showHideTooltip(true);\n        this.tooltipObject.enableAnimation = (this.isFirst || this.isFadeout) ? false : true;\n        this.isFirst = (this.isFirst) ? false : this.isFirst;\n        this.isFadeout = (this.isFadeout) ? false : this.isFadeout;\n        this.tooltipObject.location.x = currentRect.x + (currentRect.width / 2);\n        this.tooltipObject.location.y = currentRect.y + (currentRect.height / 2);\n        if (!currentRect.visible) {\n            this.showHideTooltip(false, false);\n        }\n    };\n    return Tooltip;\n}());\nexport { Tooltip };\n","import { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nvar TwoDimensional = /** @class */ (function () {\n    function TwoDimensional(heatMap) {\n        this.heatMap = heatMap;\n    }\n    /**\n     * To reconstruct proper two dimensional dataSource depends on min and max values.\n     *\n     * @private\n     */\n    TwoDimensional.prototype.processDataSource = function (dataSource) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempCloneData = extend([], dataSource, null, true);\n        this.heatMap.clonedDataSource = [];\n        this.completeDataSource = [];\n        var axis = this.heatMap.axisCollections;\n        var dataLength = axis[0].maxLength + 1;\n        var labelLength = axis[0].axisLabelSize + (axis[0].min > 0 ? axis[0].min : 0);\n        var xLength = dataLength > labelLength ? dataLength : labelLength;\n        var minVal;\n        var maxVal;\n        dataLength = axis[1].maxLength + 1;\n        labelLength = axis[1].axisLabelSize + (axis[1].min > 0 ? axis[1].min : 0);\n        var yLength = dataLength > labelLength ? dataLength : labelLength;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempVariable;\n        var cloneDataIndex = 0;\n        var minMaxDatasource = [];\n        this.tempSizeArray = [];\n        this.tempColorArray = [];\n        this.heatMap.minColorValue = null;\n        this.heatMap.maxColorValue = null;\n        this.heatMap.dataMax = [];\n        this.heatMap.dataMin = [];\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && xLength < yLength) {\n            xLength = yLength;\n        }\n        for (var z = axis[1].valueType === 'Category' ? axis[1].min : 0; z < (this.heatMap.paletteSettings.colorGradientMode === 'Column' ? xLength : yLength); z++) {\n            var tempIndex = axis[0].valueType === 'Category' ? axis[0].min : 0;\n            this.completeDataSource.push([]);\n            while (tempIndex < xLength) {\n                if (tempIndex >= axis[0].min && tempIndex <= axis[0].max) {\n                    this.processDataArray(tempCloneData, tempIndex, z, cloneDataIndex);\n                }\n                tempIndex++;\n            }\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                tempVariable = extend([], tempCloneData[cloneDataIndex], null, true);\n                for (var i = 0; i < tempVariable.length; i++) {\n                    if (typeof (tempVariable[i]) === 'object' && (tempVariable[i]) !== null || undefined || '') {\n                        tempVariable[i] = tempVariable[i][0];\n                    }\n                }\n            }\n            else {\n                tempVariable = extend([], this.completeDataSource[cloneDataIndex], null, true);\n            }\n            var minMaxVal = this.getMinMaxValue(minVal, maxVal, tempVariable);\n            if ((this.heatMap.paletteSettings.colorGradientMode === 'Column' ||\n                this.heatMap.paletteSettings.colorGradientMode === 'Row') && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.heatMap.dataMax[z] = minMaxVal[1];\n                this.heatMap.dataMin[z] = minMaxVal[0];\n            }\n            minVal = minMaxVal[0];\n            maxVal = minMaxVal[1];\n            if (this.heatMap.xAxis.isInversed) {\n                this.completeDataSource[cloneDataIndex] = this.completeDataSource[cloneDataIndex].reverse();\n            }\n            if (z >= this.heatMap.axisCollections[1].min && z <= this.heatMap.axisCollections[1].max) {\n                minMaxDatasource.push(this.completeDataSource[cloneDataIndex]);\n            }\n            cloneDataIndex++;\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Row' && !this.heatMap.yAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.xAxis.isInversed &&\n            this.heatMap.paletteSettings.type === 'Gradient') {\n            this.heatMap.dataMax = this.heatMap.dataMax.reverse();\n            this.heatMap.dataMin = this.heatMap.dataMin.reverse();\n        }\n        if (!this.heatMap.yAxis.isInversed) {\n            this.completeDataSource.reverse();\n            minMaxDatasource.reverse();\n        }\n        this.heatMap.clonedDataSource = minMaxDatasource;\n        this.heatMap.dataSourceMinValue = isNullOrUndefined(minVal) ? 0 : parseFloat(minVal.toString());\n        this.heatMap.dataSourceMaxValue = isNullOrUndefined(maxVal) ? 0 : parseFloat(maxVal.toString());\n        this.heatMap.isColorValueExist = isNullOrUndefined(this.heatMap.minColorValue) ? false : true;\n        this.heatMap.minColorValue = isNullOrUndefined(this.heatMap.minColorValue) ?\n            this.heatMap.dataSourceMinValue : parseFloat(this.heatMap.minColorValue.toString());\n        this.heatMap.maxColorValue = isNullOrUndefined(this.heatMap.maxColorValue) ?\n            this.heatMap.dataSourceMaxValue : parseFloat(this.heatMap.maxColorValue.toString());\n    };\n    /**\n     * To process and create a proper data array.\n     *\n     *  @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwoDimensional.prototype.processDataArray = function (tempCloneData, tempIndex, z, cloneDataIndex) {\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (tempCloneData[tempIndex] && !isNullOrUndefined(tempCloneData[tempIndex][z])\n                && typeof (tempCloneData[tempIndex][z]) === 'object') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var internalArray = tempCloneData[tempIndex][z];\n                for (var tempx = 0; tempx < internalArray.length; tempx++) {\n                    if (isNullOrUndefined(internalArray[tempx]) || isNaN(internalArray[tempx])) {\n                        internalArray[tempx] = '';\n                    }\n                    if (tempx === 0) {\n                        this.tempSizeArray.push(internalArray[tempx]);\n                    }\n                    else if (tempx === 1) {\n                        this.tempColorArray.push(internalArray[tempx]);\n                        break;\n                    }\n                }\n                this.completeDataSource[cloneDataIndex].push(internalArray);\n            }\n            else {\n                if (!isNullOrUndefined(tempCloneData[tempIndex]) && (tempCloneData[tempIndex][z] ||\n                    (tempCloneData[tempIndex][z] === 0 &&\n                        tempCloneData[tempIndex][z].toString() !== ''))) {\n                    this.completeDataSource[cloneDataIndex].push([tempCloneData[tempIndex][z]]);\n                    this.tempSizeArray.push(tempCloneData[tempIndex][z]);\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push('');\n                }\n            }\n        }\n        else {\n            if (tempCloneData[tempIndex] && (tempCloneData[tempIndex][z] ||\n                (tempCloneData[tempIndex][z] === 0 &&\n                    tempCloneData[tempIndex][z].toString() !== ''))) {\n                if (typeof (tempCloneData[tempIndex][z]) === 'object') {\n                    if (tempCloneData[tempIndex][z].length > 0 &&\n                        !isNullOrUndefined(tempCloneData[tempIndex][z][0])) {\n                        this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z][0]);\n                    }\n                    else {\n                        this.completeDataSource[cloneDataIndex].push('');\n                    }\n                }\n                else {\n                    this.completeDataSource[cloneDataIndex].push(tempCloneData[tempIndex][z]);\n                }\n            }\n            else {\n                this.completeDataSource[cloneDataIndex].push('');\n            }\n        }\n    };\n    /**\n     * To get minimum and maximum value\n     *\n     *  @private\n     */\n    TwoDimensional.prototype.getMinMaxValue = function (minVal, maxVal, tempVariable) {\n        var minMaxValue = [];\n        if (this.heatMap.bubbleSizeWithColor) {\n            if (this.heatMap.paletteSettings.colorGradientMode === 'Column' && this.heatMap.paletteSettings.type === 'Gradient') {\n                this.tempSizeArray = tempVariable;\n            }\n            minMaxValue.push(this.getMinValue(minVal, this.tempSizeArray));\n            minMaxValue.push(this.getMaxValue(maxVal, this.tempSizeArray));\n            this.heatMap.minColorValue = this.getMinValue(this.heatMap.minColorValue, this.tempColorArray);\n            this.heatMap.maxColorValue = this.getMaxValue(this.heatMap.maxColorValue, this.tempColorArray);\n        }\n        else {\n            minMaxValue.push(this.getMinValue(minVal, tempVariable));\n            minMaxValue.push(this.getMaxValue(maxVal, tempVariable));\n        }\n        return minMaxValue;\n    };\n    /**\n     * To get minimum value\n     *\n     *  @private\n     */\n    TwoDimensional.prototype.getMinValue = function (minVal, tempVariable) {\n        if (isNullOrUndefined(minVal)) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if (this.performSort(tempVariable) < minVal) {\n            minVal = this.performSort(tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            minVal = this.performSort(tempVariable);\n        }\n        return !isNullOrUndefined(minVal) ? parseFloat(minVal.toString()) : minVal;\n    };\n    /**\n     * To get maximum value\n     *\n     *  @private\n     */\n    TwoDimensional.prototype.getMaxValue = function (maxVal, tempVariable) {\n        if (isNullOrUndefined(maxVal) && tempVariable.length > 0) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if (Math.max.apply(Math, tempVariable) > maxVal) {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        else if ((this.heatMap.paletteSettings.colorGradientMode === 'Row' ||\n            this.heatMap.paletteSettings.colorGradientMode === 'Column') && this.heatMap.paletteSettings.type === 'Gradient') {\n            maxVal = Math.max.apply(Math, tempVariable);\n        }\n        return !isNullOrUndefined(maxVal) ? parseFloat(maxVal.toString()) : maxVal;\n    };\n    /**\n     * To perform sort operation.\n     *\n     *  @private\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    TwoDimensional.prototype.performSort = function (tempVariable) {\n        return tempVariable.sort(function (a, b) { return a - b; }).filter(this.checkmin)[0];\n    };\n    /**\n     * To get minimum value\n     *\n     *  @private\n     */\n    TwoDimensional.prototype.checkmin = function (val) {\n        return !isNullOrUndefined(val) && val.toString() !== '';\n    };\n    return TwoDimensional;\n}());\nexport { TwoDimensional };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Browser, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DrawSvgCanvas, TextOption, TextBasic, PathOption, Line, LineOption, GradientPointer, textTrim } from '../utils/helper';\nimport { Size, measureText, getTitle, getElement, CanvasTooltip, formatValue, LegendRange, ToggleVisibility, sum } from '../utils/helper';\nimport { Font, Title } from '../model/base';\nimport { Rect, RectOption, Gradient, GradientColor, showTooltip, stringToNumber, CurrentLegendRect, removeElement } from '../utils/helper';\nimport { Theme } from '../model/theme';\nimport { Tooltip as tool } from '@syncfusion/ej2-svg-base';\n/**\n * Gets and sets the options to customize the legend in the heatmap.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.titleFont }, Title)\n    ], LegendSettings.prototype, \"title\", void 0);\n    __decorate([\n        Property('Right')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showLabel\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"showGradientPointer\", void 0);\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"enableSmartLegend\", void 0);\n    __decorate([\n        Property('All')\n    ], LegendSettings.prototype, \"labelDisplayType\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property('')\n    ], LegendSettings.prototype, \"labelFormat\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/**\n *\n * The `Legend` module is used to render legend for the heatmap.\n */\nvar Legend = /** @class */ (function () {\n    function Legend(heatMap) {\n        this.maxLegendLabelSize = new Size(0, 0);\n        this.gradientScaleSize = 10;\n        this.segmentCollections = [];\n        this.segmentCollectionsLabels = [];\n        this.textWrapCollections = [];\n        this.labelCollections = [];\n        this.labelCollection = [];\n        this.legendSize = 10;\n        this.previousOptions = new GradientPointer(0, 0, 0, 0, 0, 0);\n        this.listPerPage = 0;\n        this.numberOfPages = 1;\n        this.listWidth = 0;\n        this.fillRect = new Rect(0, 0, 0, 0);\n        this.legendRect = new Rect(0, 0, 0, 0);\n        this.currentPage = 1;\n        this.lastList = [];\n        this.navigationCollections = [];\n        this.pagingRect = new Rect(0, 0, 0, 0);\n        this.listInterval = 10; // padding between two lists\n        this.legendLabelTooltip = [];\n        this.legendTitleTooltip = [];\n        this.labelXCollections = [];\n        this.labelYCollections = [];\n        this.legendXCollections = [];\n        this.legendYCollections = [];\n        /** @private */\n        this.legendRectPositionCollection = [];\n        /** @private */\n        this.legendRange = [];\n        /** @private */\n        this.legendTextRange = [];\n        /** @private */\n        this.visibilityCollections = [];\n        this.heatMap = heatMap;\n        this.drawSvgCanvas = new DrawSvgCanvas(heatMap);\n    }\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     *\n     * @returns {void}\n     * @private\n     */\n    Legend.prototype.destroy = function () {\n        /**\n         * destory code\n         */\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendItems = function () {\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var tempBorder = { color: 'transparent', width: 0 };\n        this.legend = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_Legend' });\n        var rectItems = new RectOption(heatMap.element.id + '_LegendBound', 'none', tempBorder, 1, this.legendGroup);\n        this.drawSvgCanvas.drawRectangle(rectItems, this.legend);\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n        var fill;\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            var colorCollection = (!heatMap.legendSettings.enableSmartLegend) ?\n                heatMap.colorCollection : heatMap.legendColorCollection;\n            this.legendRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendRange;\n            this.legendTextRange = (heatMap.resizing || (!heatMap.legendOnLoad && heatMap.rendering)) ? [] : this.legendTextRange;\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            for (var i = 0; i < colorCollection.length; i++) {\n                var visibility = !isNullOrUndefined(this.visibilityCollections[i]) ?\n                    this.visibilityCollections[i] : true;\n                heatMap.toggleValue.push(new ToggleVisibility(visibility, colorCollection[i].value, colorCollection[i].startValue, colorCollection[i].endValue));\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend === true)) {\n            if (heatMap.paletteSettings.type === 'Gradient') {\n                if (heatMap.enableCanvasRendering) {\n                    var grd = void 0;\n                    var ctx_1 = heatMap.canvasRenderer.ctx;\n                    if (heatMap.horizontalGradient) {\n                        grd = ctx_1.createLinearGradient(legendBound.x, 0, legendBound.x + legendBound.width, 0);\n                    }\n                    else {\n                        grd = ctx_1.createLinearGradient(0, legendBound.y, 0, legendBound.y + legendBound.height);\n                    }\n                    if (heatMap.legendSettings.title.text) {\n                        ctx_1.clip();\n                    }\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        var value = (((this.heatMap.isColorRange ? heatMap.legendColorCollection[i].startValue :\n                            heatMap.legendColorCollection[i].value) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue));\n                        value = isNaN(value) ? 0 : value;\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateCanvasColorRange(i, grd);\n                        }\n                        else {\n                            grd.addColorStop(value, heatMap.legendColorCollection[i].color);\n                        }\n                    }\n                    ctx_1.fillStyle = grd;\n                    fill = grd.toString();\n                }\n                else {\n                    var gradientOptions = void 0;\n                    var gradientColor = void 0;\n                    var cgradientColors = [];\n                    for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                        if (this.heatMap.isColorRange && this.heatMap.paletteSettings.type === 'Gradient') {\n                            this.calculateColorRange(i, cgradientColors);\n                        }\n                        else {\n                            var gradientPercentage = ((heatMap.legendColorCollection[i].value - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue)) * 100;\n                            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n                            gradientColor = new GradientColor(heatMap.legendColorCollection[i].color, gradientPercentage + '%');\n                            cgradientColors.push(gradientColor);\n                        }\n                        if (this.legendMaxValue === this.legendMinValue) {\n                            break;\n                        }\n                    }\n                    if (heatMap.horizontalGradient) {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '100%', '0%', '0%');\n                    }\n                    else {\n                        gradientOptions = new Gradient(heatMap.element.id + '_lineargradient', '0%', '0%', '0%', '100%');\n                    }\n                    var linearGradient = heatMap.renderer.drawGradient('linearGradient', gradientOptions, cgradientColors);\n                    this.legend.appendChild(linearGradient);\n                    fill = 'url(#' + heatMap.element.id + '_lineargradient)';\n                }\n                var rectItem = new RectOption(heatMap.element.id + '_Gradient_Legend', fill, tempBorder, 1, rectItemsSvg);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                this.renderElements(rectItemsSvg);\n            }\n            else {\n                this.renderSmartLegend();\n                this.renderTitle(rectItemsSvg);\n            }\n            if (!heatMap.enableCanvasRendering) {\n                heatMap.svgObject.appendChild(this.legend);\n            }\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n            this.renderLegendLabel(rectItemsSvg);\n        }\n        else {\n            this.legendScale = heatMap.renderer.createGroup({ id: heatMap.element.id + 'Heatmap_GradientScale' });\n            var listRect = new RectOption(heatMap.element.id + '_Gradient_Scale', 'none', tempBorder, 1, this.legendRectScale);\n            this.drawSvgCanvas.drawRectangle(listRect, this.legendScale);\n            this.renderTitle(rectItemsSvg);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(this.legendScale);\n            }\n            this.translategroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_translate' });\n            this.calculateListPerPage(rectItemsSvg);\n            if (this.numberOfPages > 1) {\n                this.paginggroup = heatMap.renderer.createGroup({ id: heatMap.element.id + '_navigation' });\n            }\n            this.renderListLegendMode(rectItemsSvg, true);\n            if (heatMap.enableCanvasRendering) {\n                ctx.restore();\n            }\n        }\n    };\n    Legend.prototype.renderElements = function (rectItemsSvg) {\n        this.renderTitle(rectItemsSvg);\n        this.renderColorAxisGrid(rectItemsSvg);\n    };\n    Legend.prototype.calculateCanvasColorRange = function (i, grd) {\n        var heatMap = this.heatMap;\n        var value = ((((heatMap.legendColorCollection[i].startValue < heatMap.dataSourceMinValue &&\n            heatMap.legendColorCollection[i].endValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : heatMap.legendColorCollection[i].startValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue));\n        value = isNaN(value) ? 0 : value;\n        var value1 = ((heatMap.legendColorCollection[i].endValue >= this.heatMap.dataSourceMaxValue ?\n            this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i].endValue) - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue);\n        if (this.heatMap.legendColorCollection[0].startValue !== this.heatMap.dataSourceMinValue && i === 0 &&\n            this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n            value = (this.heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value / 2, this.heatMap.paletteSettings.fillColor.minColor);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n        grd.addColorStop(value, heatMap.legendColorCollection[i].minColor);\n        grd.addColorStop(value1, heatMap.legendColorCollection[i].maxColor);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue) &&\n            this.heatMap.legendColorCollection[i].endValue < this.heatMap.dataSourceMaxValue) {\n            value = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.minColor);\n            value = ((i === this.heatMap.legendColorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue);\n            grd.addColorStop(value, this.heatMap.paletteSettings.fillColor.maxColor);\n        }\n    };\n    Legend.prototype.calculateColorRange = function (i, cgradientColors) {\n        if (cgradientColors === void 0) { cgradientColors = []; }\n        var heatMap = this.heatMap;\n        heatMap.toggleValue = [];\n        var gradientPercentage;\n        var gradientColor;\n        var gradientColor2;\n        var gradientColor3;\n        if (this.heatMap.legendColorCollection[0].startValue > this.heatMap.dataSourceMinValue && i === 0) {\n            gradientPercentage = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.minColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n            gradientPercentage = (heatMap.legendColorCollection[0].startValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor = new GradientColor(heatMap.paletteSettings.fillColor.maxColor, gradientPercentage + '%');\n            cgradientColors.push(gradientColor);\n        }\n        gradientPercentage = ((heatMap.legendColorCollection[i].startValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue)) * 100;\n        gradientPercentage = isNaN(gradientPercentage) ? 0 : gradientPercentage;\n        gradientColor = new GradientColor(heatMap.legendColorCollection[i].minColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor);\n        gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n            (this.legendMaxValue - this.legendMinValue) * 100;\n        var gradientColor1 = new GradientColor(heatMap.legendColorCollection[i].maxColor, gradientPercentage + '%');\n        cgradientColors.push(gradientColor1);\n        if (this.heatMap.legendColorCollection[i].endValue !== ((i === this.heatMap.legendColorCollection.length - 1) ?\n            this.heatMap.dataSourceMaxValue : this.heatMap.legendColorCollection[i + 1].startValue)) {\n            gradientPercentage = (heatMap.legendColorCollection[i].endValue - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor2 = new GradientColor(this.heatMap.paletteSettings.fillColor.minColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor2);\n            gradientPercentage = ((i === (this.heatMap.legendColorCollection.length - 1) ?\n                this.heatMap.dataSourceMaxValue : heatMap.legendColorCollection[i + 1].startValue) - this.legendMinValue) /\n                (this.legendMaxValue - this.legendMinValue) * 100;\n            gradientColor3 = new GradientColor(this.heatMap.paletteSettings.fillColor.maxColor, (gradientPercentage) + '%');\n            cgradientColors.push(gradientColor3);\n        }\n    };\n    Legend.prototype.renderTitle = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.legendSettings.title.text) {\n            var title = heatMap.legendSettings.title;\n            var titleSize = measureText(title.text, title.textStyle);\n            var padding = !heatMap.legendSettings.showLabel ? heatMap.horizontalGradient ? 10 : 6 : this.labelPadding;\n            var y = void 0;\n            var anchor = 'start';\n            var maxWidth = void 0;\n            var dominantBaseline = void 0;\n            var text = title.text;\n            var textAlignment = title.textStyle.textAlignment;\n            var options = void 0;\n            var yValue = void 0;\n            if (heatMap.legendSettings.title.textStyle.textOverflow === 'Trim') {\n                // TO DO: When the legend title is large and legend position is left or right,\n                // the HeatMap is not rendered. The below line trimmed the large title text alone.\n                maxWidth = heatMap.horizontalGradient ? rect.width - 10 : this.width - 10;\n                text = textTrim(maxWidth, text, title.textStyle);\n            }\n            if (!heatMap.horizontalGradient) {\n                padding = -(padding + titleSize.height / 4);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, rect.y - titleSize.height, maxWidth, titleSize.height)));\n                }\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rect.x, rect.y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            else {\n                y = rect.y + (heatMap.legendSettings.position === 'Top' ? 0 :\n                    -(10 + titleSize.height + padding));\n                padding = heatMap.legendSettings.position === 'Top' ? -(padding + titleSize.height / 4) :\n                    (padding + (3 * titleSize.height / 4));\n                yValue = heatMap.legendSettings.position === 'Bottom' ? y : y - titleSize.height;\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    this.legendTitleTooltip.push(new CanvasTooltip(title.text, new Rect(rect.x, yValue, maxWidth, titleSize.height)));\n                }\n                titleSize.width = rect.width < titleSize.width ? rect.width : titleSize.width;\n                var rectValue = rect.x;\n                if (text.indexOf('...') !== -1 && textAlignment === 'Far') {\n                    rectValue = (rectValue + (rect.width / 2) - (titleSize.width / 2));\n                }\n                else {\n                    rectValue = textAlignment === 'Near' ? rectValue : textAlignment === 'Far' ? rect.width + rectValue :\n                        (rectValue + (rect.width / 2) - (titleSize.width / 2));\n                }\n                anchor = textAlignment === 'Far' && text.indexOf('...') === -1 ? 'end' : 'start';\n                options = new TextOption(heatMap.element.id + '_legendTitle', new TextBasic(rectValue, y + padding, anchor, text, 0, 'translate(0,0)', dominantBaseline), title.textStyle, title.textStyle.color || heatMap.themeStyle.heatMapTitle);\n            }\n            this.drawSvgCanvas.createText(options, this.legend, text);\n        }\n    };\n    Legend.prototype.renderSmartLegend = function () {\n        var heatMap = this.heatMap;\n        var colorCollection = heatMap.colorCollection;\n        var smartLegendRect;\n        var tempBorder = {\n            color: 'transparent',\n            width: 0\n        };\n        var legendBound = this.legendRectScale;\n        var legendX;\n        var legendY;\n        var legendWidth;\n        var legendHeight;\n        var width = legendBound.width / colorCollection.length;\n        var height = legendBound.height / colorCollection.length;\n        this.legendRectPositionCollection = [];\n        this.legendRange = [];\n        for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n            var rectPosition = new CurrentLegendRect(0, 0, 0, 0, '', '');\n            if (heatMap.horizontalGradient) {\n                legendX = legendBound.x + (i * width);\n                legendY = legendBound.y;\n                legendWidth = width;\n                legendHeight = legendBound.height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendX + width : legendX);\n            }\n            else {\n                legendX = legendBound.x;\n                legendY = legendBound.y + (i * height);\n                legendWidth = legendBound.width;\n                legendHeight = height;\n                this.segmentCollections.push((heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                    i === heatMap.legendColorCollection.length - 1 && !heatMap.legendColorCollection[i].isHidden) ?\n                    legendY + height : legendY);\n            }\n            smartLegendRect = new Rect(legendX, legendY, legendWidth, legendHeight);\n            var legendRange = new LegendRange(0, 0, 0, 0, 0, true, 0);\n            legendRange.x = legendX;\n            legendRange.y = legendY;\n            legendRange.width = legendWidth;\n            legendRange.height = legendHeight;\n            legendRange.value = this.heatMap.isColorRange ?\n                heatMap.legendColorCollection[i].endValue : heatMap.legendColorCollection[i].value;\n            legendRange.currentPage = this.currentPage;\n            if (colorCollection.length !== heatMap.legendColorCollection.length && i === heatMap.legendColorCollection.length - 1) {\n                if (heatMap.horizontalGradient) {\n                    legendRange.width = 0;\n                }\n                else {\n                    legendRange.height = 0;\n                }\n                this.visibilityCollections[i] = this.visibilityCollections[i - 1];\n            }\n            legendRange.visible = !isNullOrUndefined(this.visibilityCollections[i]) ?\n                this.visibilityCollections[i] : true;\n            this.legendRange.push(legendRange);\n            if (!heatMap.legendColorCollection[i].isHidden) {\n                var color = heatMap.legendOnLoad ? this.heatMap.isColorRange ? colorCollection[i].minColor :\n                    colorCollection[i].color : this.legendRange[i].visible ?\n                    this.heatMap.isColorRange ? colorCollection[i].minColor :\n                        colorCollection[i].color : this.heatMap.themeStyle.toggledColor || '#D3D3D3';\n                var rectItem = new RectOption(heatMap.element.id + '_Smart_Legend' + i, color, tempBorder, 1, smartLegendRect);\n                this.drawSvgCanvas.drawRectangle(rectItem, this.legend);\n                rectPosition.x = legendX;\n                rectPosition.y = legendY;\n                rectPosition.width = legendWidth;\n                rectPosition.height = legendHeight;\n                rectPosition.label = this.labelCollections[i];\n                rectPosition.id = heatMap.element.id + '_Smart_Legend' + i;\n                this.legendRectPositionCollection.push(rectPosition);\n                var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, this.textWrapCollections[i]);\n                if (text.length !== 0 && heatMap.enableCanvasRendering) {\n                    var elementSize = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                    this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(rectPosition.x, rectPosition.y, elementSize.width, elementSize.height)));\n                }\n            }\n        }\n    };\n    Legend.prototype.colorRangeLegendPosition = function (i, labelX) {\n        if (this.segmentCollections.length !== this.segmentCollectionsLabels.length) {\n            for (var k = 0; k < this.segmentCollections.length; k++) {\n                if (this.segmentCollectionsLabels[i] === this.segmentCollections[k]) {\n                    labelX = this.segmentCollectionsLabels[i] + (((k === this.segmentCollections.length - 1 ?\n                        (this.heatMap.horizontalGradient ? this.width : this.height) :\n                        this.segmentCollections[k + 1]) - this.segmentCollections[k]) / 2);\n                    break;\n                }\n            }\n        }\n        else {\n            labelX = this.segmentCollectionsLabels[i] + (((i === this.segmentCollectionsLabels.length - 1 ?\n                (this.heatMap.horizontalGradient ? this.width : this.height) :\n                this.segmentCollectionsLabels[i + 1]) - this.segmentCollectionsLabels[i]) / 2);\n        }\n        this.labelPosition = labelX;\n    };\n    Legend.prototype.renderLegendLabel = function (rect) {\n        var heatMap = this.heatMap;\n        this.legendTextRange = [];\n        if (heatMap.legendSettings.showLabel && (heatMap.paletteSettings.type === 'Gradient' ||\n            (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType !== 'None'))) {\n            var anchor = 'start';\n            var dominantBaseline = void 0;\n            var legendLabel = void 0;\n            var textWrapWidth = 0;\n            var text = void 0;\n            this.legendLabelTooltip = [];\n            var elementSize = void 0;\n            var isColorRange = heatMap.isColorRange;\n            var colorCollection = heatMap.legendColorCollection;\n            if (heatMap.enableCanvasRendering) {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.rect(this.legendGroup.x, this.legendGroup.y, this.legendGroup.width, this.legendGroup.height);\n                ctx.save();\n                ctx.clip();\n                ctx.restore();\n            }\n            else {\n                legendLabel = heatMap.renderer.createGroup({ id: heatMap.element.id + '_Heatmap_LegendLabel' });\n            }\n            var labelX = void 0;\n            var labelY = void 0;\n            for (var i = 0; i < colorCollection.length; i++) {\n                var value = ((colorCollection[i].value - (Math.round(this.legendMinValue * 100) / 100)) /\n                    ((Math.round(this.legendMaxValue * 100) / 100) - (Math.round(this.legendMinValue * 100) / 100))) * 100;\n                if (heatMap.horizontalGradient) {\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelX);\n                        labelX = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelX = this.segmentCollections[i] + ((rect.width / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelX = this.segmentCollections[i];\n                    }\n                    labelY = rect.y + rect.height + this.labelPadding;\n                    anchor = (((Math.round(value * 100) / 100) === 0 && !isColorRange) || (heatMap.paletteSettings.type === 'Fixed' &&\n                        i === 0)) ? 'start' : (((Math.round(value * 100) / 100) === 100 && heatMap.paletteSettings.type === 'Gradient' &&\n                        !isColorRange) || (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                        heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.labelDisplayType === 'Edge') ? 'end' : 'middle';\n                    dominantBaseline = 'hanging';\n                }\n                else {\n                    labelX = rect.x + rect.width + this.labelPadding;\n                    if (this.heatMap.isColorRange && heatMap.paletteSettings.type === 'Gradient') {\n                        this.colorRangeLegendPosition(i, labelY);\n                        labelY = this.labelPosition;\n                    }\n                    else if (this.heatMap.legendSettings.enableSmartLegend && this.heatMap.isColorRange &&\n                        heatMap.paletteSettings.type === 'Fixed') {\n                        labelY = this.segmentCollections[i] + ((rect.height / colorCollection.length) / 2);\n                    }\n                    else {\n                        labelY = this.segmentCollections[i];\n                    }\n                    dominantBaseline = (((Math.round(value * 100) / 100) === 0 && !isColorRange) || (i === 0 &&\n                        heatMap.paletteSettings.type === 'Fixed')) ? 'hanging' : (((Math.round(value * 100) / 100) === 100 &&\n                        !isColorRange && heatMap.paletteSettings.type === 'Gradient') ||\n                        (Math.round(heatMap.dataSourceMaxValue * 100) / 100) === colorCollection[i].value &&\n                            heatMap.legendSettings.enableSmartLegend) || (heatMap.legendSettings.enableSmartLegend &&\n                        heatMap.legendSettings.labelDisplayType === 'Edge' &&\n                        heatMap.paletteSettings.type === 'Fixed') ? 'auto' : 'middle';\n                }\n                textWrapWidth = heatMap.horizontalGradient ? (heatMap.legendSettings.textStyle.textOverflow === 'None' ?\n                    this.segmentCollections[i] : this.textWrapCollections[i]) :\n                    this.width - (this.legendRectScale.width + this.labelPadding + this.legendRectPadding);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                elementSize = measureText(text[0], heatMap.legendSettings.textStyle);\n                if (heatMap.paletteSettings.type === 'Fixed') {\n                    var rectY = dominantBaseline === 'hanging' ? labelY : dominantBaseline === 'middle' ?\n                        labelY - elementSize.height / 2 : labelY - elementSize.height;\n                    var rectX = anchor === 'end' ? labelX - elementSize.width : anchor === 'middle' ?\n                        labelX - elementSize.width / 2 : labelX;\n                    var textPosition = new LegendRange(rectX, rectY, elementSize.width, elementSize.height, colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ?\n                        this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n                if (this.labelCollections[i] !== '') {\n                    if (text.length !== 0 && text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, elementSize.width, elementSize.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, anchor, text, 0, 'translate(0,0)', dominantBaseline);\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill :\n                        (heatMap.paletteSettings.type === 'Fixed' && !this.legendRange[i].visible) ? '#D3D3D3' : options.fill;\n                    if (text.length > 1) {\n                        this.drawSvgCanvas.createWrapText(options, heatMap.legendSettings.textStyle, legendLabel);\n                    }\n                    else {\n                        this.drawSvgCanvas.createText(options, legendLabel, text[0]);\n                    }\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        if (dominantBaseline === 'middle') {\n                            legendLabel.lastChild.setAttribute('dy', '0.6ex');\n                        }\n                        else if (dominantBaseline === 'hanging') {\n                            legendLabel.lastChild.setAttribute('dy', '1.5ex');\n                        }\n                    }\n                }\n                if (this.legendMaxValue === this.legendMinValue && heatMap.paletteSettings.type === 'Gradient') {\n                    break;\n                }\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n                this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n                this.legend.appendChild(legendLabel);\n                var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_clipPath' });\n                var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n                clippath.appendChild(clipRect);\n                heatMap.svgObject.appendChild(clippath);\n                this.legend.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderGradientPointer = function (e, pageX, pageY) {\n        var heatMap = this.heatMap;\n        var currentRect = heatMap.heatMapSeries.getCurrentRect(pageX, pageY);\n        var cellValue = heatMap.bubbleSizeWithColor ? currentRect.value[0].bubbleData.toString() !== '' ?\n            !this.heatMap.isColorValueExist ? currentRect.value[0].bubbleData.toString() :\n                currentRect.value[1].bubbleData.toString() : '' : currentRect.value.toString();\n        var rect = this.legendRectScale;\n        var legendPart;\n        var direction;\n        var options;\n        var legendPath;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        var pathX3;\n        var pathY3;\n        if (cellValue.toString() !== '') {\n            if (!heatMap.horizontalGradient) {\n                legendPart = rect.height / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x - 1;\n                pathY1 = rect.y + legendPath;\n                pathX2 = pathX3 = rect.x - 8;\n                pathY2 = rect.y - 5 + legendPath;\n                pathY3 = rect.y + 5 + legendPath;\n            }\n            else {\n                legendPart = rect.width / 100;\n                legendPath = legendPart * ((Number(cellValue) - this.legendMinValue) /\n                    (this.legendMaxValue - this.legendMinValue)) * 100;\n                legendPath = isNaN(legendPath) ? 0 : legendPath;\n                pathX1 = rect.x + legendPath;\n                pathY1 = rect.y + rect.height;\n                pathX2 = rect.x - 5 + legendPath;\n                pathY2 = pathY3 = rect.y + rect.height + 8;\n                pathX3 = rect.x + 5 + legendPath;\n            }\n            direction = 'M' + ' ' + pathX1 + ' ' + pathY1 + ' ' +\n                'L' + ' ' + pathX2 + ' ' + pathY2 + ' ' + 'L' + ' ' + pathX3 + ' ' + pathY3 + ' ' + 'Z';\n            options = new PathOption(heatMap.element.id + '_Gradient_Pointer', 'gray', 0.01, '#A0A0A0', 1, '0,0', direction);\n            if (!heatMap.enableCanvasRendering) {\n                this.gradientPointer = heatMap.renderer.drawPath(options);\n                this.gradientPointer.style.visibility = 'visible';\n                this.legend.appendChild(this.gradientPointer);\n            }\n            else {\n                this.removeGradientPointer();\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(options, canvasTranslate);\n                this.previousOptions.pathX1 = pathX1;\n                this.previousOptions.pathY1 = pathY1;\n                this.previousOptions.pathX2 = pathX2;\n                this.previousOptions.pathY2 = pathY2;\n                this.previousOptions.pathX3 = pathX3;\n                this.previousOptions.pathY3 = pathY3;\n            }\n        }\n        else {\n            this.removeGradientPointer();\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.removeGradientPointer = function () {\n        var heatMap = this.heatMap;\n        if (this.gradientPointer && !heatMap.enableCanvasRendering) {\n            this.gradientPointer.style.visibility = 'hidden';\n        }\n        else if (heatMap.enableCanvasRendering) {\n            if (Object.keys(this.previousOptions).length !== 0) {\n                if (heatMap.horizontalGradient) {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY1;\n                    this.fillRect.width = this.previousOptions.pathX3 - this.previousOptions.pathX2 + 2;\n                    this.fillRect.height = this.previousOptions.pathY2 + 1 - this.previousOptions.pathY1;\n                }\n                else {\n                    this.fillRect.x = this.previousOptions.pathX2 - 1;\n                    this.fillRect.y = this.previousOptions.pathY2 - 1;\n                    this.fillRect.width = this.previousOptions.pathX1 - this.previousOptions.pathX2 + 1;\n                    this.fillRect.height = this.previousOptions.pathY3 - this.previousOptions.pathY2 + 2;\n                }\n            }\n            heatMap.canvasRenderer.ctx.fillStyle = heatMap.themeStyle.background;\n            heatMap.canvasRenderer.ctx.clearRect(this.fillRect.x, this.fillRect.y, this.fillRect.width, this.fillRect.height);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        this.labelCollection = [];\n        this.labelCollections = [];\n        var colorCollection = heatMap.legendColorCollection;\n        if (legendSettings.position !== 'Bottom' && legendSettings.position !== 'Top' &&\n            legendSettings.position !== 'Right' && legendSettings.position !== 'Left') {\n            legendSettings.position = 'Right';\n        }\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        heatMap.horizontalGradient = legendSettings.position === 'Bottom' || legendSettings.position === 'Top';\n        this.legendRectPadding = heatMap.horizontalGradient ? heatMap.legendSettings.title.text ?\n            titleSize.height + 16 : 16 : 10; // padding between rect and legend\n        this.labelPadding = legendSettings.showLabel ? this.heatMap.horizontalGradient ? 10 : 6 : 0; // padding between list and label\n        this.legendHeight = legendSettings.height;\n        this.legendWidth = legendSettings.width;\n        var format = heatMap.legendSettings.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        this.format = heatMap.intl.getNumberFormat({ format: isCustom ? '' : format });\n        if (heatMap.paletteSettings.type === 'Fixed') {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].label ? colorCollection[i].label : this.heatMap.isColorRange ?\n                    colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() : formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender' };\n                this.labelCollection.push(label);\n                this.heatMap.trigger('legendRender', legendEventArg);\n                if (heatMap.legendRender) {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        if (!legendEventArg.cancel) {\n                            this.labelCollections.push(legendEventArg.text);\n                        }\n                        else {\n                            this.labelCollections.push('');\n                        }\n                    }\n                }\n                else {\n                    if (heatMap.legendSettings.enableSmartLegend && heatMap.legendSettings.labelDisplayType === 'Edge'\n                        && i > 0 && i < colorCollection.length - 1) {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < colorCollection.length; i++) {\n                var label = colorCollection[i].isHidden ? '' : colorCollection[i].label ? colorCollection[i].label :\n                    this.heatMap.isColorRange ? colorCollection[i].startValue.toString() + '-' + colorCollection[i].endValue.toString() :\n                        formatValue(isCustom, format, colorCollection[i].value, this.format).toString();\n                var legendEventArg = { cancel: false, text: label, name: 'legendRender' };\n                if (!colorCollection[i].isHidden) {\n                    this.heatMap.trigger('legendRender', legendEventArg);\n                }\n                if (heatMap.legendRender) {\n                    if (!legendEventArg.cancel) {\n                        if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                            this.labelCollections.push('');\n                        }\n                        else {\n                            if (!legendEventArg.cancel) {\n                                this.labelCollections.push(legendEventArg.text);\n                            }\n                            else {\n                                this.labelCollections.push('');\n                            }\n                        }\n                    }\n                    else {\n                        this.labelCollections.push('');\n                    }\n                }\n                else {\n                    if (i > 0 && i < colorCollection.length - 1 && heatMap.legendSettings.labelDisplayType === 'Edge') {\n                        this.labelCollections.push('');\n                    }\n                    else {\n                        this.labelCollections.push(label);\n                    }\n                }\n            }\n        }\n        if (heatMap.paletteSettings.type === 'Gradient' || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend)) {\n            this.maxLegendLabelSize = this.getMaxLabelSize();\n            if (heatMap.horizontalGradient && legendSettings.height === '') {\n                this.legendHeight = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            else if (!heatMap.horizontalGradient && legendSettings.width === '' && (legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.maxLegendLabelSize.width).toString();\n            }\n            this.calculateTitleBounds();\n        }\n        else {\n            this.calculateListLegendBounds(rect);\n        }\n        this.legendHeight = this.legendHeight ? this.legendHeight : heatMap.horizontalGradient ? '50' : '100%';\n        this.legendWidth = this.legendWidth ? this.legendWidth : heatMap.horizontalGradient ?\n            '100%' : heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ? '70' : '50';\n        this.height = stringToNumber(this.legendHeight, rect.height);\n        this.width = stringToNumber(this.legendWidth, rect.width);\n        if (heatMap.horizontalGradient) {\n            this.height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.height < 50 ? 50 : this.height : this.height;\n            if (legendSettings.position === 'Top') {\n                rect.y += this.height;\n            }\n            rect.height -= this.height;\n        }\n        else {\n            this.width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                this.width < 50 ? 50 : this.width : this.width;\n            if (legendSettings.position === 'Left') {\n                rect.x += this.width;\n            }\n            rect.width -= this.width;\n        }\n    };\n    Legend.prototype.calculateTitleBounds = function () {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.legendSettings.title.text) {\n            if ((heatMap.legendSettings.position === 'Top' || heatMap.legendSettings.position === 'Bottom') &&\n                heatMap.legendSettings.height === '') {\n                this.legendHeight = (((2 * this.legendRectPadding) - titleSize.height) +\n                    this.legendSize + this.maxLegendLabelSize.height).toString();\n            }\n            if (heatMap.legendSettings.width === '' && (heatMap.legendSettings.textStyle.textOverflow === 'None' ||\n                (heatMap.paletteSettings.type === 'Fixed' && heatMap.legendSettings.enableSmartLegend &&\n                    heatMap.legendSettings.labelDisplayType === 'None'))) {\n                if (heatMap.legendSettings.position === 'Right') {\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) +\n                        this.legendSize + this.maxLegendLabelSize.width).toString();\n                }\n                else if (heatMap.legendSettings.position === 'Left') {\n                    titleSize.width = titleSize.width > this.maxLegendLabelSize.width ? titleSize.width : this.maxLegendLabelSize.width;\n                    this.legendWidth = ((2 * this.legendRectPadding + titleSize.width) + this.legendSize).toString();\n                }\n            }\n        }\n    };\n    Legend.prototype.calculateListLegendBounds = function (rect) {\n        var heatMap = this.heatMap;\n        this.listWidth = 0;\n        this.listHeight = 0;\n        this.currentPage = 1;\n        var padding = 10; // padding of paging elements\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var height = (titleSize.height + 50).toString();\n        if (heatMap.horizontalGradient) {\n            for (var i = 0; i < heatMap.colorCollection.length; i++) {\n                var size = 0;\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                var perListWidth = this.legendSize + this.labelPadding + size + this.listInterval;\n                this.listWidth += perListWidth;\n            }\n            this.listWidth += this.listInterval + padding;\n            if (this.legendWidth === '') {\n                this.legendWidth = this.listWidth > rect.width ? rect.width.toString() : this.listWidth.toString();\n            }\n            if (this.legendHeight === '') {\n                this.numberOfRows = Math.ceil(this.listWidth / stringToNumber(this.legendWidth, rect.width));\n                this.numberOfRows = this.numberOfRows > 3 ? 3 : this.numberOfRows;\n                this.legendHeight = (this.listWidth > rect.width || this.listWidth > stringToNumber(this.legendWidth, rect.width)) &&\n                    this.numberOfRows > 3 ? (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding +\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) + padding).toString() :\n                    (((this.legendSize + this.listInterval) * this.numberOfRows) + this.legendRectPadding).toString();\n            }\n        }\n        else {\n            this.listHeight = ((this.legendSize + this.listInterval) * heatMap.colorCollection.length)\n                + this.listInterval + (heatMap.legendSettings.title.text ? titleSize.height : 0);\n            if (this.legendHeight === '') {\n                this.legendHeight = this.listHeight > rect.height ? rect.height.toString() : this.listHeight.toString();\n            }\n            if (this.legendWidth === '' && heatMap.legendSettings.textStyle.textOverflow !== 'Trim') {\n                this.maxLegendLabelSize = this.getMaxLabelSize();\n                this.maxLegendLabelSize.width = titleSize.width > this.maxLegendLabelSize.width ?\n                    titleSize.width : this.maxLegendLabelSize.width;\n                this.legendWidth = ((2 * this.legendRectPadding) + this.legendSize + this.labelPadding +\n                    this.maxLegendLabelSize.width).toString();\n            }\n        }\n        if (stringToNumber(this.legendHeight, rect.height) < 50) {\n            this.legendHeight = height;\n        }\n        if (stringToNumber(this.legendWidth, rect.width) < 70) {\n            this.legendWidth = '70';\n        }\n    };\n    Legend.prototype.getMaxLabelSize = function () {\n        var heatMap = this.heatMap;\n        this.maxLegendLabelSize = new Size(0, 0);\n        if (!heatMap.legendSettings.showLabel || (heatMap.horizontalGradient && heatMap.paletteSettings.type === 'Fixed' &&\n            !heatMap.legendSettings.enableSmartLegend) || (heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.labelDisplayType === 'None')) {\n            return this.maxLegendLabelSize;\n        }\n        else {\n            var labelSize = this.maxLegendLabelSize;\n            for (var i = 0; i < heatMap.legendColorCollection.length; i++) {\n                var size = measureText(this.labelCollections[i], heatMap.legendSettings.textStyle);\n                labelSize.width = (labelSize.width > size.width) ? labelSize.width : size.width;\n                labelSize.height = (labelSize.height > size.height) ? labelSize.height : size.height;\n            }\n            return labelSize;\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.calculateLegendSize = function (rect, legendTop) {\n        var heatMap = this.heatMap;\n        var legendSettings = heatMap.legendSettings;\n        var left;\n        var top;\n        var padding = 10; // inner padding for axis title and axil labels\n        var alignment = legendSettings.alignment;\n        var width;\n        var height = stringToNumber(this.legendHeight, rect.height);\n        if (!heatMap.legendSettings.title.text) {\n            width = stringToNumber(this.legendWidth, rect.width);\n        }\n        else {\n            width = this.width;\n        }\n        var axis = heatMap.axisCollections;\n        var axisTitlePadding = 0;\n        if (heatMap.horizontalGradient) {\n            width = width > rect.width ? rect.width : width;\n            height = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                height > 50 ? height : 50 : this.height;\n            left = alignment === 'Near' ? rect.x : alignment === 'Far' ? rect.x + rect.width - width :\n                rect.x + (rect.width / 2) - (width / 2);\n            if (heatMap.xAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.xAxis.title.text, heatMap.xAxis.textStyle).height + padding;\n            }\n            var axisHeight = axis[0].opposedPosition ? 0 : sum(axis[0].xAxisMultiLabelHeight) + axis[0].maxLabelSize.height +\n                axisTitlePadding + padding;\n            top = legendSettings.position === 'Top' ? heatMap.titleSettings.text ? legendTop :\n                heatMap.margin.top : rect.y + rect.height + axisHeight;\n        }\n        else {\n            height = height > rect.height ? rect.height : height;\n            width = heatMap.paletteSettings.type === 'Gradient' || heatMap.legendSettings.enableSmartLegend ?\n                width > 50 ? width : 50 : width;\n            top = alignment === 'Near' ? rect.y : alignment === 'Far' ? rect.y + rect.height - height :\n                rect.y + (rect.height / 2) - (height / 2);\n            if (heatMap.yAxis.title.text !== '') {\n                axisTitlePadding = measureText(heatMap.yAxis.title.text, heatMap.yAxis.textStyle).height + padding;\n            }\n            var axisWidth = axis[1].opposedPosition ? sum(axis[1].yAxisMultiLabelHeight) +\n                axis[1].maxLabelSize.width + axisTitlePadding + 2 * padding : 0;\n            left = legendSettings.position === 'Right' ? rect.x + rect.width + axisWidth : heatMap.margin.left;\n        }\n        this.legendGroup = new Rect(left, top, width, height);\n        this.calculateGradientScale(this.legendGroup);\n    };\n    // calculating number of lists per page\n    Legend.prototype.measureListLegendBound = function (rect) {\n        var heatMap = this.heatMap;\n        var title = heatMap.legendSettings.title;\n        var padding = 15; // padding of paging element\n        this.numberOfPages = 1;\n        var titleSize = measureText(title.text, title.textStyle);\n        if (heatMap.horizontalGradient) {\n            if (this.listWidth > this.width) {\n                this.numberOfRows = Math.ceil(this.listWidth / this.width);\n                this.listHeight = ((this.legendSize + this.listInterval) * this.numberOfRows);\n                this.listPerPage = this.numberOfRows <= 3 ? this.numberOfRows : Math.ceil((this.height - padding -\n                    parseInt(heatMap.legendSettings.textStyle.size, 10) -\n                    this.legendRectPadding) / (this.legendSize + this.listInterval));\n                this.numberOfPages = Math.ceil(this.numberOfRows / this.listPerPage);\n            }\n            else {\n                this.listPerPage = 1;\n            }\n        }\n        else {\n            if (this.listHeight > rect.height || this.listHeight > this.height) {\n                var maxHeight = stringToNumber(this.legendHeight, rect.height);\n                maxHeight = maxHeight > rect.height ? rect.height : maxHeight;\n                maxHeight = heatMap.legendSettings.title.text ? maxHeight - titleSize.height : maxHeight;\n                this.listPerPage = Math.floor(maxHeight / (this.legendSize + this.listInterval) - 1);\n                this.numberOfPages = Math.max(1, Math.ceil(heatMap.colorCollection.length / this.listPerPage));\n            }\n            else {\n                this.listPerPage = heatMap.colorCollection.length;\n                this.legendHeight = this.listHeight.toString();\n            }\n        }\n    };\n    Legend.prototype.renderPagingElements = function () {\n        var heatMap = this.heatMap;\n        if (this.numberOfPages > 1) {\n            this.navigationCollections = [];\n            this.legend.appendChild(this.paginggroup);\n            var iconSize = 10;\n            var rightArrowX = this.legendGroup.x + this.legendGroup.width - iconSize;\n            var rightArrowY = this.legendGroup.y + this.legendGroup.height - iconSize;\n            var text = this.currentPage + '/' + this.numberOfPages;\n            var textSize = measureText(text, heatMap.legendSettings.textStyle);\n            var textX = rightArrowX - textSize.width - 15;\n            var textBasic = new TextBasic(textX, rightArrowY, 'start', text, 0, 'translate(0,0)', 'middle');\n            var options = new TextOption(heatMap.element.id + '_paging', textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n            this.drawSvgCanvas.createText(options, this.paginggroup, text);\n            if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                this.paginggroup.lastChild.setAttribute('dy', '0.6ex');\n            }\n            this.pagingRect = new Rect(textX, rightArrowY - textSize.height / 2, textSize.width, textSize.height);\n            var pagingTextRect = new RectOption(heatMap.element.id + '_pagingText', 'none', { color: 'transparent', width: 0 }, 1, this.pagingRect);\n            this.drawSvgCanvas.drawRectangle(pagingTextRect, this.paginggroup);\n            var rightArrowRect = new RectOption(heatMap.element.id + '_rightArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(rightArrowX - iconSize, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(rightArrowRect, this.paginggroup);\n            var rightArrow = 'M' + ' ' + (rightArrowX) + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (rightArrowX - iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (rightArrowX - iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftX = textX - 15;\n            var leftArrow = 'M' + ' ' + leftX + ' ' + rightArrowY + ' ' +\n                'L' + ' ' + (leftX + iconSize) + ' ' + (rightArrowY - iconSize / 2) + ' ' + 'L' + ' ' +\n                (leftX + iconSize) + ' ' + (rightArrowY + (iconSize / 2)) + 'Z';\n            var leftArrowRect = new RectOption(heatMap.element.id + '_leftArrow', 'none', { color: 'transparent', width: 0 }, 1, new Rect(leftX, rightArrowY - iconSize / 2, iconSize, iconSize));\n            this.drawSvgCanvas.drawRectangle(leftArrowRect, this.paginggroup);\n            var leftOption = new PathOption(heatMap.element.id + '_Legend_leftarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', leftArrow);\n            var rightOption = new PathOption(heatMap.element.id + '_Legend_rightarrow', 'gray', 0.01, '#A0A0A0', 1, '0,0', rightArrow);\n            this.navigationCollections.push(rightArrowRect);\n            this.navigationCollections.push(leftArrowRect);\n            if (!heatMap.enableCanvasRendering) {\n                var arrow = heatMap.renderer.drawPath(leftOption);\n                var rightarrow = heatMap.renderer.drawPath(rightOption);\n                this.paginggroup.appendChild(arrow);\n                this.paginggroup.appendChild(rightarrow);\n            }\n            else {\n                var canvasTranslate = void 0;\n                heatMap.canvasRenderer.drawPath(leftOption, canvasTranslate);\n                heatMap.canvasRenderer.drawPath(rightOption, canvasTranslate);\n            }\n        }\n    };\n    Legend.prototype.calculateGradientScale = function (scale) {\n        var heatMap = this.heatMap;\n        var padding = 10; // padding between legend bounds and gradient scale\n        var left;\n        var top;\n        var height;\n        var width;\n        var title = heatMap.legendSettings.title;\n        var titleSize = measureText(title.text, title.textStyle);\n        var titleHeight = heatMap.legendSettings.title.text ? titleSize.height : 0;\n        if (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) {\n            this.measureListLegendBound(heatMap.initialClipRect);\n        }\n        if (heatMap.horizontalGradient) {\n            left = scale.x + padding;\n            top = scale.y + this.legendRectPadding;\n            width = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                scale.width - (2 * this.listInterval) : scale.width - 2 * padding;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval : this.gradientScaleSize;\n        }\n        else {\n            left = scale.x + this.legendRectPadding;\n            top = scale.y + padding + titleHeight;\n            width = (heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend) ?\n                scale.width - padding : this.gradientScaleSize;\n            height = heatMap.paletteSettings.type === 'Fixed' && !heatMap.legendSettings.enableSmartLegend ?\n                (this.legendSize + this.listInterval) * this.listPerPage - this.listInterval :\n                scale.height - 2 * padding - titleHeight;\n        }\n        this.legendRectScale = new Rect(left, top, width, height);\n        if (heatMap.paletteSettings.type === 'Gradient' || heatMap.paletteSettings.type === 'Fixed' &&\n            heatMap.legendSettings.enableSmartLegend) {\n            this.calculateColorAxisGrid(this.legendRectScale);\n        }\n    };\n    Legend.prototype.calculateColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var rect = this.legendRectScale;\n        var legendPart;\n        var text;\n        var maxTextWrapLength = 0;\n        this.segmentCollectionsLabels = [];\n        this.segmentCollections = [];\n        this.textWrapCollections = [];\n        var pathX1;\n        var pathY1;\n        var colorCollection = heatMap.paletteSettings.type === 'Gradient' ?\n            heatMap.legendColorCollection : heatMap.colorCollection;\n        var minValue = heatMap.bubbleSizeWithColor ? heatMap.minColorValue : heatMap.dataSourceMinValue;\n        var maxValue = heatMap.bubbleSizeWithColor ? heatMap.maxColorValue : heatMap.dataSourceMaxValue;\n        this.legendMinValue = this.heatMap.isColorRange ? (colorCollection[0].startValue > heatMap.dataSourceMinValue) ?\n            heatMap.dataSourceMinValue : colorCollection[0].startValue : ((colorCollection[0].value > minValue) ? minValue :\n            colorCollection[0].value);\n        this.legendMaxValue = this.heatMap.isColorRange ? (colorCollection[colorCollection.length - 1].endValue <\n            heatMap.dataSourceMaxValue) ? heatMap.dataSourceMaxValue : colorCollection[colorCollection.length - 1].endValue :\n            (colorCollection[colorCollection.length - 1].value < maxValue ? maxValue : colorCollection[colorCollection.length - 1].value);\n        if (heatMap.paletteSettings.type === 'Gradient') {\n            for (var index = 0; index < colorCollection.length; index++) {\n                var value = void 0;\n                legendPart = (this.heatMap.isColorRange && heatMap.horizontalGradient ? rect.width : rect.height) / 100;\n                if (this.heatMap.isColorRange) {\n                    if (colorCollection[0].startValue !== this.heatMap.dataSourceMinValue && index === 0 &&\n                        colorCollection[0].startValue > this.heatMap.dataSourceMinValue) {\n                        value = (this.heatMap.dataSourceMinValue - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    value = ((((colorCollection[index].startValue < heatMap.dataSourceMinValue &&\n                        colorCollection[index].endValue >\n                            heatMap.dataSourceMaxValue) ? heatMap.dataSourceMinValue : colorCollection[index].startValue) -\n                        this.legendMinValue) / (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                    this.segmentCollections.push(pathY1);\n                    this.segmentCollectionsLabels.push(pathY1);\n                    if (colorCollection[index].endValue !== ((index === colorCollection.length - 1) ?\n                        this.heatMap.dataSourceMaxValue : colorCollection[index + 1].startValue) &&\n                        this.heatMap.legendColorCollection[index].endValue < this.heatMap.dataSourceMaxValue) {\n                        if (index === colorCollection.length - 1) {\n                            value = (colorCollection[index].endValue - this.legendMinValue) /\n                                (this.legendMaxValue - this.legendMinValue) * 100;\n                            pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                            this.segmentCollections.push(pathY1);\n                        }\n                        value = ((index === colorCollection.length - 1 ? this.heatMap.dataSourceMaxValue :\n                            colorCollection[index].endValue) - this.legendMinValue) /\n                            (this.legendMaxValue - this.legendMinValue) * 100;\n                        pathY1 = (heatMap.horizontalGradient ? legendRect.x : legendRect.y) + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                }\n                else {\n                    value = ((colorCollection[index].value - this.legendMinValue) /\n                        (this.legendMaxValue - this.legendMinValue)) * 100;\n                    value = isNaN(value) ? 0 : value;\n                    if (!heatMap.horizontalGradient) {\n                        legendPart = rect.height / 100;\n                        pathY1 = legendRect.y + (legendPart * value);\n                        this.segmentCollections.push(pathY1);\n                    }\n                    else {\n                        legendPart = rect.width / 100;\n                        pathX1 = legendRect.x + (legendPart * value);\n                        this.segmentCollections.push(pathX1);\n                    }\n                }\n            }\n        }\n        var textWrapWidth;\n        if (heatMap.horizontalGradient) {\n            var segmentWidth = this.heatMap.isColorRange ? this.segmentCollectionsLabels : this.segmentCollections;\n            for (var i = 0; i < colorCollection.length; i++) {\n                if (heatMap.paletteSettings.type === 'Gradient') {\n                    var previousSegmentWidth = (segmentWidth[i] - segmentWidth[i - 1]) / 2;\n                    var nextSegmentWidth = (segmentWidth[i + 1] - segmentWidth[i]) / 2;\n                    if (i === colorCollection.length - 1) {\n                        textWrapWidth = this.heatMap.isColorRange ? (legendRect.width - segmentWidth[i - 1]) / 2 : previousSegmentWidth;\n                    }\n                    else if (i === 0) {\n                        textWrapWidth = nextSegmentWidth;\n                    }\n                    else {\n                        textWrapWidth = (previousSegmentWidth < nextSegmentWidth && !this.heatMap.isColorRange) ?\n                            previousSegmentWidth : nextSegmentWidth;\n                    }\n                }\n                else {\n                    var width = this.legendRectScale.width / heatMap.colorCollection.length;\n                    textWrapWidth = heatMap.legendSettings.labelDisplayType === 'Edge' ? width : width / 2;\n                }\n                this.textWrapCollections.push(textWrapWidth);\n                text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                maxTextWrapLength = text.length > maxTextWrapLength ? text.length : maxTextWrapLength;\n            }\n            if (heatMap.legendSettings.position === 'Bottom') {\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendGroup.y -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n            else {\n                heatMap.initialClipRect.y += (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                heatMap.initialClipRect.height -= (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n                this.legendRectScale.y = this.legendGroup.y + this.legendRectPadding;\n                this.legendGroup.height = parseInt(this.legendHeight, 10) + (this.maxLegendLabelSize.height * (maxTextWrapLength - 1));\n            }\n        }\n    };\n    Legend.prototype.renderColorAxisGrid = function (legendRect) {\n        var heatMap = this.heatMap;\n        var legendElement;\n        var pathX1;\n        var pathY1;\n        var pathX2;\n        var pathY2;\n        if (!heatMap.enableCanvasRendering) {\n            legendElement = this.heatMap.renderer.createGroup({ id: heatMap.element.id + '_ColorAxis_Grid' });\n        }\n        for (var i = 0; i < (heatMap.isColorRange ? this.segmentCollections.length : heatMap.legendColorCollection.length); i++) {\n            if (!heatMap.horizontalGradient) {\n                pathX1 = legendRect.x;\n                pathY1 = pathY2 = this.segmentCollections[i];\n                pathX2 = legendRect.x + legendRect.width;\n            }\n            else {\n                pathX1 = pathX2 = this.segmentCollections[i];\n                pathY1 = legendRect.y;\n                pathY2 = legendRect.y + legendRect.height;\n            }\n            var direction = new Line(pathX1, pathY1, pathX2, pathY2);\n            var line = new LineOption(this.heatMap.element.id + '_ColorAxis_Grid' + i, direction, '#EEEEEE', 1);\n            this.drawSvgCanvas.drawLine(line, legendElement);\n            if (!heatMap.enableCanvasRendering) {\n                this.legend.appendChild(legendElement);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendTitleTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_legendTitle') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            showTooltip(this.heatMap.legendSettings.title.text, pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_legendTitle_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n            document.getElementById(this.heatMap.element.id + '_legendTitle_Tooltip').style.visibility = 'visible';\n        }\n        else {\n            removeElement(this.heatMap.element.id + '_legendTitle_Tooltip');\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.renderLegendLabelTooltip = function (e, pageX, pageY) {\n        if (e.target.id.indexOf('_Legend_Label') !== -1 && e.target.textContent.indexOf('...') > -1) {\n            var targetId = e.target.id.split(this.heatMap.element.id + '_Legend_Label');\n            if (targetId.length === 2) {\n                var index = void 0;\n                if (targetId[1].length === 1 || this.heatMap.legendSettings.textStyle.textOverflow === 'Trim') {\n                    index = parseInt(targetId[1], 10);\n                }\n                else {\n                    index = parseInt(targetId[1].substring(0, targetId[1].length - 1), 10);\n                }\n                showTooltip(this.labelCollections[index], pageX, pageY, this.heatMap.element.offsetWidth, this.heatMap.element.id + '_LegendLabel_Tooltip', getElement(this.heatMap.element.id + '_Secondary_Element'), null, this.heatMap);\n                document.getElementById(this.heatMap.element.id + '_LegendLabel_Tooltip').style.visibility = 'visible';\n            }\n        }\n        else {\n            removeElement(this.heatMap.element.id + '_LegendLabel_Tooltip');\n        }\n    };\n    Legend.prototype.calculateListPerPage = function (rect) {\n        var heatMap = this.heatMap;\n        if (heatMap.horizontalGradient) {\n            this.lastList = [];\n            var legendX = rect.x;\n            var legendY = rect.y;\n            var size = 0;\n            var division = 0;\n            var labelX = 0;\n            var labelY = 0;\n            var interval = 20;\n            var i = void 0;\n            var legendSize = 10;\n            var padding = 5;\n            this.labelXCollections = [];\n            this.labelYCollections = [];\n            this.legendXCollections = [];\n            this.legendYCollections = [];\n            for (i = 0; i < heatMap.colorCollection.length; i++) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = this.labelCollections[i];\n                    size = measureText(text, heatMap.legendSettings.textStyle).width;\n                }\n                labelX = legendX + legendSize + padding;\n                labelY = legendY + padding;\n                var maxWidth = heatMap.legendSettings.showLabel ? labelX + size : legendX + this.legendSize + this.listInterval;\n                if (i !== 0 && maxWidth > this.legendGroup.width + this.legendGroup.x - this.listInterval) {\n                    division += 1;\n                    legendX = rect.x;\n                    legendY = rect.y + (division * interval);\n                    labelX = legendX + legendSize + padding;\n                    labelY = legendY + padding;\n                    if (division % (this.listPerPage) === 0) {\n                        this.lastList.push(i);\n                        legendY = rect.y;\n                        labelY = legendY + padding;\n                        division = 0;\n                    }\n                }\n                this.labelXCollections.push(labelX);\n                this.labelYCollections.push(labelY);\n                this.legendXCollections.push(legendX);\n                this.legendYCollections.push(legendY);\n                legendX = legendX + this.legendSize + this.labelPadding + size + this.listInterval;\n            }\n            this.lastList.push(i);\n            this.numberOfPages = this.lastList.length;\n        }\n    };\n    Legend.prototype.renderListLegendMode = function (rect, translate) {\n        var heatMap = this.heatMap;\n        var legendSize = 10;\n        var tempBorder = {\n            color: 'transparent', width: 0\n        };\n        var padding = 5; // padding for legend label from top\n        this.legendLabelTooltip = [];\n        var listRect;\n        var size = new Size(0, 0);\n        var labelX = 0;\n        var labelY = 0;\n        var legendX = rect.x;\n        var legendY = rect.y;\n        if (translate) {\n            this.renderPagingElements();\n        }\n        var x;\n        var y;\n        var textWrapWidth = heatMap.legendSettings.title.text ? this.width - (2 * (this.legendSize + this.labelPadding)) :\n            this.legendGroup.width - (this.legendSize + this.legendRectPadding + this.labelPadding);\n        if (!heatMap.horizontalGradient) {\n            x = (this.currentPage * (this.listPerPage)) - (this.listPerPage);\n            y = x + this.listPerPage;\n            y = y < heatMap.colorCollection.length ? y : heatMap.colorCollection.length;\n        }\n        else {\n            x = this.currentPage === 1 ? 0 : this.lastList[this.currentPage - 2];\n            y = this.lastList[this.currentPage - 1];\n        }\n        for (var i = x; i < y; i++) {\n            if (heatMap.legendSettings.showLabel) {\n                var text = this.labelCollections[i];\n                size = measureText(text, heatMap.legendSettings.textStyle);\n            }\n            var legendEventArgs = {\n                cancel: false, text: this.labelCollection[i], name: 'legendRender'\n            };\n            if (heatMap.horizontalGradient) {\n                legendX = this.legendXCollections[i];\n                legendY = this.legendYCollections[i];\n                labelX = this.labelXCollections[i];\n                labelY = this.labelYCollections[i];\n            }\n            labelX = legendX + this.legendSize + this.labelPadding;\n            labelY = legendY + padding;\n            this.heatMap.trigger('legendRender', legendEventArgs);\n            if (translate && heatMap.rendering && this.legendRange.length <= heatMap.colorCollection.length) {\n                var rectPosition = new LegendRange(legendX, legendY, legendSize, legendSize, heatMap.colorCollection[i].value, true, this.currentPage);\n                rectPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ?\n                    this.visibilityCollections[i] : true;\n                if (!legendEventArgs.cancel) {\n                    this.legendRange.push(rectPosition);\n                }\n                else {\n                    var rectPosition_1 = new LegendRange(legendX, legendY, 0, 0, heatMap.colorCollection[i].value, true, this.currentPage);\n                    this.legendRange.push(rectPosition_1);\n                }\n                if (heatMap.legendSettings.showLabel) {\n                    var textPosition = new LegendRange(labelX, (labelY - size.height / 2), size.width, size.height, heatMap.colorCollection[i].value, true, this.currentPage);\n                    textPosition.visible = !isNullOrUndefined(this.visibilityCollections[i]) ?\n                        this.visibilityCollections[i] : true;\n                    this.legendTextRange.push(textPosition);\n                }\n            }\n            if (!legendEventArgs.cancel) {\n                if (heatMap.legendSettings.showLabel) {\n                    var text = getTitle(this.labelCollections[i], heatMap.legendSettings.textStyle, textWrapWidth);\n                    if (text[0].indexOf('...') !== -1 && heatMap.enableCanvasRendering) {\n                        this.legendLabelTooltip.push(new CanvasTooltip(this.labelCollections[i], new Rect(labelX, labelY, size.width, size.height)));\n                    }\n                    var textBasic = new TextBasic(labelX, labelY, 'start', text, 0, 'translate(0,0)', 'middle');\n                    var options = new TextOption(heatMap.element.id + '_Legend_Label' + i, textBasic, heatMap.legendSettings.textStyle, heatMap.legendSettings.textStyle.color || heatMap.themeStyle.legendLabel);\n                    options.fill = heatMap.legendOnLoad ? options.fill : this.legendRange[i].visible ? options.fill : '#D3D3D3';\n                    this.drawSvgCanvas.createText(options, this.translategroup, text[0]);\n                    if (Browser.isIE && !heatMap.enableCanvasRendering) {\n                        this.translategroup.lastChild.setAttribute('dy', '0.6ex');\n                    }\n                }\n                listRect = new Rect(legendX, legendY, legendSize, legendSize);\n                var listColor = heatMap.legendOnLoad ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                    heatMap.colorCollection[i].color :\n                    this.legendRange[i].visible ? this.heatMap.isColorRange ? heatMap.colorCollection[i].minColor :\n                        heatMap.colorCollection[i].color : '#D3D3D3';\n                var rectItems = new RectOption(heatMap.element.id + '_legend_list' + i, listColor, tempBorder, 1, listRect);\n                this.drawSvgCanvas.drawRectangle(rectItems, this.translategroup);\n                if (heatMap.horizontalGradient) {\n                    legendX = legendX + this.legendSize + this.labelPadding + size.width + this.listInterval;\n                }\n                else {\n                    legendY += this.legendSize + this.listInterval;\n                }\n            }\n        }\n        if (!heatMap.enableCanvasRendering) {\n            this.legendGroup.height = this.legendGroup.height > 0 ? this.legendGroup.height : 0;\n            this.legendGroup.width = this.legendGroup.width > 0 ? this.legendGroup.width : 0;\n            var clippath = heatMap.renderer.createClipPath({ id: heatMap.element.id + '_LegendScale_ClipPath' });\n            var clipRect = heatMap.renderer.drawRectangle(this.legendGroup);\n            clippath.appendChild(clipRect);\n            this.translategroup.appendChild(clippath);\n            this.legend.style.cssText = 'clip-path:url(#' + clippath.id + ')';\n            this.legendScale.appendChild(this.translategroup);\n            heatMap.svgObject.appendChild(this.legend);\n        }\n    };\n    /**\n     * @private\n     */\n    Legend.prototype.translatePage = function (heatMap, page, isNext) {\n        var padding = 5;\n        if ((isNext && page >= 1 && page < this.numberOfPages) || (!isNext && page > 1 && page <= this.numberOfPages)) {\n            if (isNext) {\n                this.currentPage += 1;\n                this.legendRect.y += this.legendRect.height;\n            }\n            else {\n                this.currentPage -= 1;\n                this.legendRect.y -= this.legendRect.height;\n            }\n            if (!heatMap.enableCanvasRendering) {\n                this.paginggroup.removeChild(this.paginggroup.firstChild);\n                while (this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            else {\n                var ctx = heatMap.canvasRenderer.ctx;\n                ctx.fillRect(this.legendRectScale.x - padding, this.legendRectScale.y - padding, this.legendRectScale.width +\n                    padding, this.legendRectScale.height + (2 * padding));\n                ctx.fillRect(this.pagingRect.x, this.pagingRect.y, this.pagingRect.width, this.pagingRect.height);\n            }\n            this.renderListLegendMode(this.legendRectScale, true);\n        }\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection && heatMap.rectSelected) {\n            var ctx = heatMap.secondaryCanvasRenderer.ctx;\n            var position = heatMap.legendSettings.position;\n            var initialRect = heatMap.initialClipRect;\n            var rectX = position === 'Right' ? initialRect.x + initialRect.width : 0;\n            var rectY = position === 'Bottom' ? initialRect.y + initialRect.height : 0;\n            var rectWidth = position === 'Right' ? heatMap.availableSize.width - (initialRect.x +\n                initialRect.width) : position === 'Left' ? initialRect.x : heatMap.availableSize.width;\n            var rectHeight = position === 'Top' ? initialRect.y : position === 'Bottom' ?\n                heatMap.availableSize.height - (initialRect.y + initialRect.height) : heatMap.availableSize.height;\n            ctx.save();\n            ctx.clearRect(rectX, rectY, rectWidth, rectHeight);\n            ctx.restore();\n            var oldCanvas = document.getElementById(heatMap.element.id + '_canvas');\n            var newCanvas = document.getElementById(heatMap.element.id + '_secondary_canvas');\n            var rectImage = oldCanvas.getContext('2d').getImageData(rectX, rectY, rectWidth, rectHeight);\n            newCanvas.getContext('2d').putImageData(rectImage, rectX, rectY);\n            oldCanvas.style.opacity = '0.3';\n        }\n    };\n    /**\n     * To create div container for tooltip which appears on hovering the smart legend.\n     *\n     * @param heatmap\n     * @private\n     */\n    Legend.prototype.createTooltipDiv = function () {\n        var element = createElement('div', {\n            id: this.heatMap.element.id + 'legendLabelTooltipContainer'\n        });\n        element.style.cssText = 'position: absolute; pointer-events: none;';\n        this.heatMap.element.appendChild(element);\n    };\n    /**\n     * To render tooltip for smart legend.\n     *\n     * @private\n     */\n    Legend.prototype.renderTooltip = function (currentLegendRect) {\n        var heatMap = this.heatMap;\n        var tempTooltipText = [currentLegendRect.label];\n        var offset = null;\n        offset = parseInt(heatMap.legendSettings.textStyle.size, 10) / 2;\n        this.tooltipObject = new tool({\n            offset: offset,\n            theme: heatMap.theme,\n            content: tempTooltipText,\n            location: {\n                x: currentLegendRect.x + (currentLegendRect.width / 2),\n                y: currentLegendRect.y + (currentLegendRect.height / 2)\n            },\n            inverted: heatMap.horizontalGradient ? false : true,\n            areaBounds: {\n                height: this.legendGroup.height + this.legendGroup.y,\n                width: this.legendGroup.width + this.legendGroup.x,\n                x: heatMap.legendSettings.position === 'Right' ? 0 : this.legendGroup.x,\n                y: heatMap.legendSettings.position === 'Top' ? heatMap.titleSettings.text === '' ? this.legendGroup.height -\n                    this.legendGroup.y : this.legendGroup.y : 0\n            }\n        }, '#' + this.heatMap.element.id + 'legendLabelTooltipContainer');\n        this.tooltipObject.element.style.visibility = 'visible';\n    };\n    /**\n     * To create tooltip for smart legend.\n     *\n     * @private\n     */\n    Legend.prototype.createTooltip = function (pageX, pageY) {\n        var currentLegendRect;\n        for (var i = 0; i < this.heatMap.colorCollection.length; i++) {\n            var position = this.legendRectPositionCollection[i];\n            if (position && pageX > position.x && pageX < position.width + position.x &&\n                pageY > position.y && pageY < position.height + position.y) {\n                currentLegendRect = this.legendRectPositionCollection[i];\n                break;\n            }\n        }\n        var ele = document.getElementById(this.heatMap.element.id + 'legendLabelTooltipContainer');\n        if (ele && ele.style.visibility === 'visible' && this.tooltipObject && !this.heatMap.isTouch) {\n            this.tooltipObject.fadeOut();\n            ele.style.visibility = 'hidden';\n        }\n        if (currentLegendRect) {\n            this.renderTooltip(currentLegendRect);\n        }\n    };\n    /**\n     * Toggle the visibility of cells based on legend selection\n     *\n     * @private\n     */\n    Legend.prototype.legendRangeSelection = function (index) {\n        var heatMap = this.heatMap;\n        var legendRange = this.legendRange;\n        var padding = 5;\n        var legendPadding = heatMap.horizontalGradient ? 10 : 0;\n        var legendBound = this.legendRectScale;\n        var ctx = heatMap.canvasRenderer.ctx;\n        heatMap.rangeSelection = true;\n        if (heatMap.enableCanvasRendering) {\n            var ctx_2 = heatMap.canvasRenderer.ctx;\n            if (heatMap.legendSettings.enableSmartLegend) {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, (legendBound.width + this.labelPadding +\n                    this.maxLegendLabelSize.width) + padding, legendBound.height + 2 * (padding + legendPadding));\n            }\n            else {\n                ctx_2.fillRect(legendBound.x - padding, legendBound.y - padding, legendBound.width +\n                    padding, legendBound.height + (2 * padding));\n            }\n        }\n        else {\n            if (heatMap.legendSettings.enableSmartLegend) {\n                while (this.legend && this.legend.childNodes.length) {\n                    this.legend.removeChild(this.legend.firstChild);\n                }\n            }\n            else {\n                while (this.translategroup && this.translategroup.childNodes.length) {\n                    this.translategroup.removeChild(this.translategroup.firstChild);\n                }\n            }\n            removeElement(heatMap.heatMapSeries.containerRectObject.id);\n            if (heatMap.cellSettings.showLabel) {\n                removeElement(heatMap.heatMapSeries.containerTextObject.id);\n            }\n        }\n        if (heatMap.legendSettings.enableSmartLegend) {\n            if (heatMap.colorCollection.length !== heatMap.legendColorCollection.length) {\n                if (index === heatMap.legendColorCollection.length - 1) {\n                    heatMap.toggleValue[index - 1].visible = this.visibilityCollections[index - 1] =\n                        legendRange[index - 1].visible = !legendRange[index].visible;\n                }\n                else {\n                    if (index === heatMap.colorCollection.length - 1) {\n                        heatMap.toggleValue[index + 1].visible = this.visibilityCollections[index + 1] =\n                            legendRange[index + 1].visible = !legendRange[index].visible;\n                    }\n                }\n            }\n        }\n        heatMap.toggleValue[index].visible = this.visibilityCollections[index] =\n            legendRange[index].visible = !legendRange[index].visible;\n        heatMap.legendOnLoad = false;\n        if (heatMap.legendSettings.enableSmartLegend) {\n            this.renderSmartLegend();\n            var rectItemsSvg = new Rect(legendBound.x, legendBound.y, legendBound.width, legendBound.height);\n            this.renderLegendLabel(rectItemsSvg);\n            if (heatMap.enableCanvasRendering) {\n                ctx.save();\n                ctx.clip();\n            }\n            if (heatMap.renderingMode === 'SVG') {\n                this.renderTitle(rectItemsSvg);\n            }\n        }\n        else {\n            this.renderListLegendMode(this.legendRectScale, false);\n        }\n        if (heatMap.enableCanvasRendering) {\n            ctx.restore();\n        }\n        heatMap.heatMapSeries.renderRectSeries();\n        heatMap.clearSelection();\n        if (heatMap.enableCanvasRendering && heatMap.allowSelection) {\n            // heatMap.createSvg();\n            // heatMap.refreshBound();\n            // heatMap.createMultiCellDiv(false);\n        }\n    };\n    /**\n     * update visibility collections of legend and series\n     *\n     * @private\n     */\n    Legend.prototype.updateLegendRangeCollections = function () {\n        var heatMap = this.heatMap;\n        heatMap.rangeSelection = !heatMap.legendOnLoad ? true : false;\n        this.visibilityCollections = !heatMap.legendOnLoad ? this.visibilityCollections : [];\n        heatMap.toggleValue = !heatMap.legendOnLoad ? heatMap.toggleValue : [];\n        this.legendRange = !heatMap.legendOnLoad ? this.legendRange : [];\n        this.legendTextRange = !heatMap.legendOnLoad ? this.legendTextRange : [];\n    };\n    return Legend;\n}());\nexport { Legend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, Complex } from '@syncfusion/ej2-base';\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { increaseDateTimeInterval } from '../utils/helper';\nimport { BubbleData } from '../model/base';\n/**\n * Configures the adaptor in the heatmap.\n */\nvar Data = /** @class */ (function (_super) {\n    __extends(Data, _super);\n    function Data() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], Data.prototype, \"isJsonData\", void 0);\n    __decorate([\n        Property('None')\n    ], Data.prototype, \"adaptorType\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"xDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"yDataMapping\", void 0);\n    __decorate([\n        Property('')\n    ], Data.prototype, \"valueMapping\", void 0);\n    __decorate([\n        Complex({}, BubbleData)\n    ], Data.prototype, \"bubbleDataMapping\", void 0);\n    return Data;\n}(ChildProperty));\nexport { Data };\nvar AdaptiveMinMax = /** @class */ (function () {\n    function AdaptiveMinMax() {\n    }\n    return AdaptiveMinMax;\n}());\nexport { AdaptiveMinMax };\n/**\n *\n * The `Adaptor` module is used to handle JSON and Table data.\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(heatMap) {\n        this.reconstructedXAxis = [];\n        this.reconstructedYAxis = [];\n        this.adaptiveXMinMax = new AdaptiveMinMax();\n        this.adaptiveYMinMax = new AdaptiveMinMax();\n        this.heatMap = heatMap;\n    }\n    /**\n     * Method to construct Two Dimentional Datasource.\n     *\n     * @returns {void}\n     * @private\n     */\n    Adaptor.prototype.constructDatasource = function (dataSource, dataSourceSettings) {\n        if (dataSourceSettings.adaptorType === 'Cell') {\n            var xAxis = this.heatMap.xAxis;\n            var yAxis = this.heatMap.yAxis;\n            this.adaptiveXMinMax.min = xAxis.minimum;\n            this.adaptiveXMinMax.max = xAxis.maximum;\n            this.adaptiveYMinMax.min = yAxis.minimum;\n            this.adaptiveYMinMax.max = yAxis.maximum;\n            if (((xAxis.valueType === 'Numeric' || xAxis.valueType === 'DateTime') &&\n                (isNullOrUndefined(xAxis.minimum) || isNullOrUndefined(xAxis.maximum))) ||\n                ((yAxis.valueType === 'Numeric' || yAxis.valueType === 'DateTime') &&\n                    (isNullOrUndefined(yAxis.minimum) || isNullOrUndefined(yAxis.maximum)))) {\n                this.getMinMaxValue(dataSource, dataSourceSettings, xAxis, yAxis);\n            }\n            this.heatMap.isCellData = true;\n        }\n        if (dataSourceSettings.adaptorType === 'None') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = dataSource;\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Table') {\n            this.heatMap.completeAdaptDataSource = this.processJsonTableData(dataSource, dataSourceSettings);\n        }\n        else if (dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.heatMap.completeAdaptDataSource = this.processJsonCellData(dataSource, dataSourceSettings);\n        }\n        else if (!dataSourceSettings.isJsonData && dataSourceSettings.adaptorType === 'Cell') {\n            this.constructAdaptiveAxis();\n            this.heatMap.completeAdaptDataSource = this.processCellData(dataSource);\n            this.heatMap.isCellData = true;\n        }\n    };\n    /**\n     * Method to construct Axis Collection.\n     *\n     * @returns {void}\n     * @private\n     */\n    Adaptor.prototype.constructAdaptiveAxis = function () {\n        var xAxis = this.heatMap.xAxis;\n        var yAxis = this.heatMap.yAxis;\n        if (xAxis.valueType === 'Numeric') {\n            this.reconstructedXAxis = this.getNumericAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.increment);\n        }\n        if (yAxis.valueType === 'Numeric') {\n            this.reconstructedYAxis = this.getNumericAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.increment);\n        }\n        if (xAxis.valueType === 'DateTime') {\n            this.reconstructedXAxis = this.getDateAxisCollection(this.adaptiveXMinMax.min, this.adaptiveXMinMax.max, xAxis.intervalType, xAxis.increment);\n        }\n        if (yAxis.valueType === 'DateTime') {\n            this.reconstructedYAxis = this.getDateAxisCollection(this.adaptiveYMinMax.min, this.adaptiveYMinMax.max, yAxis.intervalType, yAxis.increment);\n        }\n    };\n    /**\n     * Method to calculate Numeric Axis Collection.\n     *\n     * @returns {string[]}\n     * @private\n     */\n    Adaptor.prototype.getNumericAxisCollection = function (min, max, increment) {\n        var loopIndex = min;\n        var tempAxisColl = [];\n        while (loopIndex <= max) {\n            tempAxisColl.push(loopIndex.toString());\n            loopIndex = loopIndex + increment;\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate DateTime Axis Collection.\n     *\n     * @returns {string[]}\n     * @private\n     */\n    Adaptor.prototype.getDateAxisCollection = function (min, max, intervalType, increment) {\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.heatMap.intl.getDateParser(option);\n        var dateFormatter = this.heatMap.intl.getDateFormat(option);\n        min = Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: min }).val))));\n        var tempInterval = min;\n        var tempAxisColl = [];\n        while (tempInterval <= max) {\n            tempAxisColl.push(new Date(tempInterval).toString());\n            tempInterval = increaseDateTimeInterval(tempInterval, 1, intervalType, increment).getTime();\n        }\n        return tempAxisColl;\n    };\n    /**\n     * Method to calculate Maximum and Minimum Value from datasource.\n     *\n     * @returns {void}\n     * @private\n     */\n    Adaptor.prototype.getMinMaxValue = function (dataSource, adapData, xAxis, yAxis) {\n        var data = dataSource;\n        var label = Object.keys(data[0]);\n        if (data.length > 0) {\n            this.adaptiveXMinMax.min = !isNullOrUndefined(xAxis.minimum) ? xAxis.minimum : adapData.isJsonData ?\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.min = !isNullOrUndefined(yAxis.minimum) ? yAxis.minimum : adapData.isJsonData ?\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data[0][label[1]] : data[0][1];\n            this.adaptiveXMinMax.max = !isNullOrUndefined(xAxis.maximum) ? xAxis.maximum : adapData.isJsonData ?\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data[0][label[0]] : data[0][0];\n            this.adaptiveYMinMax.max = !isNullOrUndefined(yAxis.maximum) ? yAxis.maximum : adapData.isJsonData ?\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                data[0][label[1]] : data[0][1];\n        }\n        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var xDataIndex = adapData.isJsonData ? data[dataIndex][label[0]] : data[dataIndex][0];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var yDataIndex = adapData.isJsonData ? data[dataIndex][label[1]] : data[dataIndex][1];\n            if (xDataIndex < this.adaptiveXMinMax.min && isNullOrUndefined(xAxis.minimum)) {\n                this.adaptiveXMinMax.min = xDataIndex;\n            }\n            if (xDataIndex > this.adaptiveXMinMax.max && isNullOrUndefined(xAxis.maximum)) {\n                this.adaptiveXMinMax.max = xDataIndex;\n            }\n            if (yDataIndex < this.adaptiveYMinMax.min && isNullOrUndefined(yAxis.minimum)) {\n                this.adaptiveYMinMax.min = yDataIndex;\n            }\n            if (yDataIndex > this.adaptiveYMinMax.max && isNullOrUndefined(yAxis.maximum)) {\n                this.adaptiveYMinMax.max = yDataIndex;\n            }\n        }\n    };\n    /**\n     * Method to process Cell datasource.\n     *\n     * @returns {Object}\n     * @private\n     */\n    Adaptor.prototype.processCellData = function (dataSource) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempDataCollection = dataSource;\n        var xLabels = this.reconstructedXAxis;\n        var yLabels = this.reconstructedYAxis;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        this.reconstructData = [];\n        if (tempDataCollection && tempDataCollection.length) {\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                if (this.heatMap.xAxis.valueType === 'Category') {\n                    currentDataXIndex = tempDataCollection[xindex][0];\n                }\n                else {\n                    currentDataXIndex = xLabels.indexOf(tempDataCollection[xindex][0].toString());\n                }\n                if (currentDataXIndex > -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    if (this.heatMap.yAxis.valueType === 'Category') {\n                        currentDataYIndex = tempDataCollection[xindex][1];\n                    }\n                    else {\n                        currentDataYIndex = yLabels.indexOf(tempDataCollection[xindex][1].toString());\n                    }\n                    if (currentDataYIndex !== -1) {\n                        while (this.reconstructData[currentDataXIndex][currentDataYIndex] !== '') {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                            isNullOrUndefined(tempDataCollection[xindex][2]) ?\n                                '' : tempDataCollection[xindex][2];\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to process JSON Cell datasource.\n     *\n     * @returns {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonCellData = function (dataSource, adaptordata) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempDataCollection = dataSource;\n        var xAxisLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yAxisLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var axisCollections = this.heatMap.axisCollections;\n        if (xAxisLabels.length === 0 || yAxisLabels.length === 0) {\n            this.generateAxisLabels(dataSource, adaptordata);\n        }\n        var xLabels = (this.heatMap.xAxis.valueType === 'Category') ? (xAxisLabels.length > 0 ?\n            this.heatMap.xAxis.labels : axisCollections[0].jsonCellLabel) : axisCollections[0].labelValue;\n        var yLabels = (this.heatMap.yAxis.valueType === 'Category') ? (yAxisLabels.length > 0 ?\n            this.heatMap.yAxis.labels : axisCollections[1].jsonCellLabel) : axisCollections[1].labelValue;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var index = 0; index < tempDataCollection.length; index++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    currentDataYIndex = this.getSplitDataValue(tempDataCollection[index], adaptordata, yLabels, adaptordata.yDataMapping.split('.'), this.heatMap.yAxis.valueType);\n                    if (currentDataYIndex !== -1) {\n                        while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                            this.reconstructData[currentDataXIndex].push('');\n                        }\n                        if (this.heatMap.bubbleSizeWithColor) {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = [\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.size.split('.'), ''),\n                                this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.bubbleDataMapping.color.split('.'), '')\n                            ];\n                        }\n                        else {\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] = this.getSplitDataValue(tempDataCollection[index], adaptordata, null, adaptordata.valueMapping.split('.'), '');\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * Method to generate axis labels when labels are not given.\n     *\n     * @returns {string}\n     * @private\n     */\n    Adaptor.prototype.generateAxisLabels = function (dataSource, adaptordata) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempDataCollection = dataSource;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var hasXLabels = xLabels.length > 0 ? true : false;\n        var hasYLabels = yLabels.length > 0 ? true : false;\n        var axisCollection = this.heatMap.axisCollections;\n        for (var index = 0; index < axisCollection.length; index++) {\n            var valueType = axisCollection[index].valueType;\n            var axis = axisCollection[index];\n            if (valueType === 'Category') {\n                var hasLabels = void 0;\n                var dataMapping = void 0;\n                var labels = void 0;\n                if (axis.orientation === 'Horizontal') {\n                    hasLabels = hasXLabels;\n                    dataMapping = adaptordata.xDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                else {\n                    hasLabels = hasYLabels;\n                    dataMapping = adaptordata.yDataMapping;\n                    axis.jsonCellLabel = labels = [];\n                }\n                if (!hasLabels) {\n                    for (var i = 0; i < tempDataCollection.length; i++) {\n                        if (dataMapping in tempDataCollection[i]) {\n                            var xValue = tempDataCollection[i][dataMapping].toString();\n                            if (labels.indexOf(xValue.toString()) === -1) {\n                                labels.push(xValue);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (valueType === 'DateTime') {\n                axis.clearAxisLabel();\n                axis.calculateDateTimeAxisLabel(this.heatMap);\n            }\n            else {\n                axis.clearAxisLabel();\n                axis.calculateNumericAxisLabels(this.heatMap);\n            }\n        }\n    };\n    /**\n     * Method to get data from complex mapping.\n     *\n     * @returns {number|string}\n     * @private\n     */\n    Adaptor.prototype.getSplitDataValue = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    tempSplitDataCollection, adaptordata, labels, tempSplitData, valueType) {\n        var value = -1;\n        this.tempSplitDataCollection = tempSplitDataCollection;\n        for (var splitIndex = 0; splitIndex < tempSplitData.length; splitIndex++) {\n            value = !isNullOrUndefined(labels) ? (!(valueType === 'DateTime') ?\n                labels.indexOf(this.tempSplitDataCollection[tempSplitData[splitIndex]]) :\n                // eslint-disable-next-line max-len\n                labels.map(Number).indexOf(+new Date(this.tempSplitDataCollection[tempSplitData[splitIndex]]).setHours(0, 0, 0, 0))) : null;\n            if (!isNullOrUndefined(this.tempSplitDataCollection)) {\n                this.tempSplitDataCollection = value !== -1 && !isNullOrUndefined(labels) ?\n                    this.tempSplitDataCollection : this.tempSplitDataCollection[tempSplitData[splitIndex]];\n            }\n            if (isNullOrUndefined(this.tempSplitDataCollection)) {\n                break;\n            }\n        }\n        value = !isNullOrUndefined(labels) ? value : isNullOrUndefined(this.tempSplitDataCollection) ||\n            this.tempSplitDataCollection.toString() === '' ? '' : parseFloat(this.tempSplitDataCollection.toString());\n        return value;\n    };\n    /**\n     * Method to process JSON Table datasource.\n     *\n     * @returns {Object}\n     * @private\n     */\n    Adaptor.prototype.processJsonTableData = function (dataSource, adaptordata) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var tempDataCollection = dataSource;\n        var currentDataXIndex = 0;\n        var currentDataYIndex = 0;\n        var xLabels = this.heatMap.xAxis.labels ? this.heatMap.xAxis.labels : [];\n        var yLabels = this.heatMap.yAxis.labels ? this.heatMap.yAxis.labels : [];\n        var key;\n        if (tempDataCollection.length) {\n            this.reconstructData = [];\n            for (var xindex = 0; xindex < tempDataCollection.length; xindex++) {\n                currentDataXIndex = this.getSplitDataValue(tempDataCollection[xindex], adaptordata, xLabels, adaptordata.xDataMapping.split('.'), this.heatMap.xAxis.valueType);\n                if (currentDataXIndex !== -1) {\n                    while (!this.reconstructData[currentDataXIndex]) {\n                        this.reconstructData.push([]);\n                    }\n                    for (var index = 0; index < Object.keys(this.tempSplitDataCollection).length; index++) {\n                        key = Object.keys(this.tempSplitDataCollection)[index];\n                        currentDataYIndex = key !== adaptordata.xDataMapping ? yLabels.indexOf(key) : -1;\n                        if (currentDataYIndex !== -1) {\n                            while (isNullOrUndefined(this.reconstructData[currentDataXIndex][currentDataYIndex])) {\n                                this.reconstructData[currentDataXIndex].push('');\n                            }\n                            this.reconstructData[currentDataXIndex][currentDataYIndex] =\n                                isNullOrUndefined(this.tempSplitDataCollection[key]) ?\n                                    '' : this.tempSplitDataCollection[key];\n                        }\n                    }\n                }\n            }\n        }\n        return this.reconstructData;\n    };\n    /**\n     * To destroy the Adaptor.\n     *\n     * @returns {void}\n     * @private\n     */\n    Adaptor.prototype.destroy = function () {\n        /**\n         * No Lines\n         */\n    };\n    /**\n     * To get Module name\n     */\n    Adaptor.prototype.getModuleName = function () {\n        return 'Adaptor';\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n","import { createElement, isNullOrUndefined, Browser, print as printWindow } from '@syncfusion/ej2-base';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap } from '@syncfusion/ej2-pdf-export';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { removeElement } from '../utils/helper';\nimport { SizeF } from '@syncfusion/ej2-pdf-export';\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for Heatmap\n     *\n     * @param  {HeatMap} control - specifies the control\n     *\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To export the file as image/svg format\n     *\n     * @param type\n     * @param fileName\n     * @private\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation) {\n        var _this = this;\n        var controlValue = this.getControlsValue();\n        var width = controlValue.width;\n        var height = controlValue.height;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var element = this.control.svgObject;\n        var url;\n        var isCanvas = this.control.enableCanvasRendering;\n        var image;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': width.toString(),\n                    'height': height.toString()\n                }\n            });\n        }\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            controlValue.svg.outerHTML +\n            '</svg>';\n        if (!isCanvas) {\n            var exportElement = this.control.svgObject.cloneNode(true);\n            var backgroundElement = exportElement.childNodes[0];\n            var backgroundColor = backgroundElement.getAttribute('fill');\n            if ((this.control.theme === 'Tailwind' || this.control.theme === 'Bootstrap5' || this.control.theme === 'Fluent' || this.control.theme === 'Material3') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                backgroundElement.setAttribute('fill', 'rgba(255,255,255, 1)');\n            }\n            else if ((this.control.theme === 'TailwindDark' || this.control.theme === 'Bootstrap5Dark' || this.control.theme === 'FluentDark' || this.control.theme === 'Material3Dark') && (backgroundColor === 'rgba(255,255,255, 0.0)' || backgroundColor === 'transparent')) {\n                backgroundElement.setAttribute('fill', 'rgba(0, 0, 0, 1)');\n            }\n            url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n                [(new XMLSerializer()).serializeToString(exportElement)], { type: 'image/svg+xml' }));\n        }\n        else {\n            url = element.toDataURL('image/png');\n        }\n        if (type === 'SVG') {\n            if (Browser.info.name === 'msie') {\n                var svg = new Blob([(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'application/octet-stream' });\n                window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n            }\n            else {\n                this.triggerDownload(fileName, type, url, isDownload);\n            }\n        }\n        else if (Browser.info.name === 'msie') {\n            var canvas = element;\n            if (!isCanvas) {\n                canvas = this.createCanvas();\n            }\n            image = canvas.toDataURL(type);\n            if (type === 'PDF') {\n                this.exportPdf(canvas, orientation, width, height, isDownload, fileName);\n            }\n            else {\n                this.doExport(type, image, fileName);\n            }\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            var backgroundColor_1 = ctx_1.shadowColor;\n            image_1.onload = (function () {\n                if ((_this.control.theme === 'Tailwind' || _this.control.theme === 'Bootstrap5' || _this.control.theme === 'Fluent' || _this.control.theme === 'Material3') && (backgroundColor_1 === 'rgba(0, 0, 0, 0)' || backgroundColor_1 === 'transparent')) {\n                    ctx_1.fillStyle = 'rgba(255,255,255, 1)';\n                }\n                else if ((_this.control.theme === 'TailwindDark' || _this.control.theme === 'Bootstrap5Dark' || _this.control.theme === 'FluentDark' || _this.control.theme === 'Material3Dark') && (backgroundColor_1 === 'rgba(0, 0, 0, 0)' || backgroundColor_1 === 'transparent')) {\n                    ctx_1.fillStyle = 'rgba(0, 0, 0, 1)';\n                }\n                ctx_1.fillRect(0, 0, element.width, element.height);\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    _this.exportPdf(element, orientation, width, height, isDownload, fileName);\n                }\n                else {\n                    if (window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n                    }\n                    else {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/png').replace('image/png', 'image/octet-stream'), isDownload);\n                    }\n                }\n            });\n            image_1.src = url;\n        }\n        if (!isCanvas) {\n            var id = document.getElementById(this.control.element.id);\n            removeElement(id + '_canvas');\n        }\n    };\n    /**\n     * To trigger the download element\n     *\n     * @param fileName\n     * @param type\n     * @param url\n     * @private\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    /**\n     * To get the maximum size value\n     *\n     * @param controls\n     * @param name\n     */\n    ExportUtils.prototype.getControlsValue = function () {\n        var width = 0;\n        var height = 0;\n        var isCanvas = this.control.enableCanvasRendering;\n        var svgObject = new SvgRenderer('').createSvg({\n            id: 'Svg_Export_Element',\n            width: 200, height: 200\n        });\n        var svg = this.control.svgObject.cloneNode(true);\n        var groupEle = this.control.renderer.createGroup({});\n        groupEle.style.cssText = 'transform: translateY(' + height + 'px)';\n        if (!isCanvas) {\n            groupEle.appendChild(svg);\n        }\n        width = Math.max(this.control.availableSize.width, width);\n        height = height + this.control.availableSize.height;\n        if (!isCanvas) {\n            svgObject.appendChild(groupEle);\n        }\n        if (!isCanvas) {\n            svgObject.setAttribute('width', width + '');\n            svgObject.setAttribute('height', height + '');\n        }\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgObject\n        };\n    };\n    ExportUtils.prototype.createCanvas = function () {\n        var heatmap = this.control;\n        var renderMode = heatmap.renderingMode;\n        heatmap.renderingMode = 'Canvas';\n        heatmap.refresh();\n        var canvas = heatmap.svgObject;\n        heatmap.renderingMode = renderMode;\n        heatmap.refresh();\n        return canvas;\n    };\n    ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName) {\n        var document = new PdfDocument();\n        var margin = document.pageSettings.margins;\n        var pdfDefaultWidth = document.pageSettings.width;\n        var pdfDefaultHeight = document.pageSettings.height;\n        var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n        document.pageSettings.orientation = orientation;\n        var exactWidth = (pdfDefaultWidth < width) ? (width + margin.left + margin.right) : pdfDefaultWidth;\n        var exactHeight = (pdfDefaultHeight < height) ? (height + margin.top + margin.bottom) : pdfDefaultHeight;\n        document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n        imageString = imageString.slice(imageString.indexOf(',') + 1);\n        document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width, height);\n        if (isDownload) {\n            document.save(fileName + '.pdf');\n            document.destroy();\n        }\n    };\n    ExportUtils.prototype.doExport = function (type, image, fileName) {\n        var images = [];\n        var fileType = type || 'JPG';\n        images = [image];\n        this.exportImage(images, fileName, fileType, image);\n    };\n    ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        for (var j = 0; j < buffers.length; j++) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n            }\n        }\n    };\n    /**\n     * To print the heatmap elements.\n     *\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.print = function () {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        if (this.control.renderingMode === 'SVG') {\n            printWindow(this.getHTMLContent(), this.printWindow);\n        }\n        else {\n            var element = this.control.svgObject;\n            var dataUrl = element.toDataURL();\n            var image_2 = new Image();\n            var ctx_2 = element.getContext('2d');\n            image_2.onload = (function () {\n                ctx_2.drawImage(image_2, 0, 0);\n            });\n            image_2.src = dataUrl;\n            printWindow(image_2, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the heatmap.\n     *\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function () {\n        var div = createElement('div');\n        div.appendChild(this.control.element.cloneNode(true));\n        return div;\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n","/**\n * Heat Map Component\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, Internationalization, Complex, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { remove, Event, EventHandler, Touch } from '@syncfusion/ej2-base';\n// eslint-disable-next-line\nimport { Browser } from '@syncfusion/ej2-base';\nimport { SvgRenderer, CanvasRenderer } from '@syncfusion/ej2-svg-base';\nimport { Size, stringToNumber, RectOption, Rect, TextBasic, measureText, removeMeasureElement } from './utils/helper';\nimport { DrawSvgCanvas, TextOption, titlePositionX, getTitle, showTooltip, getElement, SelectedCellDetails } from './utils/helper';\nimport { removeElement, CanvasTooltip, getTooltipText } from './utils/helper';\nimport { Margin, Title } from './model/base';\nimport { Theme, getThemeColor } from './model/theme';\nimport { Axis } from './axis/axis';\nimport { AxisHelper } from './axis/axis-helpers';\nimport { Series, CellSettings } from './series/series';\nimport { PaletteSettings, CellColor } from './utils/colorMapping';\nimport { TooltipSettings } from './utils/tooltip';\nimport { TwoDimensional } from './datasource/twodimensional';\nimport { LegendSettings } from '../heatmap/legend/legend';\nimport { Data } from './datasource/adaptor';\nimport { ExportUtils } from '../heatmap/utils/export';\n/**\n * Represents the heatmap control. This is used to customize the properties of the heatmap in order to visualize two-dimensional data, with values represented by gradient or solid color variations.\n * ```html\n * <div id=\"container\"/>\n * <script>\n *   var heatmapObj = new HeatMap();\n *   heatmapObj.appendTo(\"#container\");\n * </script>\n * ```\n */\nvar HeatMap = /** @class */ (function (_super) {\n    __extends(HeatMap, _super);\n    function HeatMap() {\n        /**\n         * Sets and gets the width of the heatmap. The width of the heatmap accepts pixel or percentage values given in string format.\n         *\n         * If specified as '100%, heatmap renders to the full width of its parent element.\n         *\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.enableCanvasRendering = false;\n        /** @private */\n        _this.isColorRange = false;\n        /** @private */\n        _this.isCellTapHold = false;\n        /** @private */\n        _this.selectedCellCount = 0;\n        /** @private */\n        _this.toggleValue = [];\n        /** @private */\n        _this.legendOnLoad = true;\n        /** @private */\n        _this.resizing = false;\n        /** @private */\n        _this.rendering = true;\n        /** @private */\n        _this.multiSelection = false;\n        /** @private */\n        _this.rectSelected = false;\n        /** @private */\n        _this.previousSelectedCellsRect = [];\n        /** @private */\n        _this.multiCellCollection = [];\n        /** @private */\n        _this.selectedMultiCellCollection = [];\n        /** @private */\n        _this.tempMultiCellCollection = [];\n        /**\n         * @private\n         */\n        _this.tooltipCollection = [];\n        /**\n         * @private\n         */\n        _this.isCellData = false;\n        return _this;\n    }\n    HeatMap.prototype.preRender = function () {\n        this.initPrivateVariable();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * This method is used to perform the export functionality for the heatmap.\n     *\n     * @param {ExportType} type - Specifies the type of the exported file.\n     * @param {string} fileName - Specifies the file name for the exported file.\n     * @param {PdfPageOrientation} orientation - Specifies the orientation for the exported PDF document.\n     */\n    HeatMap.prototype.export = function (type, fileName, orientation) {\n        var exportMap = new ExportUtils(this);\n        exportMap.export(type, fileName, orientation);\n    };\n    HeatMap.prototype.initPrivateVariable = function () {\n        this.renderer = new SvgRenderer(this.element.id);\n        this.canvasRenderer = new CanvasRenderer(this.element.id);\n        this.secondaryCanvasRenderer = new CanvasRenderer(this.element.id + '_secondary');\n        this.heatMapAxis = new AxisHelper(this);\n        this.heatMapSeries = new Series(this);\n        this.drawSvgCanvas = new DrawSvgCanvas(this);\n        this.twoDimensional = new TwoDimensional(this);\n        this.cellColor = new CellColor(this);\n        this.tempRectHoverClass = '';\n        this.tempTooltipRectId = '';\n        this.setCulture();\n    };\n    /**\n     * Method to set culture for heatmap\n     */\n    HeatMap.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    HeatMap.prototype.render = function () {\n        this.horizontalGradient = this.legendSettings.position === 'Bottom' || this.legendSettings.position === 'Top';\n        this.updateBubbleHelperProperty();\n        this.trigger('load', { heatmap: this });\n        if (this.theme === 'TailwindDark' || this.theme === 'Tailwind') {\n            var textSettings = { title: { textStyle: { size: '12px', fontFamily: 'Inter', fontWeight: '500' } }, textStyle: { size: '12px', fontFamily: 'Inter' } };\n            this.setProperties({ titleSettings: { textStyle: { size: '14px', fontFamily: 'Inter' } } }, true);\n            this.setProperties({ legendSettings: textSettings }, true);\n            this.setProperties({ xAxis: textSettings }, true);\n            this.setProperties({ yAxis: textSettings }, true);\n            this.setProperties({ cellSettings: { textStyle: { fontFamily: 'Inter' } } }, true);\n        }\n        if (this.theme === 'Material3' || this.theme === 'Material3Dark') {\n            var textSettings = { title: { textStyle: { size: '14px', fontFamily: 'Roboto', fontWeight: '500' } }, textStyle: { size: '12px', fontFamily: 'Roboto', fontWeight: '400' } };\n            this.setProperties({ titleSettings: { textStyle: { size: '16px', fontFamily: 'Roboto' } } }, true);\n            this.setProperties({ legendSettings: textSettings }, true);\n            this.setProperties({ xAxis: textSettings }, true);\n            this.setProperties({ yAxis: textSettings }, true);\n            this.setProperties({ cellSettings: { textStyle: { fontFamily: 'Roboto', fontWeight: '400' } } }, true);\n        }\n        if (this.theme === 'Bootstrap5' || this.theme === 'Bootstrap5Dark') {\n            var textSettings = { title: { textStyle: { size: '12px', fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"', fontWeight: '500' } }, textStyle: { size: '12px', fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"' } };\n            this.setProperties({ titleSettings: { textStyle: { size: '16px', fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"' } } }, true);\n            this.setProperties({ legendSettings: textSettings }, true);\n            this.setProperties({ xAxis: textSettings }, true);\n            this.setProperties({ yAxis: textSettings }, true);\n            this.setProperties({ cellSettings: { textStyle: { fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"' } } }, true);\n        }\n        if (this.theme === 'Fluent' || this.theme === 'FluentDark') {\n            var textSettings = { title: { textStyle: { size: '12px', fontFamily: '\"Segoe UI\", -apple-system, BlinkMacSystemFont, \"Roboto\", \"Helvetica Neue\", sans-serif', fontWeight: '500' } }, textStyle: { size: '12px', fontFamily: 'system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"' } };\n            this.setProperties({ titleSettings: { textStyle: { size: '16px', fontFamily: '\"Segoe UI\", -apple-system, BlinkMacSystemFont, \"Roboto\", \"Helvetica Neue\", sans-serif' } } }, true);\n            this.setProperties({ legendSettings: textSettings }, true);\n            this.setProperties({ xAxis: textSettings }, true);\n            this.setProperties({ yAxis: textSettings }, true);\n            this.setProperties({ cellSettings: { textStyle: { fontFamily: '\"Segoe UI\", -apple-system, BlinkMacSystemFont, \"Roboto\", \"Helvetica Neue\", sans-serif' } } }, true);\n        }\n        this.initAxis();\n        this.processInitData();\n        this.setTheme();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.createSvg();\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n        this.renderElements();\n        this.appendSvgObject();\n        if (this.tooltipModule) {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.renderComplete();\n    };\n    /**\n     * To re-calculate the datasource while changing datasource property dynamically.\n     *\n     * @private\n     */\n    HeatMap.prototype.reRenderDatasource = function () {\n        this.dataSourceMinValue = null;\n        this.dataSourceMaxValue = null;\n        this.processInitData();\n        this.calculateMaxLength();\n        this.heatMapAxis.calculateVisibleLabels();\n        this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n        this.cellColor.getColorCollection();\n        this.calculateBounds();\n    };\n    /**\n     * To process datasource property.\n     *\n     * @private\n     */\n    HeatMap.prototype.processInitData = function () {\n        if (this.adaptorModule) {\n            this.adaptorModule.constructDatasource(this.dataSource, this.dataSourceSettings);\n        }\n        else {\n            this.completeAdaptDataSource = this.dataSource;\n        }\n    };\n    /**\n     * To set render mode of heatmap as SVG or Canvas.\n     *\n     * @private\n     */\n    HeatMap.prototype.setRenderMode = function () {\n        if (this.renderingMode === 'Canvas') {\n            this.enableCanvasRendering = true;\n        }\n        else if (this.renderingMode === 'Auto' &&\n            (this.axisCollections[0].axisLabelSize * this.axisCollections[1].axisLabelSize) >= 10000) {\n            this.enableCanvasRendering = true;\n        }\n        else {\n            this.enableCanvasRendering = false;\n        }\n    };\n    /**\n     * To set bubble helper private property.\n     *\n     * @private\n     */\n    HeatMap.prototype.updateBubbleHelperProperty = function () {\n        if (this.cellSettings.tileType === 'Bubble' &&\n            (this.cellSettings.bubbleType === 'Size' || this.cellSettings.bubbleType === 'Sector')) {\n            this.legendVisibilityByCellType = false;\n        }\n        else if (this.legendModule && this.legendSettings.visible) {\n            this.legendVisibilityByCellType = true;\n        }\n        if (this.cellSettings.tileType === 'Bubble' && this.cellSettings.bubbleType === 'SizeAndColor') {\n            this.bubbleSizeWithColor = true;\n        }\n        else {\n            this.bubbleSizeWithColor = false;\n        }\n    };\n    HeatMap.prototype.renderElements = function () {\n        this.tooltipCollection = [];\n        this.renderSecondaryElement();\n        this.renderBorder();\n        this.renderTitle();\n        this.heatMapAxis.renderAxes();\n        if (this.tooltipModule && this.showTooltip) {\n            this.tooltipModule.tooltipObject = null;\n            this.tooltipModule.createTooltipDiv(this);\n        }\n        this.heatMapSeries.renderRectSeries();\n        if (this.legendModule && this.legendSettings.visible\n            && this.legendVisibilityByCellType) {\n            this.legendModule.renderLegendItems();\n            if (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltipDiv();\n            }\n        }\n        removeMeasureElement();\n    };\n    /**\n     * Get component name\n     * @private\n     */\n    HeatMap.prototype.getModuleName = function () {\n        return 'heatmap';\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @private\n     */\n    HeatMap.prototype.getPersistData = function () {\n        return '';\n    };\n    /**\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    HeatMap.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var renderer = false;\n        var refreshBounds = false;\n        var isUpdateSelection = true;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'renderingMode':\n                    this.rendering = false;\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'cellSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendModule && ((newProp.cellSettings.tileType !== (oldProp.cellSettings\n                        !== undefined && oldProp.cellSettings.tileType))\n                        || (newProp.cellSettings.bubbleType !== oldProp.cellSettings.bubbleType))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    if (this.cellSettings.tileType === 'Bubble') {\n                        isUpdateSelection = false;\n                    }\n                    this.reRenderDatasource();\n                    refreshBounds = true;\n                    break;\n                case 'showTooltip':\n                    refreshBounds = true;\n                    break;\n                case 'dataSource':\n                case 'dataSourceSettings':\n                    this.isCellData = false;\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    renderer = true;\n                    break;\n                case 'titleSettings':\n                case 'width':\n                case 'height':\n                case 'margin':\n                    refreshBounds = true;\n                    break;\n                case 'legendSettings':\n                    this.updateBubbleHelperProperty();\n                    if (this.legendVisibilityByCellType && (((newProp.legendSettings.visible !==\n                        (oldProp.legendSettings !== undefined && oldProp.legendSettings.visible)) ||\n                        (newProp.legendSettings.enableSmartLegend !== oldProp.legendSettings.enableSmartLegend)))) {\n                        this.legendOnLoad = true;\n                        this.legendModule.updateLegendRangeCollections();\n                    }\n                    else {\n                        this.legendOnLoad = false;\n                    }\n                    refreshBounds = true;\n                    break;\n                case 'yAxis':\n                case 'xAxis':\n                    this.paletteCellSelectionUpdation();\n                    this.reRenderDatasource();\n                    isUpdateSelection = false;\n                    refreshBounds = true;\n                    break;\n                case 'paletteSettings':\n                    this.paletteCellSelectionUpdation();\n                    this.twoDimensional.processDataSource(this.completeAdaptDataSource);\n                    this.cellColor.getColorCollection();\n                    this.calculateBounds();\n                    renderer = true;\n                    break;\n                case 'theme':\n                    this.setTheme();\n                    renderer = true;\n                    break;\n                case 'tooltipSettings':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.tooltipObject.fill = this.tooltipSettings.fill;\n                        this.tooltipModule.tooltipObject.border = this.tooltipSettings.border;\n                        this.tooltipModule.tooltipObject.textStyle = this.tooltipSettings.textStyle;\n                        this.tooltipModule.tooltipObject.template = this.tooltipSettings.template;\n                        this.tooltipModule.tooltipObject.refresh();\n                    }\n                    break;\n            }\n        }\n        if (!refreshBounds && renderer) {\n            this.createSvg();\n            this.renderElements();\n            this.appendSvgObject();\n            this.trigger('created');\n            if (!isUpdateSelection) {\n                this.clearSelection();\n            }\n        }\n        else if (refreshBounds) {\n            this.createSvg();\n            this.refreshBound();\n            this.appendSvgObject();\n            this.trigger('created');\n        }\n        if (this.allowSelection && this.rectSelected) {\n            if (isUpdateSelection) {\n                this.updateCellSelection();\n            }\n            else {\n                this.clearSelection();\n            }\n        }\n        this.rendering = true;\n    };\n    HeatMap.prototype.paletteCellSelectionUpdation = function () {\n        this.updateBubbleHelperProperty();\n        if (this.legendVisibilityByCellType) {\n            this.legendOnLoad = true;\n            this.legendModule.updateLegendRangeCollections();\n        }\n    };\n    /**\n     * create svg or canvas element\n     *\n     * @private\n     */\n    HeatMap.prototype.createSvg = function () {\n        this.removeSvg();\n        this.setRenderMode();\n        this.calculateSize();\n        if (!this.enableCanvasRendering) {\n            this.svgObject = this.renderer.createSvg({\n                id: this.element.id + '_svg',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.cellSettings.border.width.toString() === '0' && this.cellSettings.tileType === 'Rect') {\n                this.svgObject.setAttribute('shape-rendering', 'crispEdges');\n            }\n        }\n        else {\n            this.svgObject = this.canvasRenderer.createCanvas({\n                id: this.element.id + '_canvas',\n                width: this.availableSize.width,\n                height: this.availableSize.height\n            });\n            if (this.allowSelection) {\n                this.createMultiCellDiv(true);\n            }\n        }\n    };\n    /**\n     *  To Remove the SVG.\n     *\n     * @private\n     */\n    HeatMap.prototype.removeSvg = function () {\n        if (document.getElementById(this.element.id + '_Secondary_Element')) {\n            remove(document.getElementById(this.element.id + '_Secondary_Element'));\n        }\n        if (document.getElementById(this.element.id + 'Celltooltipcontainer')) {\n            remove(document.getElementById(this.element.id + 'Celltooltipcontainer'));\n        }\n        if (document.getElementById(this.element.id + 'legendLabelTooltipContainer')) {\n            remove(document.getElementById(this.element.id + 'legendLabelTooltipContainer'));\n        }\n        if (document.getElementById(this.element.id + '_Multi_CellSelection_Canvas')) {\n            remove(document.getElementById(this.element.id + '_Multi_CellSelection_Canvas'));\n        }\n        if (document.getElementById(this.element.id + '_CellSelection_Container')) {\n            remove(document.getElementById(this.element.id + '_CellSelection_Container'));\n        }\n        if (this.svgObject) {\n            var svgElement = document.getElementById(this.svgObject.id);\n            if (svgElement) {\n                while (this.svgObject.childNodes.length) {\n                    this.svgObject.removeChild(this.svgObject.firstChild);\n                }\n                remove(this.svgObject);\n            }\n        }\n    };\n    HeatMap.prototype.renderSecondaryElement = function () {\n        var tooltipDiv = this.createElement('div');\n        tooltipDiv.id = this.element.id + '_Secondary_Element';\n        this.element.appendChild(tooltipDiv);\n        var divElement = this.createElement('div', {\n            id: this.element.id + '_CellSelection_Container'\n        });\n        divElement.style.cssText = 'position:absolute; z-index: 2 ; top:' + this.initialClipRect.y + 'px' + '; left:' + this.initialClipRect.x + 'px';\n        this.element.appendChild(divElement);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]}\n     * @private\n     */\n    HeatMap.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.showTooltip) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this]\n            });\n        }\n        if (this.legendSettings) {\n            modules.push({\n                member: 'Legend',\n                args: [this]\n            });\n        }\n        if (this.dataSource) {\n            modules.push({\n                member: 'Adaptor',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    /**\n     * This method destroys the heatmap. This method removes the events associated with the heatmap and disposes the objects created for rendering and updating the heatmap.\n     * {% codeBlock src='heatmap/destroy/index.md' %}{% endcodeBlock %}\n     *\n     * @function destroy\n     * @returns {void}.\n     * @member of Heatmap\n     */\n    HeatMap.prototype.destroy = function () {\n        this.unWireEvents();\n        this.touchInstance.destroy();\n        this.touchInstance = null;\n        _super.prototype.destroy.call(this);\n        removeMeasureElement();\n        this.element.innerHTML = '';\n        this.element.classList.remove('e-heatmap');\n    };\n    /**\n     * Applies all the pending property changes and render the component again.\n     *\n     * @function destroy\n     * @returns {void}.\n     */\n    HeatMap.prototype.refresh = function () {\n        _super.prototype.refresh.call(this);\n        this.element.classList.add('e-heatmap');\n    };\n    /**\n     * Appending svg object to the element\n     *\n     * @private\n     */\n    HeatMap.prototype.appendSvgObject = function () {\n        if (this.enableCanvasRendering && this.allowSelection) {\n            this.createMultiCellDiv(false);\n        }\n        else {\n            this.element.appendChild(this.svgObject);\n        }\n    };\n    HeatMap.prototype.renderBorder = function () {\n        this.border = {\n            width: 0\n        };\n        var background = !isNullOrUndefined(this.backgroundColor) ? this.backgroundColor : this.themeStyle.background;\n        var width = 0;\n        var rect = new RectOption(this.element.id + '_HeatmapBorder', background, this.border, 1, new Rect(width / 2, width / 2, this.availableSize.width - width, this.availableSize.height - width));\n        this.drawSvgCanvas.drawRectangle(rect, this.svgObject);\n    };\n    HeatMap.prototype.calculateSize = function () {\n        var width = stringToNumber(this.width, this.element.offsetWidth) || this.element.offsetWidth || 600;\n        var height = stringToNumber(this.height, this.element.offsetHeight) || this.element.offsetHeight || 450;\n        this.availableSize = new Size(width, height);\n        var alignElement = this.element;\n        while (alignElement.parentNode) {\n            if (alignElement.tagName === 'BODY') {\n                break;\n            }\n            var align = alignElement.align;\n            if (align === 'center') {\n                var containerWidth = this.availableSize.width.toString();\n                this.element.style.width = containerWidth + 'px';\n                this.element.style.margin = '0 auto';\n                break;\n            }\n            alignElement = alignElement.parentElement;\n        }\n    };\n    HeatMap.prototype.renderTitle = function () {\n        if (this.titleSettings.text) {\n            var titleStyle = this.titleSettings.textStyle;\n            var anchor = titleStyle.textAlignment === 'Near' ? 'start' :\n                titleStyle.textAlignment === 'Far' ? 'end' : 'middle';\n            this.elementSize = measureText(this.titleCollection[0], titleStyle);\n            var options = new TextOption(this.element.id + '_HeatmapTitle', new TextBasic(titlePositionX(this.availableSize.width - this.margin.left - this.margin.right, this.margin.left, this.margin.right, titleStyle), this.margin.top + ((this.elementSize.height) * 3 / 4), anchor, this.titleCollection), titleStyle, titleStyle.color || this.themeStyle.heatMapTitle);\n            if (this.titleCollection.length > 1) {\n                this.drawSvgCanvas.createWrapText(options, titleStyle, this.svgObject);\n            }\n            else {\n                this.drawSvgCanvas.createText(options, this.svgObject, this.titleCollection[0]);\n                if (this.titleCollection[0].indexOf('...') !== -1 && this.enableCanvasRendering) {\n                    this.tooltipCollection.push(new CanvasTooltip(this.titleSettings.text, new Rect(this.margin.left, this.margin.top, this.elementSize.width, this.elementSize.height)));\n                }\n            }\n        }\n    };\n    HeatMap.prototype.titleTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId === (this.element.id + '_HeatmapTitle')) && (event.target.textContent.indexOf('...') > -1)) {\n            showTooltip(this.titleSettings.text, x, y, this.element.offsetWidth, this.element.id + '_Title_Tooltip', getElement(this.element.id + '_Secondary_Element'), isTouch, this);\n        }\n        else {\n            removeElement(this.element.id + '_Title_Tooltip');\n        }\n    };\n    // eslint-disable-next-line\n    HeatMap.prototype.axisTooltip = function (event, x, y, isTouch) {\n        var targetId = event.target.id;\n        if ((targetId.indexOf(this.element.id + '_XAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_Label') !== -1) ||\n            (targetId.indexOf(this.element.id + '_XAxis_MultiLevel') !== -1) ||\n            (targetId.indexOf(this.element.id + '_YAxis_MultiLevel') !== -1)) {\n            var tooltipText = getTooltipText(this.tooltipCollection, x, y);\n            if (tooltipText) {\n                showTooltip(tooltipText, x, y, this.element.offsetWidth, this.element.id + '_axis_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n            }\n            else {\n                removeElement(this.element.id + '_axis_Tooltip');\n            }\n        }\n        else {\n            removeElement(this.element.id + '_axis_Tooltip');\n        }\n    };\n    HeatMap.prototype.isHeatmapRect = function (x, y) {\n        var firstRectDetails = [];\n        var lastRectDetails = [];\n        var isRect;\n        var borderBoundary = 5;\n        firstRectDetails.push(this.heatMapSeries.rectPositionCollection[0][0]);\n        lastRectDetails.push(this.heatMapSeries.rectPositionCollection[this.yLength - 1][this.xLength - 1]);\n        if (this.cellSettings.border.width > borderBoundary && (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n            x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n            y <= (lastRectDetails[0].y + lastRectDetails[0].height)) && this.cellSettings.tileType === 'Rect') {\n            var currentRect = this.heatMapSeries.getCurrentRect(x, y);\n            var rectHeight = lastRectDetails[0].height;\n            var rectWidth = lastRectDetails[0].width;\n            var cellBorder = this.cellSettings.border.width / 2;\n            if ((x >= (currentRect.x + cellBorder) && (y >= (currentRect.y + cellBorder)) &&\n                (x <= (currentRect.x + (rectWidth - cellBorder)) &&\n                    (y <= (currentRect.y + (rectHeight - cellBorder)))))) {\n                isRect = true;\n                this.isRectBoundary = true;\n            }\n            else {\n                isRect = false;\n                this.isRectBoundary = false;\n            }\n        }\n        else {\n            isRect = (x >= firstRectDetails[0].x && y >= firstRectDetails[0].y &&\n                x <= (lastRectDetails[0].x + lastRectDetails[0].width) &&\n                y <= (lastRectDetails[0].y + lastRectDetails[0].height));\n            this.isRectBoundary = isRect;\n        }\n        return isRect;\n    };\n    HeatMap.prototype.setTheme = function () {\n        /*! Set theme */\n        this.themeStyle = getThemeColor(this.theme);\n    };\n    HeatMap.prototype.calculateBounds = function () {\n        var margin = this.margin;\n        // Title Height;\n        var titleHeight = 0;\n        var padding = (this.legendModule && this.legendSettings.position === 'Top'\n            && this.legendVisibilityByCellType) || this.titleSettings.textStyle.size === '0px' ? 0 : 16; // title padding\n        var left = margin.left;\n        var width = this.availableSize.width - left - margin.right;\n        if ((this.paletteSettings.colorGradientMode === 'Column' || this.paletteSettings.colorGradientMode === 'Row') &&\n            this.paletteSettings.type === 'Gradient') {\n            if (this.paletteSettings.palette.length === 0) {\n                this.legendVisibilityByCellType = false;\n            }\n            else {\n                for (var i = 0; i < this.paletteSettings.palette.length; i++) {\n                    if (this.paletteSettings.palette[i].value !== null || '') {\n                        this.legendVisibilityByCellType = true;\n                    }\n                    else if (this.paletteSettings.palette[i].value === null || '') {\n                        this.legendVisibilityByCellType = false;\n                        break;\n                    }\n                }\n            }\n        }\n        if (this.titleSettings.text) {\n            this.titleCollection = getTitle(this.titleSettings.text, this.titleSettings.textStyle, width);\n            titleHeight = (measureText(this.titleSettings.text, this.titleSettings.textStyle).height * this.titleCollection.length) +\n                padding;\n        }\n        var top = margin.top + titleHeight;\n        this.titleRect = new Rect(margin.left, margin.top, this.availableSize.width - margin.left - margin.right, titleHeight);\n        var height = this.availableSize.height - top - margin.bottom;\n        this.initialClipRect = new Rect(left, top, width, height);\n        var legendTop = this.initialClipRect.y;\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendBounds(this.initialClipRect);\n        }\n        this.heatMapAxis.measureAxis(this.initialClipRect);\n        if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            this.legendModule.calculateLegendSize(this.initialClipRect, legendTop);\n        }\n        this.heatMapAxis.calculateAxisSize(this.initialClipRect);\n    };\n    HeatMap.prototype.refreshBound = function () {\n        this.updateBubbleHelperProperty();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    HeatMap.prototype.initAxis = function () {\n        var axis;\n        var axes = [this.xAxis, this.yAxis];\n        this.axisCollections = [];\n        for (var i = 0, len = axes.length; i < len; i++) {\n            axis = axes[i];\n            axis.orientation = (i === 0) ? 'Horizontal' : 'Vertical';\n            axis.jsonCellLabel = [];\n            this.axisCollections.push(axis);\n        }\n    };\n    /**\n     * Method to bind events for HeatMap\n     */\n    HeatMap.prototype.wireEvents = function () {\n        var _this = this;\n        /*! Find the Events type */\n        // eslint-disable-next-line\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.add(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick, this);\n        EventHandler.add(this.element, 'dblclick', this.heatMapMouseDoubleClick, this);\n        EventHandler.add(this.element, start, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, stop, this.heatMapMouseLeave, this);\n        EventHandler.add(this.element, move, this.heatMapMouseMove, this);\n        EventHandler.add(this.element, cancel, this.heatMapMouseLeave, this);\n        this.resizeEvent = this.heatMapResize.bind(this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n        // eslint-disable-next-line\n        var heatmap = this;\n        /**\n         * Support for touch tapHold and tap for HeatMap\n         */\n        // eslint-disable-next-line\n        this.touchInstance = new Touch(this.element, {\n            tapHold: function (e) {\n                var targetId = e.originalEvent.target.id;\n                if ((targetId.indexOf(_this.element.id + '_HeatMapRect_') !== -1 || targetId.indexOf(_this.element.id + '_HeatMapRectLabels_') !== -1) && _this.allowSelection) {\n                    heatmap.isCellTapHold = true;\n                    var selectedCellCollection = [];\n                    for (var i = 0; i < _this.multiCellCollection.length; i++) {\n                        selectedCellCollection.push(_this.multiCellCollection[i]);\n                    }\n                    if (!e.originalEvent.ctrlKey || !_this.enableMultiSelect) {\n                        _this.multiCellCollection = [];\n                    }\n                    heatmap.getDataCollection();\n                    var argData = {\n                        heatmap: heatmap,\n                        cancel: false,\n                        name: 'cellSelected',\n                        data: heatmap.multiCellCollection\n                    };\n                    heatmap.trigger('cellSelected', argData);\n                    if (!argData.cancel) {\n                        if (e.ctrlKey === false || !_this.enableMultiSelect) {\n                            _this.removeSelectedCellsBorder(false);\n                        }\n                        heatmap.currentRect.allowCollection = false;\n                    }\n                    else {\n                        _this.multiCellCollection = selectedCellCollection;\n                        if (_this.multiCellCollection.length > 0 || e.ctrlKey === false || !_this.enableMultiSelect) {\n                            _this.removeSelectedCellsBorder(true);\n                        }\n                    }\n                    heatmap.setCellOpacity();\n                    window.clearTimeout(_this.tooltipTimer);\n                    heatmap.tooltipOnMouseMove(null, heatmap.currentRect, heatmap.isCellTapHold);\n                }\n            },\n            tap: function (e) {\n                var targetId = e.originalEvent.target.id;\n                if ((targetId.indexOf(_this.element.id + '_HeatMapRect_') !== -1 || targetId.indexOf(_this.element.id + '_HeatMapRectLabels_') !== -1 || targetId.indexOf(_this.element.id + '_CellSelection_Container_') !== -1)) {\n                    var isCellTap = false;\n                    if (!heatmap.isCellTapHold) {\n                        isCellTap = true;\n                    }\n                    var pageX = void 0;\n                    var pageY = void 0;\n                    var touchArg = void 0;\n                    var elementRect = _this.element.getBoundingClientRect();\n                    if (e.originalEvent.type === 'touchend' || e.originalEvent.type === 'touchstart') {\n                        _this.isTouch = true;\n                        touchArg = e.originalEvent;\n                        pageX = touchArg.changedTouches[0].clientX;\n                        pageY = touchArg.changedTouches[0].clientY;\n                    }\n                    else {\n                        _this.isTouch = false;\n                        pageX = e.originalEvent.clientX;\n                        pageY = e.originalEvent.clientY;\n                    }\n                    pageX -= elementRect.left;\n                    pageY -= elementRect.top;\n                    var currentRect = _this.heatMapSeries.getCurrentRect(pageX, pageY);\n                    window.clearTimeout(_this.tooltipTimer);\n                    heatmap.tooltipOnMouseMove(null, currentRect, isCellTap);\n                }\n            }\n        });\n        this.setStyle(this.element);\n    };\n    /**\n     * Applying styles for heatmap element\n     */\n    HeatMap.prototype.setStyle = function (element) {\n        element.style.touchAction = 'element';\n        element.style.touchAction = 'element';\n        element.style.zoom = 'none';\n        element.style.userSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n        element.style.display = 'block';\n    };\n    /**\n     * This method is used to print the rendered heatmap.\n     */\n    HeatMap.prototype.print = function () {\n        var exportChart = new ExportUtils(this);\n        exportChart.print();\n    };\n    /**\n     * Method to unbind events for HeatMap\n     */\n    HeatMap.prototype.unWireEvents = function () {\n        /*! Find the Events type */\n        // eslint-disable-next-line\n        var isIE11Pointer = Browser.isPointer;\n        var start = Browser.touchStartEvent;\n        // eslint-disable-next-line\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = isIE11Pointer ? 'pointerleave' : 'mouseleave';\n        EventHandler.remove(this.element, Browser.isDevice ? start : 'click', this.heatMapMouseClick);\n        EventHandler.remove(this.element, 'dblclick', this.heatMapMouseDoubleClick);\n        EventHandler.remove(this.element, start, this.heatMapMouseMove);\n        EventHandler.remove(this.element, stop, this.heatMapMouseLeave);\n        EventHandler.remove(this.element, move, this.heatMapMouseMove);\n        EventHandler.remove(this.element, cancel, this.heatMapMouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.resizeEvent);\n    };\n    /**\n     * Handles the heatmap resize.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    // eslint-disable-next-line\n    HeatMap.prototype.heatMapResize = function (e) {\n        var _this = this;\n        this.resizing = true;\n        var argData = {\n            heatmap: this,\n            cancel: false,\n            name: 'resized',\n            currentSize: new Size(0, 0),\n            previousSize: new Size(this.availableSize.width, this.availableSize.height)\n        };\n        if (this.resizeTimer) {\n            clearTimeout(this.resizeTimer);\n        }\n        this.resizeTimer = setTimeout(function () {\n            if (_this.isDestroyed) {\n                clearTimeout(_this.resizeTimer);\n                return;\n            }\n            _this.createSvg();\n            argData.currentSize = _this.availableSize;\n            _this.trigger('resized', argData);\n            _this.refreshBound();\n            _this.appendSvgObject();\n            if (_this.allowSelection) {\n                _this.updateCellSelection();\n            }\n            _this.trigger('loaded', ({ heatmap: _this }));\n            _this.resizing = false;\n        }, 500);\n        return false;\n    };\n    /**\n     * Method to bind selection after window resize for HeatMap\n     */\n    HeatMap.prototype.updateCellSelection = function () {\n        var wSize = this.initialClipRect.width / this.axisCollections[0].axisLabelSize;\n        var hSize = this.initialClipRect.height / this.axisCollections[1].axisLabelSize;\n        var x = this.initialClipRect.x;\n        var y = this.initialClipRect.y;\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                for (var i = 0; i < containersRect.childNodes.length; i++) {\n                    containersRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                    }\n                }\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClass = this.multiCellCollection[i].cellElement;\n                    var cellIndex = collectionClass.id.replace(this.element.id + '_HeatMapRect_', '');\n                    var index = parseInt(cellIndex, 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                        this.addSvgClass(containersRect.childNodes[index]);\n                    }\n                }\n            }\n        }\n        else if (this.enableCanvasRendering) {\n            var rect = this.multiCellCollection;\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectHeight = initialRect.y + initialRect.height;\n            var rectWidth = initialRect.x + initialRect.width;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                this.multiCellCollection[i].width = rect[i].width = wSize;\n                this.multiCellCollection[i].height = rect[i].height = hSize;\n                this.multiCellCollection[i].x = rect[i].x = x + wSize * this.multiCellCollection[i].xPosition;\n                this.multiCellCollection[i].y = rect[i].y = y + hSize * this.multiCellCollection[i].yPosition;\n                var rectImage = oldCanvas.getContext('2d').getImageData(rect[i].x, rect[i].y, rect[i].width, rect[i].height);\n                newCanvas.getContext('2d').putImageData(rectImage, rect[i].x, rect[i].y);\n                oldCanvas.style.opacity = '0.3';\n            }\n            var topPositions = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPositions, 0, 0);\n            var bottomPositions = oldCanvas.getContext('2d').getImageData(0, rectHeight, this.availableSize.width, this.availableSize.height - rectHeight);\n            newCanvas.getContext('2d').putImageData(bottomPositions, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').\n                getImageData(rectWidth, 0, this.availableSize.width - rectWidth, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, rectWidth, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n            removeElement(this.element.id + '_selectedCells');\n        }\n    };\n    HeatMap.prototype.clearSVGSelection = function () {\n        var rect = document.getElementById(this.element.id + '_Container_RectGroup');\n        var text = document.getElementById(this.element.id + '_Container_TextGroup');\n        for (var i = 0; i < rect.childNodes.length; i++) {\n            var elementClassName = rect.childNodes[i].getAttribute('class');\n            if (elementClassName === this.element.id + '_selected') {\n                this.removeSvgClass(rect.childNodes[i], elementClassName);\n            }\n            rect.childNodes[i].setAttribute('opacity', '1');\n            if (this.cellSettings.showLabel && text.childNodes[i]) {\n                text.childNodes[i].setAttribute('opacity', '1');\n            }\n        }\n    };\n    /**\n     * Get the maximum length of data source for both horizontal and vertical\n     *\n     * @private\n     */\n    HeatMap.prototype.calculateMaxLength = function () {\n        var dataSource = this.completeAdaptDataSource;\n        if (dataSource && dataSource.length > 0) {\n            var xAxisMax = dataSource.length - 1;\n            var yAxisMax = 0;\n            for (var i = 0; i <= xAxisMax; i++) {\n                var length_1 = dataSource[i].length;\n                yAxisMax = yAxisMax > length_1 ? yAxisMax : length_1;\n            }\n            this.axisCollections[0].maxLength = xAxisMax;\n            this.axisCollections[1].maxLength = yAxisMax - 1;\n        }\n        else {\n            this.axisCollections[0].maxLength = 0;\n            this.axisCollections[1].maxLength = 0;\n        }\n    };\n    /**\n     * To find mouse x, y for aligned heatmap element svg position\n     */\n    HeatMap.prototype.setMouseXY = function (pageX, pageY) {\n        var rect = this.element.getBoundingClientRect();\n        var svgCanvasRect;\n        if (this.enableCanvasRendering) {\n            svgCanvasRect = document.getElementById(this.element.id + '_canvas').getBoundingClientRect();\n        }\n        else {\n            svgCanvasRect = document.getElementById(this.element.id + '_svg').getBoundingClientRect();\n        }\n        this.mouseX = (pageX - rect.left) - Math.max(svgCanvasRect.left - rect.left, 0);\n        this.mouseY = (pageY - rect.top) - Math.max(svgCanvasRect.top - rect.top, 0);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    HeatMap.prototype.triggerClickEvent = function (e, isDoubleClick) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchstart') {\n            if (!isDoubleClick) {\n                this.isTouch = true;\n            }\n            touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            if (!isDoubleClick) {\n                this.isTouch = false;\n            }\n            pageY = e.clientY;\n            pageX = e.clientX;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n        if (isheatmapRect) {\n            var currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n            this.trigger(isDoubleClick ? 'cellDoubleClick' : 'cellClick', {\n                heatmap: this,\n                value: currentRect.value,\n                x: currentRect.x,\n                y: currentRect.y,\n                xLabel: this.heatMapSeries.hoverXAxisLabel,\n                yLabel: this.heatMapSeries.hoverYAxisLabel,\n                xValue: this.heatMapSeries.hoverXAxisValue,\n                yValue: this.heatMapSeries.hoverYAxisValue,\n                cellElement: this.enableCanvasRendering ? null : document.getElementById(currentRect.id),\n                event: e\n            });\n        }\n        return { x: pageX, y: pageY };\n    };\n    HeatMap.prototype.heatMapMouseDoubleClick = function (e) {\n        this.triggerClickEvent(e, true);\n    };\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseClick = function (e) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var position = this.triggerClickEvent(e, false);\n        var pageX = position.x;\n        var pageY = position.y;\n        this.notify('click', e);\n        if (this.paletteSettings.type !== 'Gradient' && this.legendModule\n            && this.legendSettings.visible && this.legendVisibilityByCellType) {\n            var page = this.legendModule.navigationCollections;\n            if (page.length && pageX > page[0].x && pageX < page[0].x + page[0].width &&\n                pageY > page[0].y && pageY < page[0].y + page[0].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, true);\n            }\n            else if (page.length && pageX > page[1].x && pageX < page[1].x + page[1].width &&\n                pageY > page[1].y && pageY < page[1].y + page[1].height) {\n                this.legendModule.translatePage(this, this.legendModule.currentPage, false);\n            }\n            var legendRange = this.legendModule.legendRange;\n            var legendTextRange = this.legendModule.legendTextRange;\n            var loop = true;\n            for (var i = 0; i < legendRange.length; i++) {\n                if (this.legendModule && this.legendSettings.toggleVisibility &&\n                    this.legendModule.currentPage === legendRange[i].currentPage) {\n                    if ((loop && (pageX >= legendRange[i].x\n                        && pageX <= legendRange[i].width + legendRange[i].x) &&\n                        (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                        ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                            pageX >= legendTextRange[i].x\n                            && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                            (pageY >= legendTextRange[i].y\n                                && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                        this.legendModule.legendRangeSelection(i);\n                        loop = false;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse Move.\n     *\n     * @returns {boolean}\n     *\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseMove = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        var elementRect = this.element.getBoundingClientRect();\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            this.isTouch = false;\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        pageX -= elementRect.left;\n        pageY -= elementRect.top;\n        this.setMouseXY(pageX, pageY);\n        this.mouseAction(e, pageX, pageY, touchArg, elementRect);\n        return true;\n    };\n    /**\n     * Handles the mouse Move.\n     *\n     * @returns {boolean}\n     */\n    HeatMap.prototype.mouseAction = function (e, pageX, pageY, touchArg, elementRect) {\n        var tooltipText;\n        if (e.target && e.target.id) {\n            var isheatmapRect = this.isHeatmapRect(pageX, pageY);\n            if (this.legendModule) {\n                if (isheatmapRect) {\n                    if (this.paletteSettings.type === 'Gradient' &&\n                        this.legendSettings.showGradientPointer && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                        this.legendModule.renderGradientPointer(e, pageX, pageY);\n                    }\n                }\n                else {\n                    this.legendModule.removeGradientPointer();\n                }\n                this.renderMousePointer(pageX, pageY);\n            }\n            var isshowTooltip = void 0;\n            var currentRect = void 0;\n            isshowTooltip = this.showTooltip && this.tooltipModule ? isheatmapRect : false;\n            if (isheatmapRect) {\n                currentRect = this.heatMapSeries.getCurrentRect(pageX, pageY);\n                if (e.which !== 2 && e.which !== 3) {\n                    isshowTooltip = this.cellSelectionOnMouseMove(e, currentRect, pageX, pageY, isshowTooltip);\n                }\n            }\n            this.tooltipOnMouseMove(e, currentRect, isshowTooltip, isheatmapRect);\n            if (this.legendModule && this.legendSettings.visible && this.paletteSettings.type === 'Fixed' &&\n                this.legendSettings.enableSmartLegend && this.legendSettings.labelDisplayType === 'None') {\n                this.legendModule.createTooltip(pageX, pageY);\n            }\n            if (!this.enableCanvasRendering) {\n                if (this.titleSettings.text && this.titleSettings.textStyle.textOverflow === 'Trim') {\n                    this.titleTooltip(e, pageX, pageY, this.isTouch);\n                }\n                this.axisTooltip(e, pageX, pageY, this.isTouch);\n                if (this.legendModule && this.legendSettings.visible && this.legendSettings.showLabel && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendLabelTooltip(e, pageX, pageY);\n                }\n                if (this.legendModule && this.legendSettings.visible && this.legendVisibilityByCellType) {\n                    this.legendModule.renderLegendTitleTooltip(e, pageX, pageY);\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                elementRect = this.element.getBoundingClientRect();\n                var tooltipRect = (this.paletteSettings.type === 'Fixed' && this.legendSettings.enableSmartLegend &&\n                    this.legendSettings.labelDisplayType === 'None') ? false : true;\n                tooltipText = getTooltipText(this.tooltipCollection, pageX, pageY) ||\n                    (this.legendModule && tooltipRect && (getTooltipText(this.legendModule.legendLabelTooltip, pageX, pageY)\n                        || getTooltipText(this.legendModule.legendTitleTooltip, pageX, pageY)));\n                if (tooltipText) {\n                    showTooltip(tooltipText, pageX, pageY, this.element.offsetWidth, this.element.id + '_canvas_Tooltip', getElement(this.element.id + '_Secondary_Element'), this.isTouch, this);\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Triggering cell selection\n     */\n    HeatMap.prototype.cellSelectionOnMouseMove = function (e, currentRect, pageX, pageY, isshowTooltip) {\n        if ((this.cellSettings.tileType === 'Rect' && e.type === 'mousedown' || e.type === 'touchstart'\n            || e.type === 'pointerdown') && this.allowSelection) {\n            this.previousRect = currentRect;\n            this.multiSelection = true;\n            this.rectSelected = true;\n            this.initialCellX = pageX;\n            this.initialCellY = pageY;\n            e.preventDefault();\n        }\n        if (this.cellSettings.tileType === 'Rect' && this.multiSelection && currentRect) {\n            isshowTooltip = false;\n            this.highlightSelectedCells(this.previousRect, currentRect, pageX, pageY, e);\n        }\n        return isshowTooltip;\n    };\n    /**\n     * Rendering tooltip on mouse move\n     */\n    HeatMap.prototype.tooltipOnMouseMove = function (e, currentRect, isshowTooltip, isheatmapRect) {\n        var _this = this;\n        if (isshowTooltip && currentRect) {\n            if (this.tempTooltipRectId !== currentRect.id) {\n                if (this.showTooltip) {\n                    if ((this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n                        && !this.enableCanvasRendering) {\n                        this.heatMapSeries.highlightSvgRect(currentRect.id);\n                    }\n                    if (this.tooltipTimer && !isNullOrUndefined(e) && (e.type === 'touchstart' || e.type === 'touchmove')) {\n                        window.clearTimeout(this.tooltipTimer);\n                        this.tooltipTimer = null;\n                    }\n                    this.tooltipModule.renderTooltip(currentRect);\n                    if (this.isTouch) {\n                        this.tooltipTimer = setTimeout(function () {\n                            if (!isNullOrUndefined(_this.tooltipModule.tooltipObject)) {\n                                _this.tooltipModule.tooltipObject.fadeOut();\n                            }\n                            _this.tooltipModule.isFadeout = true;\n                            window.clearTimeout(_this.tooltipTimer);\n                            _this.tooltipTimer = null;\n                        }, 1500);\n                        if (e) {\n                            if (e.type === 'touchmove') {\n                                e.preventDefault();\n                            }\n                        }\n                    }\n                }\n                this.tempTooltipRectId = currentRect.id;\n            }\n        }\n        else {\n            if (e !== null) {\n                var borderBoundary = 5;\n                if (!isheatmapRect) {\n                    if ((this.cellSettings.enableCellHighlighting || this.showTooltip) && !this.enableCanvasRendering &&\n                        this.cellSettings.border.width < borderBoundary) {\n                        this.heatMapSeries.highlightSvgRect(e.target.id);\n                    }\n                    if (this.tooltipModule && this.showTooltip) {\n                        this.tooltipModule.showHideTooltip(false, true);\n                    }\n                }\n                else if (!this.showTooltip && this.cellSettings.border.width > borderBoundary) {\n                    this.heatMapSeries.highlightSvgRect(e.target.id);\n                }\n            }\n            this.tempTooltipRectId = '';\n        }\n    };\n    /**\n     * To select the multiple cells on mouse move action\n     */\n    HeatMap.prototype.highlightSelectedCells = function (previousRect, currentRect, pageX, pageY, e) {\n        var pXIndex = previousRect.xIndex;\n        var pYIndex = previousRect.yIndex;\n        var cXIndex = currentRect.xIndex;\n        var cYIndex = currentRect.yIndex;\n        this.currentRect = currentRect;\n        this.selectedCellsRect = new Rect(0, 0, 0, 0);\n        this.selectedCellsRect.x = previousRect.x > currentRect.x ? currentRect.x : previousRect.x;\n        this.selectedCellsRect.y = previousRect.y > currentRect.y ? currentRect.y : previousRect.y;\n        this.selectedCellsRect.width = ((previousRect.x > currentRect.x ? (pXIndex - cXIndex) :\n            (cXIndex - pXIndex)) + 1) * currentRect.width;\n        this.selectedCellsRect.height = ((previousRect.y > currentRect.y ? (pYIndex - cYIndex) :\n            (cYIndex - pYIndex)) + 1) * currentRect.height;\n        if (e.type === 'touchstart' && this.multiCellCollection.length === 0 && !this.isCellTapHold) {\n            this.isCellTapHold = true;\n        }\n        else {\n            this.isCellTapHold = false;\n        }\n        e.preventDefault();\n        var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n        var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n        var rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX), Math.abs(pageY - this.initialCellY));\n        if (((rect.width > 0) && this.enableMultiSelect && e.ctrlKey === false)) {\n            this.removeSelectedCellsBorder(false);\n            var tooltipElement = document.getElementById(this.element.id + 'Celltooltipcontainer_svg');\n            if (tooltipElement) {\n                this.tooltipModule.tooltipObject = null;\n                tooltipElement.setAttribute('opacity', '0');\n            }\n        }\n        var parentDiv = document.getElementById(this.element.id + '_CellSelection_Container');\n        var svgObject = this.renderer.createSvg({\n            id: this.element.id + '_CellSelection_Container_svg',\n            width: this.initialClipRect.width,\n            height: this.initialClipRect.height\n        });\n        parentDiv.appendChild(svgObject);\n        var parent = document.getElementById(this.element.id + '_CellSelection_Container_svg');\n        if (this.enableMultiSelect) {\n            var rectItems = new RectOption(this.element.id + '_selectedCells', '#87ceeb', { color: 'transparent', width: 1 }, 1, rect, '#0000ff');\n            parent.appendChild(this.renderer.drawRectangle(rectItems));\n            document.getElementById(this.element.id + '_selectedCells').style.opacity = '0.5';\n        }\n    };\n    /**\n     * Method to get selected cell data collection for HeatMap\n     */\n    HeatMap.prototype.getDataCollection = function () {\n        var pXIndex = this.previousRect.xIndex;\n        var pYIndex = this.previousRect.yIndex;\n        var cXIndex = this.currentRect.xIndex;\n        var cYIndex = this.currentRect.yIndex;\n        var minX = cXIndex > pXIndex ? pXIndex : cXIndex;\n        var maxX = cXIndex > pXIndex ? cXIndex : pXIndex;\n        var minY = cYIndex > pYIndex ? pYIndex : cYIndex;\n        var maxY = cYIndex > pYIndex ? cYIndex : pYIndex;\n        var tempX = minX;\n        var tempY = minY;\n        var cellX = this.previousRect.x;\n        var cellY = this.previousRect.y;\n        this.getCellCollection(this.currentRect, this.previousRect, true, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        tempX = minX;\n        tempY = minY;\n        cellX = this.previousRect.x;\n        cellY = this.previousRect.y;\n        this.checkSelectedCells();\n        this.getCellCollection(this.currentRect, this.previousRect, false, tempX, tempY, maxX, maxY, minX, cellX, cellY);\n        this.selectedMultiCellCollection = [];\n        this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n        this.selectedCellCount = 0;\n    };\n    /**\n     * To get the selected datas.\n     */\n    HeatMap.prototype.getCellCollection = function (currentRect, previousRect, singleCellData, tempX, tempY, maxX, maxY, minX, cellX, cellY) {\n        var xIndex = Math.abs((currentRect.xIndex === previousRect.xIndex ?\n            0 : currentRect.xIndex - previousRect.xIndex)) + 1;\n        var yIndex = Math.abs((currentRect.yIndex === previousRect.yIndex ?\n            0 : currentRect.yIndex - previousRect.yIndex)) + 1;\n        for (var i = 0; i < (xIndex * yIndex); i++) {\n            if (singleCellData) {\n                this.getSelectedCellData(cellX, cellY, true);\n            }\n            else {\n                this.getSelectedCellData(cellX, cellY, false);\n            }\n            if (tempX < maxX) {\n                cellX += currentRect.xIndex > previousRect.xIndex ? currentRect.width : -currentRect.width;\n                tempX++;\n            }\n            else if (tempY < maxY) {\n                cellY += currentRect.yIndex > previousRect.yIndex ? currentRect.height : -currentRect.height;\n                cellX = previousRect.x;\n                tempX = minX;\n            }\n        }\n    };\n    /**\n     * To remove the selection on mouse click without ctrl key.\n     */\n    HeatMap.prototype.removeSelectedCellsBorder = function (isSelectionCancel) {\n        if (!this.enableCanvasRendering) {\n            var containerRect = document.getElementById(this.element.id + '_Container_RectGroup');\n            var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n            for (var i = 0; i < containerRect.childNodes.length; i++) {\n                var elementClassName = containerRect.childNodes[i].getAttribute('class');\n                if (isSelectionCancel) {\n                    containerRect.childNodes[i].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '1');\n                        this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                    }\n                }\n                else {\n                    containerRect.childNodes[i].setAttribute('opacity', '0.3');\n                    if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                        containerText.childNodes[i].setAttribute('opacity', '0.3');\n                        this.removeSvgClass(containerRect.childNodes[i], elementClassName);\n                    }\n                }\n            }\n        }\n        else {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                var rect = this.previousSelectedCellsRect[i];\n                ctx.save();\n                ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n        }\n    };\n    /**\n     * To highlight the selected multiple cells on mouse move action in canvas mode.\n     */\n    HeatMap.prototype.highlightSelectedAreaInCanvas = function (rect) {\n        if (rect.x) {\n            var oldCanvas = document.getElementById(this.element.id + '_canvas');\n            var newCanvas = document.getElementById(this.element.id + '_secondary_canvas');\n            var initialRect = this.initialClipRect;\n            var rectImage = oldCanvas.getContext('2d').getImageData(rect.x, rect.y, rect.width, rect.height);\n            newCanvas.getContext('2d').putImageData(rectImage, rect.x, rect.y);\n            oldCanvas.style.opacity = '0.3';\n            var topPosition = oldCanvas.getContext('2d').getImageData(0, 0, this.availableSize.width, initialRect.y);\n            newCanvas.getContext('2d').putImageData(topPosition, 0, 0);\n            var bottomPosition = oldCanvas.getContext('2d').getImageData(0, initialRect.y + initialRect.height, this.availableSize.width, this.availableSize.height - (initialRect.y + initialRect.height));\n            newCanvas.getContext('2d').putImageData(bottomPosition, 0, initialRect.y + initialRect.height);\n            var rightPosition = oldCanvas.getContext('2d').getImageData(initialRect.x + initialRect.width, 0, this.availableSize.width - (initialRect.x + initialRect.width), this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(rightPosition, initialRect.x + initialRect.width, 0);\n            var leftPosition = oldCanvas.getContext('2d').getImageData(0, 0, initialRect.x, this.availableSize.height);\n            newCanvas.getContext('2d').putImageData(leftPosition, 0, 0);\n        }\n    };\n    /**\n     * To get the collection of selected cells.\n     */\n    HeatMap.prototype.getSelectedCellData = function (cellX, cellY, cellCollection) {\n        var xAxis = this.axisCollections[0];\n        var yAxis = this.axisCollections[1];\n        var xLabels = xAxis.tooltipLabels;\n        var yLabels = yAxis.tooltipLabels.slice().reverse();\n        var rectPosition = this.heatMapSeries.getCurrentRect(cellX + 1, cellY + 1);\n        var currentRect = document.getElementById(rectPosition.id);\n        var cellDetails = new SelectedCellDetails(null, '', '', 0, 0, null, 0, 0, 0, 0, 0, 0);\n        cellDetails.value = rectPosition.value;\n        cellDetails.xLabel = xLabels[rectPosition.xIndex].toString();\n        cellDetails.yLabel = yLabels[rectPosition.yIndex].toString();\n        cellDetails.xValue = xAxis.labelValue[rectPosition.xIndex];\n        cellDetails.yValue = yAxis.labelValue.slice().reverse()[rectPosition.yIndex];\n        cellDetails.cellElement = this.enableCanvasRendering ? null : currentRect;\n        cellDetails.xPosition = rectPosition.xIndex;\n        cellDetails.yPosition = rectPosition.yIndex;\n        cellDetails.width = this.currentRect.width;\n        cellDetails.height = this.currentRect.height;\n        cellDetails.x = this.currentRect.x;\n        cellDetails.y = this.currentRect.y;\n        this.currentRect.allowCollection = true;\n        this.addSvgClass(currentRect);\n        if (cellCollection) {\n            this.selectedMultiCellCollection.push(cellDetails);\n            this.currentRect.allowCollection = false;\n        }\n        else {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                if (this.multiCellCollection[i].xPosition === cellDetails.xPosition &&\n                    this.multiCellCollection[i].yPosition === cellDetails.yPosition) {\n                    this.currentRect.allowCollection = false;\n                    if (this.selectedCellCount === this.selectedMultiCellCollection.length) {\n                        this.currentRect.allowCollection = false;\n                        if (!this.enableCanvasRendering) {\n                            for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                                var rectElement = this.selectedMultiCellCollection[j].cellElement;\n                                if (rectElement) {\n                                    var index = rectElement.id.replace(this.element.id + '_HeatMapRect_', '');\n                                    // eslint-disable-next-line\n                                    var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                                    var elementClassName = rectElement.getAttribute('class');\n                                    rectElement.setAttribute('opacity', '0.3');\n                                    var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                                    if (getText) {\n                                        getText.setAttribute('opacity', '0.3');\n                                    }\n                                    this.removeSvgClass(rectElement, elementClassName);\n                                }\n                            }\n                        }\n                        else {\n                            var ctx = this.secondaryCanvasRenderer.ctx;\n                            var rect = this.canvasSelectedCells;\n                            ctx.save();\n                            ctx.clearRect(rect.x - 1, rect.y - 1, rect.width + 2, rect.height + 2);\n                            ctx.restore();\n                            this.selectedCellsRect = new Rect(0, 0, 0, 0);\n                        }\n                        this.multiCellCollection.splice(i, 1);\n                    }\n                }\n            }\n        }\n        if (rectPosition.visible && !isNullOrUndefined(rectPosition.value) && this.currentRect.allowCollection === true) {\n            this.multiCellCollection.push(cellDetails);\n        }\n    };\n    /**\n     * To add class for selected cells\n     *\n     * @private\n     */\n    HeatMap.prototype.addSvgClass = function (element) {\n        if (!this.enableCanvasRendering) {\n            var className = this.element.id + '_selected';\n            element.setAttribute('class', className);\n        }\n    };\n    /**\n     * To remove class for unselected cells\n     *\n     * @private\n     */\n    HeatMap.prototype.removeSvgClass = function (rectElement, className) {\n        if (className) {\n            rectElement.setAttribute('class', className.replace(className, ''));\n        }\n    };\n    /**\n     * This method is used to clear the cell selection in the heatmap.\n     * {% codeBlock src='heatmap/clearSelection/index.md' %}{% endcodeBlock %}\n     */\n    HeatMap.prototype.clearSelection = function () {\n        if (!this.enableCanvasRendering && this.allowSelection) {\n            this.clearSVGSelection();\n        }\n        if (this.enableCanvasRendering) {\n            var ctx = this.secondaryCanvasRenderer.ctx;\n            for (var i = 0; i < this.previousSelectedCellsRect.length; i++) {\n                ctx.save();\n                ctx.clearRect(this.previousSelectedCellsRect[i].x - 1, this.previousSelectedCellsRect[i].y - 1, this.previousSelectedCellsRect[i].width + 2, this.previousSelectedCellsRect[i].height + 2);\n                ctx.restore();\n            }\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                var rects = this.multiCellCollection[i];\n                if (this.multiCellCollection.length > 0) {\n                    ctx.save();\n                    ctx.clearRect(rects.x - 1, rects.y - 1, rects.width + 2, rects.height + 2);\n                }\n            }\n            var canvas = document.getElementById(this.element.id + '_canvas');\n            canvas.style.opacity = '1';\n        }\n        this.tempMultiCellCollection = [];\n        this.multiCellCollection = [];\n        this.rectSelected = false;\n    };\n    HeatMap.prototype.renderMousePointer = function (pageX, pageY) {\n        var legendRange = this.legendModule.legendRange;\n        var legendTextRange = this.legendModule.legendTextRange;\n        var loop = true;\n        for (var i = 0; i < legendRange.length; i++) {\n            if (this.legendSettings.toggleVisibility && this.legendModule.currentPage === legendRange[i].currentPage) {\n                if ((loop && (pageX >= legendRange[i].x\n                    && pageX <= legendRange[i].width + legendRange[i].x) &&\n                    (pageY >= legendRange[i].y && pageY <= legendRange[i].y + legendRange[i].height) ||\n                    ((this.legendSettings.showLabel && this.legendSettings.labelDisplayType !== 'None' &&\n                        pageX >= legendTextRange[i].x\n                        && pageX <= legendTextRange[i].width + legendTextRange[i].x) &&\n                        (pageY >= legendTextRange[i].y\n                            && pageY <= legendTextRange[i].y + legendTextRange[i].height)))) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = 'Pointer';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = 'Pointer';\n                        var legendLabelTooltipContainer = document.getElementById(this.element.id + 'legendLabelTooltipContainer');\n                        if (!isNullOrUndefined(legendLabelTooltipContainer)) {\n                            legendLabelTooltipContainer.style.cursor = 'Pointer';\n                        }\n                    }\n                    loop = false;\n                }\n                else if (loop) {\n                    if (this.enableCanvasRendering) {\n                        document.getElementById(this.element.id + '_canvas').style.cursor = '';\n                    }\n                    else {\n                        document.getElementById(this.element.id + '_svg').style.cursor = '';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handles the mouse end.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    HeatMap.prototype.heatMapMouseLeave = function (e) {\n        var _this = this;\n        if (e.target && e.target.id &&\n            (this.cellSettings.enableCellHighlighting || (this.tooltipModule && this.showTooltip))\n            && !this.enableCanvasRendering) {\n            this.heatMapSeries.highlightSvgRect(this.tempTooltipRectId);\n        }\n        if (this.allowSelection && this.multiSelection) {\n            this.multiSelection = false;\n            if (e.type === 'mouseup' || e.type === 'mouseleave' || e.type === 'touchend' || e.type === 'pointerup') {\n                if (e.which !== 2 && e.which !== 3) {\n                    if (this.isCellTapHold === false) {\n                        var rect = void 0;\n                        var selectionRect = document.getElementById(this.element.id + '_selectedCells');\n                        if (!isNullOrUndefined(selectionRect)) {\n                            var rectBound = selectionRect.getClientRects()[0];\n                            rect = new Rect(rectBound.left, rectBound.top, rectBound.width, rectBound.height);\n                        }\n                        else {\n                            var pageX = void 0;\n                            var pageY = void 0;\n                            var touchArg = void 0;\n                            var elementRect = this.element.getBoundingClientRect();\n                            if (e.type === 'touchend') {\n                                this.isTouch = true;\n                                touchArg = e;\n                                pageY = touchArg.changedTouches[0].clientY;\n                                pageX = touchArg.changedTouches[0].clientX;\n                            }\n                            else {\n                                this.isTouch = false;\n                                pageY = e.clientY;\n                                pageX = e.clientX;\n                            }\n                            pageX -= elementRect.left;\n                            pageY -= elementRect.top;\n                            var x = this.initialCellX > pageX ? pageX : this.initialCellX;\n                            var y = this.initialCellY > pageY ? pageY : this.initialCellY;\n                            rect = new Rect(x - this.initialClipRect.x, y - this.initialClipRect.y, Math.abs(pageX - this.initialCellX) !== 0 ? Math.abs(pageX - this.initialCellX) :\n                                Math.abs(pageY - this.initialCellY), Math.abs(pageY - this.initialCellY));\n                        }\n                        if (!(rect.width > 0 && !this.enableMultiSelect)) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            var selectedCellCollection = [];\n                            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                                selectedCellCollection.push(this.multiCellCollection[i]);\n                            }\n                            if (e.ctrlKey === false || !this.enableMultiSelect) {\n                                this.multiCellCollection = [];\n                            }\n                            this.getDataCollection();\n                            var argData = {\n                                heatmap: this,\n                                cancel: false,\n                                name: 'cellSelected',\n                                data: this.multiCellCollection\n                            };\n                            this.trigger('cellSelected', argData);\n                            if (!argData.cancel) {\n                                if (e.ctrlKey === false || !this.enableMultiSelect) {\n                                    this.removeSelectedCellsBorder(false);\n                                }\n                                this.currentRect.allowCollection = false;\n                            }\n                            else {\n                                this.multiCellCollection = selectedCellCollection;\n                                if (this.multiCellCollection.length > 0 || e.ctrlKey === false || !this.enableMultiSelect) {\n                                    this.removeSelectedCellsBorder(true);\n                                }\n                            }\n                            this.setCellOpacity();\n                            if (e.type === 'touchend') {\n                                window.clearTimeout(this.tooltipTimer);\n                                this.tooltipOnMouseMove(null, this.currentRect, true);\n                            }\n                        }\n                    }\n                    else {\n                        this.isCellTapHold = false;\n                    }\n                }\n            }\n        }\n        if (this.tooltipModule && this.showTooltip && e.type === 'mouseleave') {\n            this.tooltipModule.showHideTooltip(false);\n        }\n        this.tempTooltipRectId = '';\n        if (this.legendModule && this.legendSettings.visible && this.legendModule.tooltipObject &&\n            this.legendModule.tooltipObject.element) {\n            var tooltipElement_1 = this.legendModule.tooltipObject.element.firstChild;\n            if (e.type === 'mouseleave') {\n                tooltipElement_1.setAttribute('opacity', '0');\n            }\n            else {\n                if (this.legendTooltipTimer) {\n                    window.clearTimeout(this.legendTooltipTimer);\n                }\n                this.legendTooltipTimer = setTimeout(function () {\n                    tooltipElement_1.setAttribute('opacity', '0');\n                }, 1500);\n            }\n        }\n        if (this.paletteSettings.type === 'Gradient' && this.legendModule && this.legendSettings.showGradientPointer &&\n            this.legendSettings.visible && this.legendVisibilityByCellType) {\n            if (e.type === 'mouseleave') {\n                this.legendModule.removeGradientPointer();\n            }\n            else {\n                if (this.gradientTimer) {\n                    window.clearTimeout(this.gradientTimer);\n                }\n                this.gradientTimer = setTimeout(function () { _this.legendModule.removeGradientPointer(); }, 1500);\n            }\n        }\n        if (this.enableCanvasRendering) {\n            var main = document.getElementById(this.element.id + '_hoverRect_canvas');\n            if (main) {\n                main.style.visibility = 'hidden';\n                this.tempRectHoverClass = '';\n            }\n        }\n        if (this.titleSettings.text && this.titleCollection[0].indexOf('...') !== -1) {\n            e.preventDefault();\n            if (!this.isTouch) {\n                if (!this.enableCanvasRendering) {\n                    removeElement(this.element.id + '_Title_Tooltip');\n                }\n                else {\n                    removeElement(this.element.id + '_canvas_Tooltip');\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Method to Check for deselection of cell.\n     */\n    HeatMap.prototype.checkSelectedCells = function () {\n        if (!this.enableCanvasRendering) {\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].cellElement.getAttribute('id')\n                        === this.multiCellCollection[i].cellElement.getAttribute('id')) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n        }\n        else {\n            this.canvasSelectedCells = new Rect(0, 0, 0, 0);\n            this.canvasSelectedCells.x = this.selectedCellsRect.x;\n            this.canvasSelectedCells.y = this.selectedCellsRect.y;\n            this.canvasSelectedCells.width = this.selectedCellsRect.width;\n            this.canvasSelectedCells.height = this.selectedCellsRect.height;\n            for (var i = 0; i < this.multiCellCollection.length; i++) {\n                for (var j = 0; j < this.selectedMultiCellCollection.length; j++) {\n                    if (this.selectedMultiCellCollection[j].xPosition === this.multiCellCollection[i].xPosition &&\n                        this.selectedMultiCellCollection[j].yPosition === this.multiCellCollection[i].yPosition) {\n                        this.selectedCellCount++;\n                    }\n                }\n            }\n            if (this.rectSelected && this.paletteSettings.type === 'Gradient') {\n                this.legendModule.removeGradientPointer();\n            }\n        }\n    };\n    /**\n     * Method to remove opacity for text of selected cell for HeatMap\n     */\n    HeatMap.prototype.removeOpacity = function (containersRect, containerText) {\n        for (var i = 0; i < containersRect.childNodes.length; i++) {\n            containersRect.childNodes[i].setAttribute('opacity', '0.3');\n            if (this.cellSettings.showLabel && containerText.childNodes[i]) {\n                containerText.childNodes[i].setAttribute('opacity', '0.3');\n            }\n        }\n    };\n    /**\n     * Method to set opacity for selected cell for HeatMap\n     */\n    HeatMap.prototype.setCellOpacity = function () {\n        if (!this.enableCanvasRendering) {\n            if (this.multiCellCollection.length !== 0) {\n                this.tempMultiCellCollection.push(this.multiCellCollection);\n                var containersRect = document.getElementById(this.element.id + '_Container_RectGroup');\n                var containerText = document.getElementById(this.element.id + '_Container_TextGroup');\n                this.removeOpacity(containersRect, containerText);\n                for (var i = 0; i < this.multiCellCollection.length; i++) {\n                    var collectionClasss = this.multiCellCollection[i].cellElement;\n                    var index = parseInt(collectionClasss.id.replace(this.element.id + '_HeatMapRect_', ''), 10);\n                    containersRect.childNodes[index].setAttribute('opacity', '1');\n                    if (this.cellSettings.showLabel) {\n                        var getText = document.getElementById(this.element.id + '_HeatMapRectLabels_' + index);\n                        if (getText) {\n                            getText.setAttribute('opacity', '1');\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this.previousSelectedCellsRect.push(this.selectedCellsRect);\n            this.highlightSelectedAreaInCanvas(this.selectedCellsRect);\n        }\n        removeElement(this.element.id + '_selectedCells');\n    };\n    /**\n     * To create div container for rendering two layers of canvas.\n     *\n     * @returns {void}\n     * @private\n     */\n    HeatMap.prototype.createMultiCellDiv = function (onLoad) {\n        if (onLoad) {\n            var divElement = this.createElement('div', {\n                id: this.element.id + '_Multi_CellSelection_Canvas'\n            });\n            divElement.style.position = 'relative';\n            this.element.appendChild(divElement);\n            divElement.appendChild(this.svgObject);\n            this.svgObject.style.position = 'absolute';\n            this.svgObject.style.left = '0px';\n            this.svgObject.style.top = '0px';\n            this.svgObject.style.zIndex = '0';\n        }\n        else {\n            var element = document.getElementById(this.element.id + '_Multi_CellSelection_Canvas');\n            var secondaryCanvas = this.secondaryCanvasRenderer.createCanvas({\n                width: this.availableSize.width,\n                height: this.availableSize.height, x: 0, y: 0\n            });\n            secondaryCanvas.style.cssText = 'position: absolute; z-index: 1';\n            element.appendChild(secondaryCanvas);\n        }\n    };\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"showTooltip\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"resized\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellRender\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Property('SVG')\n    ], HeatMap.prototype, \"renderingMode\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"dataSource\", void 0);\n    __decorate([\n        Complex({}, Data)\n    ], HeatMap.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], HeatMap.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Material')\n    ], HeatMap.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], HeatMap.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], HeatMap.prototype, \"enableMultiSelect\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], HeatMap.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ text: '', textStyle: Theme.heatMapTitleFont }, Title)\n    ], HeatMap.prototype, \"titleSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"xAxis\", void 0);\n    __decorate([\n        Complex({ position: 'Right' }, LegendSettings)\n    ], HeatMap.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Complex({}, PaletteSettings)\n    ], HeatMap.prototype, \"paletteSettings\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], HeatMap.prototype, \"tooltipSettings\", void 0);\n    __decorate([\n        Complex({}, Axis)\n    ], HeatMap.prototype, \"yAxis\", void 0);\n    __decorate([\n        Complex({}, CellSettings)\n    ], HeatMap.prototype, \"cellSettings\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"cellDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], HeatMap.prototype, \"legendRender\", void 0);\n    HeatMap = __decorate([\n        NotifyPropertyChanges\n    ], HeatMap);\n    return HeatMap;\n}(Component));\nexport { HeatMap };\n","import * as index from './index';\nindex.HeatMap.Inject(index.Legend, index.Tooltip, index.Adaptor);\nexport * from './index';\n"],"names":["getThemeColor","theme","style","toLowerCase","heatMapTitle","axisTitle","axisLabel","cellBorder","background","cellTextColor","toggledColor","emptyCellColor","legendLabel","palette","color","stringToNumber","value","containerSize","undefined","indexOf","parseInt","measureText","text","font","breakText","htmlObject","document","getElementById","createElement","id","body","appendChild","textArray","split","i","length","replace","join","innerText","position","visibility","fontSize","size","fontWeight","fontStyle","fontFamily","top","left","whiteSpace","lineHeight","Size","clientWidth","clientHeight","titlePositionX","width","leftPadding","rightPadding","titleStyle","textAlignment","createLabelTemplate","template","heatMap","labelTemplate","rectPosition","xLabels","yLabels","index","templateFunction","getTemplateFunction","rectData","dataSource","dataSourceSettings","isJsonData","adaptorType","xLabel","xIndex","yLabel","yIndex","yLabelData_1","yAxis","valueType","labels","xLabelData_1","xAxis","forEach","item","yDataMapping","Object","keys","some","key","prototype","hasOwnProperty","call","isNullOrUndefined","templateElement","convertElement","element","cssText","y","x","height","children","pointerEvents","templateFn","querySelectorAll","templateComplier","querySelector","innerHTML","trim","isVue","isVue3","e","elementId","childElement","elementLength","sum","values","_i","values_1","titlePositionY","heatmapSize","topPadding","bottomPadding","rotateTextSize","angle","dy","label","tspanElement","renderer","SvgRenderer","svgObject","createSvg","options","font-size","font-style","font-family","font-weight","transform","text-anchor","createText","len","createTSpan","box","getBoundingClientRect","remove","right","bottom","getTitle","title","titleCollection","textOverflow","textWrap","push","textTrim","textNone","getIsLineBreakLabel","isLineBreak","currentLabel","maximumWidth","textCollection","labelCollection","concat","maxWidth","substring","showTooltip","areaWidth","isTouch","heatmap","tooltip","toString","titleSettings","availableSize","this","tooltipTimer","window","clearTimeout","setTimeout","removeElement","getElement","removeMeasureElement","increaseDateTimeInterval","interval","intervalType","increment","result","Date","Math","ceil","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","getTooltipText","tooltipCollection","xPosition","yPosition","region","colorNameToHex","isRGBValue","getComputedStyle","convertToHexCode","RgbColor","componentToHex","R","G","B","hex","convertHexToColor","exec","formatValue","isCustom","format","tempInterval","formatFun","Theme","heatMapTitleFont","titleFont","axisTitleFont","axisLabelFont","legendLabelFont","rectLabelFont","tooltipFont","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Font","_super","apply","Property","ChildProperty","Margin","Border","TooltipBorder","BubbleData","Title","Complex","FillColor","PaletteCollection","AxisLabelBorder","BubbleSize","MultiLevelCategories","MultiLevelLabels","type","Collection","ColorCollection","startValue","endValue","minColor","maxColor","BubbleTooltipData","mappingName","bubbleData","LegendColorCollection","isHidden","MultipleRow","start","end","row","PaletteSettings","g","CellColor","convertToRGB","colorMapping","previousColor","nextColor","previousOffset","isColorRange","nextOffset","paletteSettings","offset","Number","colorCollection","dataSourceMinValue","fillColor","dataSourceMaxValue","getEqualColor","percent","isNaN","getPercentageColor","rgbToHex","list","convertToHex","itemColor","substr","colorSplit","previous","next","prevColor","getPercentage","full","round","getColorCollection","legendColorCollection","range","j","minValue","bubbleSizeWithColor","minColorValue","maxValue","maxColorValue","emptyPointColor","themeStyle","tempcolorMapping","orderbyOffset","isCompact","offsets","extend","updateLegendColorCollection","isLabel","unshift","returnCollection","PaletterColor","sort","a","getColorByValue","rbg","compareValue","cellSettings","tileType","bubbleType","singleValue","legendRange","legendVisibilityByCellType","legendModule","visible","colorGradientMode","TextElement","fontModel","fontColor","fill","CustomizeOption","PathOption","opacity","dashArray","_this","stroke","parseFloat","CurrentRect","xValue","yValue","displayText","textId","allowCollection","SelectedCellDetails","cellElement","RectOption","border","rect","borderColor","rx","ry","CircleOption","cx","cy","Rect","TextOption","basic","labelRotation","baseline","TextBasic","anchor","baseLine","Line","x1","y1","x2","y2","LineOption","line","strokewidth","dasharray","PathAttributes","path","borderWidth","Path","innerR","radius","counterClockWise","DrawSvgCanvas","drawRectangle","properties","parentElement","isFromSeries","enableCanvasRendering","drawCanvasRectangle","canvasRenderer","drawCircle","drawCanvasCircle","drawPath","drawCanvasPath","canvasDrawText","createWrapText","renderOptions","dominant-baseline","drawLine","translateX","translateY","wrappedLabels","elementHeight","isAxisLabel","ctx","getOptionValue","save","fillStyle","textAlign","textBaseline","translate","rotate","PI","fillText","restore","setAttributes","canvas","lineWidth","dashArrayString","setLineDash","strokeStyle","canvasCtx","beginPath","globalAlpha","drawCornerRadius","cornerRadius","moveTo","arcTo","closePath","arc","dataSplit","lineTo","Gradient","GradientColor","colorStop","CanvasTooltip","GradientPointer","pathX1","pathY1","pathX2","pathY2","pathX3","pathY3","CurrentLegendRect","LegendRange","currentPage","ToggleVisibility","MultiLevelPosition","Axis","multipleRow","nearSizes","farSizes","maxLabelSize","titleSize","multilevel","axisLabels","tooltipLabels","labelValue","axisLabelSize","axisLabelInterval","dateTimeAxisLabelInterval","maxLength","min","max","isIntersect","jsonCellLabel","multiLevelSize","xAxisMultiLabelHeight","yAxisMultiLabelHeight","multiLevelPosition","computeSize","axis","getTitleSize","getMaxLabelSize","getMultilevelLabelsHeight","multiLevelLabels","multiLevelLabelSize","multiPosition","innerPadding","orientation","level0","level1","isInversed","opposedPosition","labelSize","multiLevel","categoryLabel","categories","size_1","textStyle","gap","startPosition","endPosition","multiLevelLabelsHeight","isVertical","padding","map","heatMapAxis","calculateLeftPosition","calculateWidth","maximumTextWidth","abs","overflow","count","showLabelOn","initialClipRect","labelIntersectAction","enableTrim","startX","previousEnd","previousStart","clearMultipleRow","elementSize","axisInterval","startPoint","endPoint","reverse","labelLength","maxLabelLength","wrappedlabels","trimmedLabel","labelInterval","i_1","labelWidth","wrappedlabelSize","tempintervel","pop","k","calculateNumericAxisLabels","adaptorMin","adaptorMax","adaptorModule","isCellData","adaptiveXMinMax","adaptiveYMinMax","minimum","maximum","temp","labelFormat","match","intl","getNumberFormat","floor","calculateCategoryAxisLabels","calculateDateTimeAxisLabel","option","skeleton","dateParser","getDateParser","dateFormatter","getDateFormat","parse","DataUtil","parseJson","val","getTime","getSkeleton","calculateLabelInterval","getTotalLabelLength","numberOfDays","year","month","day","minutes","difference","days","years","months","hours","clearAxisLabel","AxisHelper","drawSvgCanvas","renderAxes","axisElement","createGroup","axes","axisCollections","drawXAxisLine","drawXAxisTitle","drawXAxisLabels","drawYAxisLine","drawYAxisTitle","drawYAxisLabels","drawMultiLevels","parent","titlepadding","calculateVisibleLabels","axisCollection","data","processLabels","measureAxis","calculateAxisSize","compactInterval","labelPadding","lableStrtX","labelElement","borderElement","lableRect","wrappedLabel","rotateSize","getLabels","getMaxLabel","drawXAxisBorder","getWrappedLabels","lableStartY","labelRect","axisWidth","indexValue","labelIndex","Browser","isIE","drawYAxisBorder","lableX","endX","endY","startY","endY1","endY2","createAxisBorderElement","lableY","labelBorder","pathOptions","canvasTranslate","renderXAxisMultiLevelLabels","renderYAxisMultiLevelLabels","textLength","pathRect","level","setProperties","alignment","textBasic","i_2","renderXAxisLabelBorder","createBorderElement","renderYAxisLabelBorder","borderIndex","calculateNumberOfDays","date","firstDate","secondDate","givenDate","CellSettings","Series","cellColor","renderRectSeries","createSeriesGroup","isValueInRange","xLength","yLength","tempX","tempY","dataXIndex","dataYIndex","cellSetting","tempWidth","tempHeight","tempVal","tempRectPosition","tempBorder","rectPositionCollection","bubbleColorValue","circleRadius","getBubbleRadius","dataMin","dataMax","setTextAndColor","updateRectDetails","showLabel","getFormatedText","rectValue","bubbleDataMapping","slice","cellRender","cellRendering","renderingMode","renderTileCell","updateLabelVisibleStatus","renderBubbleCell","renderSectorCell","checkLabelXDisplay","checkLabelYDisplay","isFinite","tempCircleRadius","getRadiusBypercentage","rangeSelection","isCellValueInRange","themeCellTextStyle","getSaturatedColor","containerTextObject","containerRectObject","toggleValue","clonedDataSource","bubbleText","yLabelValue","argData","cancel","name","trigger","adaptData","isColorValueExist","tempBubbleCollection","bubblePosition","curve","startAngle","endAngle","cX","cY","X1","Y1","tempcX","tempcY","pathBorderWidth","centerX","centerY","tempColor","sectorContibution","cos","sin","sector","calculateShapes","pathString","merge","circle","bubbleSize","valueInPrecentage","isInversedBubbleSize","saturatedColor","rgbValue","backgroundColor","highlightSvgRect","tempID","tempIndex","tempRectHoverClass","enableCellHighlighting","oldElement","rectSelected","setAttribute","getFormat","getCurrentRect","currentRect","firstRectDetails","heatMapSeries","rectX","rectY","hoverXAxisLabel","hoverXAxisValue","hoverYAxisLabel","hoverYAxisValue","TooltipSettings","Tooltip","isFirst","isFadeout","getModuleName","showHideTooltip","isShow","ele","tooltipObject","isRectBoundary","fadeOut","firstChild","destroy","createTooltip","tempTooltipText","select","tooltipSettings","tool","enableAnimation","location","content","areaBounds","createTooltipDiv","allowSelection","element2","tooltipElement","getTooltipContent","hetmapSeries","value1","value2","renderTooltip","tooltipRender","tooltipCallback","observedArgs","TwoDimensional","processDataSource","tempCloneData","completeDataSource","minVal","maxVal","tempVariable","dataLength","cloneDataIndex","minMaxDatasource","tempSizeArray","tempColorArray","z","processDataArray","minMaxVal","getMinMaxValue","internalArray","tempx","minMaxValue","getMinValue","getMaxValue","performSort","filter","checkmin","LegendSettings","Legend","maxLegendLabelSize","gradientScaleSize","segmentCollections","segmentCollectionsLabels","textWrapCollections","labelCollections","legendSize","previousOptions","listPerPage","numberOfPages","listWidth","fillRect","legendRect","lastList","navigationCollections","pagingRect","listInterval","legendLabelTooltip","legendTitleTooltip","labelXCollections","labelYCollections","legendXCollections","legendYCollections","legendRectPositionCollection","legendTextRange","visibilityCollections","renderLegendItems","legend","rectItems","legendGroup","legendBound","legendRectScale","rectItemsSvg","legendSettings","enableSmartLegend","resizing","legendOnLoad","rendering","clip","grd","ctx_1","horizontalGradient","createLinearGradient","legendMinValue","legendMaxValue","calculateCanvasColorRange","addColorStop","gradientOptions","gradientColor","cgradientColors","calculateColorRange","gradientPercentage","linearGradient","drawGradient","rectItem","renderElements","renderSmartLegend","renderTitle","renderLegendLabel","legendScale","listRect","translategroup","calculateListPerPage","paginggroup","renderListLegendMode","renderColorAxisGrid","gradientColor2","gradientColor3","gradientColor1","smartLegendRect","legendX","legendY","legendWidth","legendHeight","labelDisplayType","colorRangeLegendPosition","labelX","labelPosition","dominantBaseline","textWrapWidth","labelY","legendRectPadding","textPosition","lastChild","clippath","createClipPath","clipRect","renderGradientPointer","pageX","pageY","direction","legendPath","cellValue","removeGradientPointer","gradientPointer","clearRect","calculateLegendBounds","legendEventArg","legendRender","calculateTitleBounds","calculateListLegendBounds","listHeight","perListWidth","numberOfRows","calculateLegendSize","legendTop","axisTitlePadding","axisHeight","margin","calculateGradientScale","measureListLegendBound","maxHeight","renderPagingElements","rightArrowX","rightArrowY","textSize","textX","pagingTextRect","rightArrowRect","iconSize","rightArrow","leftX","leftArrow","leftArrowRect","leftOption","rightOption","arrow","rightarrow","scale","titleHeight","calculateColorAxisGrid","legendPart","maxTextWrapLength","segmentWidth","previousSegmentWidth","nextSegmentWidth","legendElement","renderLegendTitleTooltip","textContent","offsetWidth","renderLegendLabelTooltip","targetId","division","legendEventArgs","rectPosition_1","listColor","translatePage","page","isNext","removeChild","childNodes","secondaryCanvasRenderer","initialRect","rectWidth","rectHeight","oldCanvas","newCanvas","rectImage","getContext","getImageData","putImageData","currentLegendRect","inverted","legendRangeSelection","legendPadding","ctx_2","clearSelection","updateLegendRangeCollections","Data","AdaptiveMinMax","Adaptor","reconstructedXAxis","reconstructedYAxis","constructDatasource","completeAdaptDataSource","processJsonTableData","processJsonCellData","constructAdaptiveAxis","processCellData","getNumericAxisCollection","getDateAxisCollection","loopIndex","tempAxisColl","adapData","dataIndex","xDataIndex","yDataIndex","tempDataCollection","currentDataXIndex","currentDataYIndex","reconstructData","xindex","adaptordata","xAxisLabels","yAxisLabels","generateAxisLabels","getSplitDataValue","xDataMapping","valueMapping","hasXLabels","hasYLabels","hasLabels","dataMapping","tempSplitDataCollection","tempSplitData","splitIndex","ExportUtils","control","export","fileName","url","image","controlValue","getControlsValue","isCanvas","attrs","isDownload","userAgent","PdfPageOrientation","Landscape","svgData","svg","outerHTML","toDataURL","exportElement","cloneNode","backgroundElement","getAttribute","URL","createObjectURL","Blob","XMLSerializer","serializeToString","info","navigator","msSaveOrOpenBlob","toLocaleLowerCase","triggerDownload","createCanvas","exportPdf","doExport","image_1","Image","backgroundColor_1","shadowColor","onload","drawImage","revokeObjectURL","msToBlob","src","download","href","dispatchEvent","MouseEvent","view","bubbles","cancelable","groupEle","renderMode","refresh","PdfDocument","pageSettings","margins","pdfDefaultWidth","pdfDefaultHeight","imageString","exactWidth","exactHeight","SizeF","pages","add","graphics","PdfBitmap","images","fileType","exportImage","buffers","HTMLElement","image1","byteString","atob","buffer","ArrayBuffer","intArray","Uint8Array","charCodeAt","print","printWindow","open","outerHeight","outerWidth","resizeTo","screen","availWidth","availHeight","getHTMLContent","dataUrl","image_2","div","HeatMap","isCellTapHold","selectedCellCount","multiSelection","previousSelectedCellsRect","multiCellCollection","selectedMultiCellCollection","tempMultiCellCollection","preRender","initPrivateVariable","unWireEvents","wireEvents","CanvasRenderer","twoDimensional","tempTooltipRectId","setCulture","Internationalization","render","updateBubbleHelperProperty","textSettings","initAxis","processInitData","setTheme","calculateMaxLength","calculateBounds","appendSvgObject","tooltipModule","renderComplete","reRenderDatasource","setRenderMode","renderSecondaryElement","renderBorder","getPersistData","onPropertyChanged","newProp","oldProp","refreshBounds","isUpdateSelection","_a","paletteCellSelectionUpdation","refreshBound","updateCellSelection","removeSvg","calculateSize","createMultiCellDiv","tooltipDiv","divElement","requiredModules","modules","member","args","touchInstance","classList","offsetHeight","alignElement","parentNode","tagName","align","containerWidth","titleTooltip","event","axisTooltip","tooltipText","isHeatmapRect","isRect","lastRectDetails","titleRect","isIE11Pointer","isPointer","touchStartEvent","stop","touchEndEvent","move","touchMoveEvent","EventHandler","isDevice","heatMapMouseClick","heatMapMouseDoubleClick","heatMapMouseMove","heatMapMouseLeave","resizeEvent","heatMapResize","bind","addEventListener","Touch","tapHold","originalEvent","selectedCellCollection","ctrlKey","enableMultiSelect","getDataCollection","removeSelectedCellsBorder","setCellOpacity","tooltipOnMouseMove","tap","isCellTap","touchArg","elementRect","changedTouches","clientX","clientY","setStyle","touchAction","zoom","userSelect","webkitUserSelect","display","removeEventListener","currentSize","previousSize","resizeTimer","isDestroyed","wSize","hSize","topPositions","bottomPositions","rightPosition","leftPosition","containersRect","containerText","cellIndex","getText","addSvgClass","clearSVGSelection","elementClassName","removeSvgClass","xAxisMax","yAxisMax","length_1","setMouseXY","svgCanvasRect","mouseX","mouseY","triggerClickEvent","isDoubleClick","notify","loop","toggleVisibility","mouseAction","isheatmapRect","showGradientPointer","renderMousePointer","isshowTooltip","which","cellSelectionOnMouseMove","tooltipRect","previousRect","initialCellX","initialCellY","preventDefault","highlightSelectedCells","pXIndex","pYIndex","cXIndex","cYIndex","selectedCellsRect","parentDiv","minX","maxX","minY","maxY","cellX","cellY","getCellCollection","checkSelectedCells","canvasSelectedCells","singleCellData","getSelectedCellData","isSelectionCancel","rects","containerRect","highlightSelectedAreaInCanvas","topPosition","bottomPosition","cellCollection","cellDetails","rectElement","splice","className","cursor","legendLabelTooltipContainer","selectionRect","rectBound","getClientRects","tooltipElement_1","legendTooltipTimer","gradientTimer","main","removeOpacity","collectionClasss","onLoad","zIndex","secondaryCanvas","Event","NotifyPropertyChanges","Component","index.HeatMap","Inject","index.Legend","index.Tooltip","index.Adaptor"],"mappings":"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"}